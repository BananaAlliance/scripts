import { l2ToL1MessagePasserABI } from '@eth-optimism/contracts-ts';
import { decodeEventLog } from 'viem';
import { getTransactionReceipt } from 'viem/actions';
/**
 * Retrieves all MessagePassed events from a withdrawal transaction
 *
 * @param client - Public client to use
 * @param {GetWithdrawalMessagesParameters} parameters - {@link GetWithdrawalMessagesParameters}
 * @returns {GetWithdrawalMessagesReturnType} An array of all MessagePassed events emitted in this transaction. {@link GetWithdrawalMessagesReturnType}
 */
export async function getWithdrawalMessages(client, { hash, txReceipt }) {
    const receipt = txReceipt ?? await getTransactionReceipt(client, { hash });
    const messages = [];
    for (const log of receipt.logs) {
        /// These transactions will contain events from several contracts
        /// this decode will revert for events not from l2ToL1MessagePasserABI
        /// we are OK ignoring these events
        try {
            const event = decodeEventLog({
                abi: l2ToL1MessagePasserABI,
                data: log.data,
                topics: log.topics,
            });
            if (event.eventName === 'MessagePassed') {
                messages.push(event.args);
            }
        }
        catch { }
    }
    return { messages, blockNumber: receipt.blockNumber };
}
//# sourceMappingURL=getWithdrawalMessages.js.map