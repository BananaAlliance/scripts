import type { Address, BlockTag, Chain, Hash, Hex, PublicClient, Transport } from 'viem';
export type GetProofParameters = {
    address: Address;
    storageKeys: Hex[];
    block: Hex | BlockTag | Hash;
};
export type AccountProof = {
    address: Address;
    accountProof: Hex[];
    balance: Hex;
    nonce: Hex;
    storageHash: Hex;
    storageProof: StorageProof[];
};
export type StorageProof = {
    key: Hex;
    value: Hex;
    proof: Hex[];
};
export declare function getProof<TChain extends Chain | undefined>(client: PublicClient<Transport, TChain>, { address, storageKeys, block }: GetProofParameters): Promise<AccountProof>;
//# sourceMappingURL=getProof.d.ts.map