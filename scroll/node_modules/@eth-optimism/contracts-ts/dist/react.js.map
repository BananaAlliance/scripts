{"version":3,"sources":["../src/react.ts"],"sourcesContent":["// Generated by @wagmi/cli@1.3.0 on 7/17/2023 at 7:42:04 PM\nimport {\n  useNetwork,\n  useContractRead,\n  UseContractReadConfig,\n  useContractWrite,\n  Address,\n  UseContractWriteConfig,\n  usePrepareContractWrite,\n  UsePrepareContractWriteConfig,\n  useContractEvent,\n  UseContractEventConfig,\n} from 'wagmi'\nimport {\n  ReadContractResult,\n  WriteContractMode,\n  PrepareWriteContractResult,\n} from 'wagmi/actions'\n\n/* eslint-disable */\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// AddressManager\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdE1FCfB0851916CA5101820A69b13a4E276bd81F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa6f73589243a6A7a9023b1Fa0651b1d89c177111)\n */\nexport const addressManagerABI = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: '_name', internalType: 'string', type: 'string', indexed: true },\n      {\n        name: '_newAddress',\n        internalType: 'address',\n        type: 'address',\n        indexed: false,\n      },\n      {\n        name: '_oldAddress',\n        internalType: 'address',\n        type: 'address',\n        indexed: false,\n      },\n    ],\n    name: 'AddressSet',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'previousOwner',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'newOwner',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_name', internalType: 'string', type: 'string' }],\n    name: 'getAddress',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'renounceOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_name', internalType: 'string', type: 'string' },\n      { name: '_address', internalType: 'address', type: 'address' },\n    ],\n    name: 'setAddress',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n] as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdE1FCfB0851916CA5101820A69b13a4E276bd81F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa6f73589243a6A7a9023b1Fa0651b1d89c177111)\n */\nexport const addressManagerAddress = {\n  1: '0xdE1FCfB0851916CA5101820A69b13a4E276bd81F',\n  5: '0xa6f73589243a6A7a9023b1Fa0651b1d89c177111',\n} as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdE1FCfB0851916CA5101820A69b13a4E276bd81F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa6f73589243a6A7a9023b1Fa0651b1d89c177111)\n */\nexport const addressManagerConfig = {\n  address: addressManagerAddress,\n  abi: addressManagerABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// AssetReceiver\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport const assetReceiverABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [{ name: '_owner', internalType: 'address', type: 'address' }],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      {\n        name: 'newOwner',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n    ],\n    name: 'OwnerUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'ReceivedETH',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'withdrawer',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'recipient',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'asset',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'WithdrewERC20',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'withdrawer',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'recipient',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'asset',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'WithdrewERC721',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'withdrawer',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'recipient',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'WithdrewETH',\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_target', internalType: 'address', type: 'address' },\n      { name: '_data', internalType: 'bytes', type: 'bytes' },\n      { name: '_gas', internalType: 'uint256', type: 'uint256' },\n      { name: '_value', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'CALL',\n    outputs: [\n      { name: '', internalType: 'bool', type: 'bool' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_target', internalType: 'address', type: 'address' },\n      { name: '_data', internalType: 'bytes', type: 'bytes' },\n      { name: '_gas', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'DELEGATECALL',\n    outputs: [\n      { name: '', internalType: 'bool', type: 'bool' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'setOwner',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_asset', internalType: 'contract ERC20', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'withdrawERC20',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_asset', internalType: 'contract ERC20', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n    ],\n    name: 'withdrawERC20',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_asset', internalType: 'contract ERC721', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'withdrawERC721',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_to', internalType: 'address payable', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'withdrawETH',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_to', internalType: 'address payable', type: 'address' }],\n    name: 'withdrawETH',\n    outputs: [],\n  },\n  { stateMutability: 'payable', type: 'receive' },\n] as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport const assetReceiverAddress = {\n  1: '0x15DdA60616Ffca20371ED1659dBB78E888f65556',\n  10: '0x15DdA60616Ffca20371ED1659dBB78E888f65556',\n} as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport const assetReceiverConfig = {\n  address: assetReceiverAddress,\n  abi: assetReceiverABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// CheckBalanceHigh\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x7eC64a8a591bFf829ff6C8be76074D540ACb813F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x7eC64a8a591bFf829ff6C8be76074D540ACb813F)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x5d7103853f12109A7d27F118e54BbC654ad847E9)\n */\nexport const checkBalanceHighABI = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'params',\n        internalType: 'struct CheckBalanceHigh.Params',\n        type: 'tuple',\n        components: [\n          { name: 'target', internalType: 'address', type: 'address' },\n          { name: 'threshold', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: '_EventToExposeStructInABI__Params',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_params', internalType: 'bytes', type: 'bytes' }],\n    name: 'check',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n] as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x7eC64a8a591bFf829ff6C8be76074D540ACb813F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x7eC64a8a591bFf829ff6C8be76074D540ACb813F)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x5d7103853f12109A7d27F118e54BbC654ad847E9)\n */\nexport const checkBalanceHighAddress = {\n  1: '0x7eC64a8a591bFf829ff6C8be76074D540ACb813F',\n  5: '0x7eC64a8a591bFf829ff6C8be76074D540ACb813F',\n  420: '0x5d7103853f12109A7d27F118e54BbC654ad847E9',\n} as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x7eC64a8a591bFf829ff6C8be76074D540ACb813F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x7eC64a8a591bFf829ff6C8be76074D540ACb813F)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x5d7103853f12109A7d27F118e54BbC654ad847E9)\n */\nexport const checkBalanceHighConfig = {\n  address: checkBalanceHighAddress,\n  abi: checkBalanceHighABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// CheckBalanceLow\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x381a4eFC2A2C914eA1889722bB4B44Fa6BD5b640)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x381a4eFC2A2C914eA1889722bB4B44Fa6BD5b640)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x7Ce13D154FAEE5C8B3E6b19d4Add16f21d884474)\n */\nexport const checkBalanceLowABI = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'params',\n        internalType: 'struct CheckBalanceLow.Params',\n        type: 'tuple',\n        components: [\n          { name: 'target', internalType: 'address', type: 'address' },\n          { name: 'threshold', internalType: 'uint256', type: 'uint256' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: '_EventToExposeStructInABI__Params',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_params', internalType: 'bytes', type: 'bytes' }],\n    name: 'check',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n] as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x381a4eFC2A2C914eA1889722bB4B44Fa6BD5b640)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x381a4eFC2A2C914eA1889722bB4B44Fa6BD5b640)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x7Ce13D154FAEE5C8B3E6b19d4Add16f21d884474)\n */\nexport const checkBalanceLowAddress = {\n  1: '0x381a4eFC2A2C914eA1889722bB4B44Fa6BD5b640',\n  5: '0x381a4eFC2A2C914eA1889722bB4B44Fa6BD5b640',\n  420: '0x7Ce13D154FAEE5C8B3E6b19d4Add16f21d884474',\n} as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x381a4eFC2A2C914eA1889722bB4B44Fa6BD5b640)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x381a4eFC2A2C914eA1889722bB4B44Fa6BD5b640)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x7Ce13D154FAEE5C8B3E6b19d4Add16f21d884474)\n */\nexport const checkBalanceLowConfig = {\n  address: checkBalanceLowAddress,\n  abi: checkBalanceLowABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// CheckGelatoLow\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4f7CFc43f6D262a085F3b946cAC69E7a8E39BBAa)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4f7CFc43f6D262a085F3b946cAC69E7a8E39BBAa)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0xF9c8a4Cb4021f57F9f6d69799cA9BefF64524862)\n */\nexport const checkGelatoLowABI = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'params',\n        internalType: 'struct CheckGelatoLow.Params',\n        type: 'tuple',\n        components: [\n          { name: 'treasury', internalType: 'address', type: 'address' },\n          { name: 'threshold', internalType: 'uint256', type: 'uint256' },\n          { name: 'recipient', internalType: 'address', type: 'address' },\n        ],\n        indexed: false,\n      },\n    ],\n    name: '_EventToExposeStructInABI__Params',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_params', internalType: 'bytes', type: 'bytes' }],\n    name: 'check',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n] as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4f7CFc43f6D262a085F3b946cAC69E7a8E39BBAa)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4f7CFc43f6D262a085F3b946cAC69E7a8E39BBAa)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0xF9c8a4Cb4021f57F9f6d69799cA9BefF64524862)\n */\nexport const checkGelatoLowAddress = {\n  1: '0x4f7CFc43f6D262a085F3b946cAC69E7a8E39BBAa',\n  5: '0x4f7CFc43f6D262a085F3b946cAC69E7a8E39BBAa',\n  420: '0xF9c8a4Cb4021f57F9f6d69799cA9BefF64524862',\n} as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4f7CFc43f6D262a085F3b946cAC69E7a8E39BBAa)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4f7CFc43f6D262a085F3b946cAC69E7a8E39BBAa)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0xF9c8a4Cb4021f57F9f6d69799cA9BefF64524862)\n */\nexport const checkGelatoLowConfig = {\n  address: checkGelatoLowAddress,\n  abi: checkGelatoLowABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// CheckTrue\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5c741a38cb11424711231777D71689C458eE835D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5c741a38cb11424711231777D71689C458eE835D)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x47443D0C184e022F19BD1578F5bca6B8a9F58E32)\n */\nexport const checkTrueABI = [\n  {\n    stateMutability: 'pure',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],\n    name: 'check',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n] as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5c741a38cb11424711231777D71689C458eE835D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5c741a38cb11424711231777D71689C458eE835D)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x47443D0C184e022F19BD1578F5bca6B8a9F58E32)\n */\nexport const checkTrueAddress = {\n  1: '0x5c741a38cb11424711231777D71689C458eE835D',\n  5: '0x5c741a38cb11424711231777D71689C458eE835D',\n  420: '0x47443D0C184e022F19BD1578F5bca6B8a9F58E32',\n} as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5c741a38cb11424711231777D71689C458eE835D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5c741a38cb11424711231777D71689C458eE835D)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x47443D0C184e022F19BD1578F5bca6B8a9F58E32)\n */\nexport const checkTrueConfig = {\n  address: checkTrueAddress,\n  abi: checkTrueABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Drippie\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport const drippieABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [{ name: '_owner', internalType: 'address', type: 'address' }],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'nameref',\n        internalType: 'string',\n        type: 'string',\n        indexed: true,\n      },\n      { name: 'name', internalType: 'string', type: 'string', indexed: false },\n      {\n        name: 'config',\n        internalType: 'struct Drippie.DripConfig',\n        type: 'tuple',\n        components: [\n          { name: 'reentrant', internalType: 'bool', type: 'bool' },\n          { name: 'interval', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'dripcheck',\n            internalType: 'contract IDripCheck',\n            type: 'address',\n          },\n          { name: 'checkparams', internalType: 'bytes', type: 'bytes' },\n          {\n            name: 'actions',\n            internalType: 'struct Drippie.DripAction[]',\n            type: 'tuple[]',\n            components: [\n              {\n                name: 'target',\n                internalType: 'address payable',\n                type: 'address',\n              },\n              { name: 'data', internalType: 'bytes', type: 'bytes' },\n              { name: 'value', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'DripCreated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'nameref',\n        internalType: 'string',\n        type: 'string',\n        indexed: true,\n      },\n      { name: 'name', internalType: 'string', type: 'string', indexed: false },\n      {\n        name: 'executor',\n        internalType: 'address',\n        type: 'address',\n        indexed: false,\n      },\n      {\n        name: 'timestamp',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'DripExecuted',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'nameref',\n        internalType: 'string',\n        type: 'string',\n        indexed: true,\n      },\n      { name: 'name', internalType: 'string', type: 'string', indexed: false },\n      {\n        name: 'status',\n        internalType: 'enum Drippie.DripStatus',\n        type: 'uint8',\n        indexed: false,\n      },\n    ],\n    name: 'DripStatusUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      {\n        name: 'newOwner',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n    ],\n    name: 'OwnerUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'ReceivedETH',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'withdrawer',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'recipient',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'asset',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'WithdrewERC20',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'withdrawer',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'recipient',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'asset',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'WithdrewERC721',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'withdrawer',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'recipient',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'WithdrewETH',\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_target', internalType: 'address', type: 'address' },\n      { name: '_data', internalType: 'bytes', type: 'bytes' },\n      { name: '_value', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'CALL',\n    outputs: [\n      { name: '', internalType: 'bool', type: 'bool' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_target', internalType: 'address', type: 'address' },\n      { name: '_data', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'DELEGATECALL',\n    outputs: [\n      { name: '', internalType: 'bool', type: 'bool' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_name', internalType: 'string', type: 'string' },\n      {\n        name: '_config',\n        internalType: 'struct Drippie.DripConfig',\n        type: 'tuple',\n        components: [\n          { name: 'reentrant', internalType: 'bool', type: 'bool' },\n          { name: 'interval', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'dripcheck',\n            internalType: 'contract IDripCheck',\n            type: 'address',\n          },\n          { name: 'checkparams', internalType: 'bytes', type: 'bytes' },\n          {\n            name: 'actions',\n            internalType: 'struct Drippie.DripAction[]',\n            type: 'tuple[]',\n            components: [\n              {\n                name: 'target',\n                internalType: 'address payable',\n                type: 'address',\n              },\n              { name: 'data', internalType: 'bytes', type: 'bytes' },\n              { name: 'value', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n    name: 'create',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_name', internalType: 'string', type: 'string' }],\n    name: 'drip',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'string', type: 'string' }],\n    name: 'drips',\n    outputs: [\n      {\n        name: 'status',\n        internalType: 'enum Drippie.DripStatus',\n        type: 'uint8',\n      },\n      {\n        name: 'config',\n        internalType: 'struct Drippie.DripConfig',\n        type: 'tuple',\n        components: [\n          { name: 'reentrant', internalType: 'bool', type: 'bool' },\n          { name: 'interval', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'dripcheck',\n            internalType: 'contract IDripCheck',\n            type: 'address',\n          },\n          { name: 'checkparams', internalType: 'bytes', type: 'bytes' },\n          {\n            name: 'actions',\n            internalType: 'struct Drippie.DripAction[]',\n            type: 'tuple[]',\n            components: [\n              {\n                name: 'target',\n                internalType: 'address payable',\n                type: 'address',\n              },\n              { name: 'data', internalType: 'bytes', type: 'bytes' },\n              { name: 'value', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n      { name: 'last', internalType: 'uint256', type: 'uint256' },\n      { name: 'count', internalType: 'uint256', type: 'uint256' },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_name', internalType: 'string', type: 'string' }],\n    name: 'executable',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'setOwner',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_name', internalType: 'string', type: 'string' },\n      {\n        name: '_status',\n        internalType: 'enum Drippie.DripStatus',\n        type: 'uint8',\n      },\n    ],\n    name: 'status',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_asset', internalType: 'contract ERC20', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'withdrawERC20',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_asset', internalType: 'contract ERC20', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n    ],\n    name: 'withdrawERC20',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_asset', internalType: 'contract ERC721', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'withdrawERC721',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_to', internalType: 'address payable', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'withdrawETH',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_to', internalType: 'address payable', type: 'address' }],\n    name: 'withdrawETH',\n    outputs: [],\n  },\n  { stateMutability: 'payable', type: 'receive' },\n] as const\n\n/**\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport const drippieAddress = {\n  1: '0x44b3A2a040057eBafC601A78647e805fd58B1f50',\n} as const\n\n/**\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport const drippieConfig = {\n  address: drippieAddress,\n  abi: drippieABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Drippie_goerli\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport const drippieGoerliABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [{ name: '_owner', internalType: 'address', type: 'address' }],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'nameref',\n        internalType: 'string',\n        type: 'string',\n        indexed: true,\n      },\n      { name: 'name', internalType: 'string', type: 'string', indexed: false },\n      {\n        name: 'config',\n        internalType: 'struct Drippie.DripConfig',\n        type: 'tuple',\n        components: [\n          { name: 'reentrant', internalType: 'bool', type: 'bool' },\n          { name: 'interval', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'dripcheck',\n            internalType: 'contract IDripCheck',\n            type: 'address',\n          },\n          { name: 'checkparams', internalType: 'bytes', type: 'bytes' },\n          {\n            name: 'actions',\n            internalType: 'struct Drippie.DripAction[]',\n            type: 'tuple[]',\n            components: [\n              {\n                name: 'target',\n                internalType: 'address payable',\n                type: 'address',\n              },\n              { name: 'data', internalType: 'bytes', type: 'bytes' },\n              { name: 'value', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'DripCreated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'nameref',\n        internalType: 'string',\n        type: 'string',\n        indexed: true,\n      },\n      { name: 'name', internalType: 'string', type: 'string', indexed: false },\n      {\n        name: 'executor',\n        internalType: 'address',\n        type: 'address',\n        indexed: false,\n      },\n      {\n        name: 'timestamp',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'DripExecuted',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'nameref',\n        internalType: 'string',\n        type: 'string',\n        indexed: true,\n      },\n      { name: 'name', internalType: 'string', type: 'string', indexed: false },\n      {\n        name: 'status',\n        internalType: 'enum Drippie.DripStatus',\n        type: 'uint8',\n        indexed: false,\n      },\n    ],\n    name: 'DripStatusUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      {\n        name: 'newOwner',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n    ],\n    name: 'OwnerUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'ReceivedETH',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'withdrawer',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'recipient',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'asset',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'WithdrewERC20',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'withdrawer',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'recipient',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'asset',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'WithdrewERC721',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'withdrawer',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'recipient',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'WithdrewETH',\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_target', internalType: 'address', type: 'address' },\n      { name: '_data', internalType: 'bytes', type: 'bytes' },\n      { name: '_value', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'CALL',\n    outputs: [\n      { name: '', internalType: 'bool', type: 'bool' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_target', internalType: 'address', type: 'address' },\n      { name: '_data', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'DELEGATECALL',\n    outputs: [\n      { name: '', internalType: 'bool', type: 'bool' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_name', internalType: 'string', type: 'string' },\n      {\n        name: '_config',\n        internalType: 'struct Drippie.DripConfig',\n        type: 'tuple',\n        components: [\n          { name: 'reentrant', internalType: 'bool', type: 'bool' },\n          { name: 'interval', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'dripcheck',\n            internalType: 'contract IDripCheck',\n            type: 'address',\n          },\n          { name: 'checkparams', internalType: 'bytes', type: 'bytes' },\n          {\n            name: 'actions',\n            internalType: 'struct Drippie.DripAction[]',\n            type: 'tuple[]',\n            components: [\n              {\n                name: 'target',\n                internalType: 'address payable',\n                type: 'address',\n              },\n              { name: 'data', internalType: 'bytes', type: 'bytes' },\n              { name: 'value', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n    name: 'create',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_name', internalType: 'string', type: 'string' }],\n    name: 'drip',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'string', type: 'string' }],\n    name: 'drips',\n    outputs: [\n      {\n        name: 'status',\n        internalType: 'enum Drippie.DripStatus',\n        type: 'uint8',\n      },\n      {\n        name: 'config',\n        internalType: 'struct Drippie.DripConfig',\n        type: 'tuple',\n        components: [\n          { name: 'reentrant', internalType: 'bool', type: 'bool' },\n          { name: 'interval', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'dripcheck',\n            internalType: 'contract IDripCheck',\n            type: 'address',\n          },\n          { name: 'checkparams', internalType: 'bytes', type: 'bytes' },\n          {\n            name: 'actions',\n            internalType: 'struct Drippie.DripAction[]',\n            type: 'tuple[]',\n            components: [\n              {\n                name: 'target',\n                internalType: 'address payable',\n                type: 'address',\n              },\n              { name: 'data', internalType: 'bytes', type: 'bytes' },\n              { name: 'value', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n      { name: 'last', internalType: 'uint256', type: 'uint256' },\n      { name: 'count', internalType: 'uint256', type: 'uint256' },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_name', internalType: 'string', type: 'string' }],\n    name: 'executable',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'setOwner',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_name', internalType: 'string', type: 'string' },\n      {\n        name: '_status',\n        internalType: 'enum Drippie.DripStatus',\n        type: 'uint8',\n      },\n    ],\n    name: 'status',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_asset', internalType: 'contract ERC20', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'withdrawERC20',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_asset', internalType: 'contract ERC20', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n    ],\n    name: 'withdrawERC20',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_asset', internalType: 'contract ERC721', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'withdrawERC721',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_to', internalType: 'address payable', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'withdrawETH',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_to', internalType: 'address payable', type: 'address' }],\n    name: 'withdrawETH',\n    outputs: [],\n  },\n  { stateMutability: 'payable', type: 'receive' },\n] as const\n\n/**\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport const drippieGoerliAddress = {\n  5: '0x44b3A2a040057eBafC601A78647e805fd58B1f50',\n} as const\n\n/**\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport const drippieGoerliConfig = {\n  address: drippieGoerliAddress,\n  abi: drippieGoerliABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Drippie_optimism-goerli\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport const drippieOptimismGoerliABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [{ name: '_owner', internalType: 'address', type: 'address' }],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'nameref',\n        internalType: 'string',\n        type: 'string',\n        indexed: true,\n      },\n      { name: 'name', internalType: 'string', type: 'string', indexed: false },\n      {\n        name: 'config',\n        internalType: 'struct Drippie.DripConfig',\n        type: 'tuple',\n        components: [\n          { name: 'interval', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'dripcheck',\n            internalType: 'contract IDripCheck',\n            type: 'address',\n          },\n          { name: 'checkparams', internalType: 'bytes', type: 'bytes' },\n          {\n            name: 'actions',\n            internalType: 'struct Drippie.DripAction[]',\n            type: 'tuple[]',\n            components: [\n              {\n                name: 'target',\n                internalType: 'address payable',\n                type: 'address',\n              },\n              { name: 'data', internalType: 'bytes', type: 'bytes' },\n              { name: 'value', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n        indexed: false,\n      },\n    ],\n    name: 'DripCreated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'nameref',\n        internalType: 'string',\n        type: 'string',\n        indexed: true,\n      },\n      { name: 'name', internalType: 'string', type: 'string', indexed: false },\n      {\n        name: 'executor',\n        internalType: 'address',\n        type: 'address',\n        indexed: false,\n      },\n      {\n        name: 'timestamp',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'DripExecuted',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'nameref',\n        internalType: 'string',\n        type: 'string',\n        indexed: true,\n      },\n      { name: 'name', internalType: 'string', type: 'string', indexed: false },\n      {\n        name: 'status',\n        internalType: 'enum Drippie.DripStatus',\n        type: 'uint8',\n        indexed: false,\n      },\n    ],\n    name: 'DripStatusUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      {\n        name: 'newOwner',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n    ],\n    name: 'OwnerUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'ReceivedETH',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'withdrawer',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'recipient',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'asset',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'WithdrewERC20',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'withdrawer',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'recipient',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'asset',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'WithdrewERC721',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'withdrawer',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'recipient',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'WithdrewETH',\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_target', internalType: 'address', type: 'address' },\n      { name: '_data', internalType: 'bytes', type: 'bytes' },\n      { name: '_gas', internalType: 'uint256', type: 'uint256' },\n      { name: '_value', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'CALL',\n    outputs: [\n      { name: '', internalType: 'bool', type: 'bool' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_target', internalType: 'address', type: 'address' },\n      { name: '_data', internalType: 'bytes', type: 'bytes' },\n      { name: '_gas', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'DELEGATECALL',\n    outputs: [\n      { name: '', internalType: 'bool', type: 'bool' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_name', internalType: 'string', type: 'string' },\n      {\n        name: '_config',\n        internalType: 'struct Drippie.DripConfig',\n        type: 'tuple',\n        components: [\n          { name: 'interval', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'dripcheck',\n            internalType: 'contract IDripCheck',\n            type: 'address',\n          },\n          { name: 'checkparams', internalType: 'bytes', type: 'bytes' },\n          {\n            name: 'actions',\n            internalType: 'struct Drippie.DripAction[]',\n            type: 'tuple[]',\n            components: [\n              {\n                name: 'target',\n                internalType: 'address payable',\n                type: 'address',\n              },\n              { name: 'data', internalType: 'bytes', type: 'bytes' },\n              { name: 'value', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n    ],\n    name: 'create',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_name', internalType: 'string', type: 'string' }],\n    name: 'drip',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'string', type: 'string' }],\n    name: 'drips',\n    outputs: [\n      {\n        name: 'status',\n        internalType: 'enum Drippie.DripStatus',\n        type: 'uint8',\n      },\n      {\n        name: 'config',\n        internalType: 'struct Drippie.DripConfig',\n        type: 'tuple',\n        components: [\n          { name: 'interval', internalType: 'uint256', type: 'uint256' },\n          {\n            name: 'dripcheck',\n            internalType: 'contract IDripCheck',\n            type: 'address',\n          },\n          { name: 'checkparams', internalType: 'bytes', type: 'bytes' },\n          {\n            name: 'actions',\n            internalType: 'struct Drippie.DripAction[]',\n            type: 'tuple[]',\n            components: [\n              {\n                name: 'target',\n                internalType: 'address payable',\n                type: 'address',\n              },\n              { name: 'data', internalType: 'bytes', type: 'bytes' },\n              { name: 'value', internalType: 'uint256', type: 'uint256' },\n            ],\n          },\n        ],\n      },\n      { name: 'last', internalType: 'uint256', type: 'uint256' },\n      { name: 'count', internalType: 'uint256', type: 'uint256' },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_name', internalType: 'string', type: 'string' }],\n    name: 'executable',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'setOwner',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_name', internalType: 'string', type: 'string' },\n      {\n        name: '_status',\n        internalType: 'enum Drippie.DripStatus',\n        type: 'uint8',\n      },\n    ],\n    name: 'status',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_asset', internalType: 'contract ERC20', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'withdrawERC20',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_asset', internalType: 'contract ERC20', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n    ],\n    name: 'withdrawERC20',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_asset', internalType: 'contract ERC721', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'withdrawERC721',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_to', internalType: 'address payable', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'withdrawETH',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_to', internalType: 'address payable', type: 'address' }],\n    name: 'withdrawETH',\n    outputs: [],\n  },\n  { stateMutability: 'payable', type: 'receive' },\n] as const\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport const drippieOptimismGoerliAddress = {\n  420: '0x8D8d533C16D23847EB04EEB0925be8900Dd3af86',\n} as const\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport const drippieOptimismGoerliConfig = {\n  address: drippieOptimismGoerliAddress,\n  abi: drippieOptimismGoerliABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// L1CrossDomainMessenger\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport const l1CrossDomainMessengerABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [\n      {\n        name: '_portal',\n        internalType: 'contract OptimismPortal',\n        type: 'address',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'msgHash',\n        internalType: 'bytes32',\n        type: 'bytes32',\n        indexed: true,\n      },\n    ],\n    name: 'FailedRelayedMessage',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'version', internalType: 'uint8', type: 'uint8', indexed: false },\n    ],\n    name: 'Initialized',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'msgHash',\n        internalType: 'bytes32',\n        type: 'bytes32',\n        indexed: true,\n      },\n    ],\n    name: 'RelayedMessage',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'target',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'sender',\n        internalType: 'address',\n        type: 'address',\n        indexed: false,\n      },\n      { name: 'message', internalType: 'bytes', type: 'bytes', indexed: false },\n      {\n        name: 'messageNonce',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      {\n        name: 'gasLimit',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'SentMessage',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'sender',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'value',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'SentMessageExtension1',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MESSAGE_VERSION',\n    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MIN_GAS_CALLDATA_OVERHEAD',\n    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR',\n    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR',\n    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'OTHER_MESSENGER',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'PORTAL',\n    outputs: [\n      { name: '', internalType: 'contract OptimismPortal', type: 'address' },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'RELAY_CALL_OVERHEAD',\n    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'RELAY_CONSTANT_OVERHEAD',\n    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'RELAY_GAS_CHECK_BUFFER',\n    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'RELAY_RESERVED_GAS',\n    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],\n  },\n  {\n    stateMutability: 'pure',\n    type: 'function',\n    inputs: [\n      { name: '_message', internalType: 'bytes', type: 'bytes' },\n      { name: '_minGasLimit', internalType: 'uint32', type: 'uint32' },\n    ],\n    name: 'baseGas',\n    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    name: 'failedMessages',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'initialize',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'messageNonce',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_nonce', internalType: 'uint256', type: 'uint256' },\n      { name: '_sender', internalType: 'address', type: 'address' },\n      { name: '_target', internalType: 'address', type: 'address' },\n      { name: '_value', internalType: 'uint256', type: 'uint256' },\n      { name: '_minGasLimit', internalType: 'uint256', type: 'uint256' },\n      { name: '_message', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'relayMessage',\n    outputs: [],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_target', internalType: 'address', type: 'address' },\n      { name: '_message', internalType: 'bytes', type: 'bytes' },\n      { name: '_minGasLimit', internalType: 'uint32', type: 'uint32' },\n    ],\n    name: 'sendMessage',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    name: 'successfulMessages',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'version',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'xDomainMessageSender',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n] as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport const l1CrossDomainMessengerAddress = {\n  1: '0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1',\n  5: '0x5086d1eEF304eb5284A0f6720f79403b4e9bE294',\n} as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport const l1CrossDomainMessengerConfig = {\n  address: l1CrossDomainMessengerAddress,\n  abi: l1CrossDomainMessengerABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// L1ERC721Bridge\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5a7749f83b81B301cAb5f48EB8516B986DAef23D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x8DD330DdE8D9898d43b4dc840Da27A07dF91b3c9)\n */\nexport const l1Erc721BridgeABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [\n      { name: '_messenger', internalType: 'address', type: 'address' },\n      { name: '_otherBridge', internalType: 'address', type: 'address' },\n    ],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'localToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'remoteToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: false },\n      {\n        name: 'tokenId',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      {\n        name: 'extraData',\n        internalType: 'bytes',\n        type: 'bytes',\n        indexed: false,\n      },\n    ],\n    name: 'ERC721BridgeFinalized',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'localToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'remoteToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: false },\n      {\n        name: 'tokenId',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      {\n        name: 'extraData',\n        internalType: 'bytes',\n        type: 'bytes',\n        indexed: false,\n      },\n    ],\n    name: 'ERC721BridgeInitiated',\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_localToken', internalType: 'address', type: 'address' },\n      { name: '_remoteToken', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_minGasLimit', internalType: 'uint32', type: 'uint32' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'bridgeERC721',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_localToken', internalType: 'address', type: 'address' },\n      { name: '_remoteToken', internalType: 'address', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_minGasLimit', internalType: 'uint32', type: 'uint32' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'bridgeERC721To',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'deposits',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_localToken', internalType: 'address', type: 'address' },\n      { name: '_remoteToken', internalType: 'address', type: 'address' },\n      { name: '_from', internalType: 'address', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'finalizeBridgeERC721',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'messenger',\n    outputs: [\n      {\n        name: '',\n        internalType: 'contract CrossDomainMessenger',\n        type: 'address',\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'otherBridge',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'version',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n] as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5a7749f83b81B301cAb5f48EB8516B986DAef23D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x8DD330DdE8D9898d43b4dc840Da27A07dF91b3c9)\n */\nexport const l1Erc721BridgeAddress = {\n  1: '0x5a7749f83b81B301cAb5f48EB8516B986DAef23D',\n  5: '0x8DD330DdE8D9898d43b4dc840Da27A07dF91b3c9',\n} as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5a7749f83b81B301cAb5f48EB8516B986DAef23D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x8DD330DdE8D9898d43b4dc840Da27A07dF91b3c9)\n */\nexport const l1Erc721BridgeConfig = {\n  address: l1Erc721BridgeAddress,\n  abi: l1Erc721BridgeABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// L1StandardBridge\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport const l1StandardBridgeABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [\n      { name: '_messenger', internalType: 'address payable', type: 'address' },\n    ],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'localToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'remoteToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: false },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      {\n        name: 'extraData',\n        internalType: 'bytes',\n        type: 'bytes',\n        indexed: false,\n      },\n    ],\n    name: 'ERC20BridgeFinalized',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'localToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'remoteToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: false },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      {\n        name: 'extraData',\n        internalType: 'bytes',\n        type: 'bytes',\n        indexed: false,\n      },\n    ],\n    name: 'ERC20BridgeInitiated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'l1Token',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'l2Token',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: false },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      {\n        name: 'extraData',\n        internalType: 'bytes',\n        type: 'bytes',\n        indexed: false,\n      },\n    ],\n    name: 'ERC20DepositInitiated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'l1Token',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'l2Token',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: false },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      {\n        name: 'extraData',\n        internalType: 'bytes',\n        type: 'bytes',\n        indexed: false,\n      },\n    ],\n    name: 'ERC20WithdrawalFinalized',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      {\n        name: 'extraData',\n        internalType: 'bytes',\n        type: 'bytes',\n        indexed: false,\n      },\n    ],\n    name: 'ETHBridgeFinalized',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      {\n        name: 'extraData',\n        internalType: 'bytes',\n        type: 'bytes',\n        indexed: false,\n      },\n    ],\n    name: 'ETHBridgeInitiated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      {\n        name: 'extraData',\n        internalType: 'bytes',\n        type: 'bytes',\n        indexed: false,\n      },\n    ],\n    name: 'ETHDepositInitiated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      {\n        name: 'extraData',\n        internalType: 'bytes',\n        type: 'bytes',\n        indexed: false,\n      },\n    ],\n    name: 'ETHWithdrawalFinalized',\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_localToken', internalType: 'address', type: 'address' },\n      { name: '_remoteToken', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n      { name: '_minGasLimit', internalType: 'uint32', type: 'uint32' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'bridgeERC20',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_localToken', internalType: 'address', type: 'address' },\n      { name: '_remoteToken', internalType: 'address', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n      { name: '_minGasLimit', internalType: 'uint32', type: 'uint32' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'bridgeERC20To',\n    outputs: [],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_minGasLimit', internalType: 'uint32', type: 'uint32' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'bridgeETH',\n    outputs: [],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_minGasLimit', internalType: 'uint32', type: 'uint32' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'bridgeETHTo',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_l1Token', internalType: 'address', type: 'address' },\n      { name: '_l2Token', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n      { name: '_minGasLimit', internalType: 'uint32', type: 'uint32' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'depositERC20',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_l1Token', internalType: 'address', type: 'address' },\n      { name: '_l2Token', internalType: 'address', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n      { name: '_minGasLimit', internalType: 'uint32', type: 'uint32' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'depositERC20To',\n    outputs: [],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_minGasLimit', internalType: 'uint32', type: 'uint32' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'depositETH',\n    outputs: [],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_minGasLimit', internalType: 'uint32', type: 'uint32' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'depositETHTo',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'deposits',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_localToken', internalType: 'address', type: 'address' },\n      { name: '_remoteToken', internalType: 'address', type: 'address' },\n      { name: '_from', internalType: 'address', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'finalizeBridgeERC20',\n    outputs: [],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_from', internalType: 'address', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'finalizeBridgeETH',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_l1Token', internalType: 'address', type: 'address' },\n      { name: '_l2Token', internalType: 'address', type: 'address' },\n      { name: '_from', internalType: 'address', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'finalizeERC20Withdrawal',\n    outputs: [],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_from', internalType: 'address', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'finalizeETHWithdrawal',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'l2TokenBridge',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'messenger',\n    outputs: [\n      {\n        name: '',\n        internalType: 'contract CrossDomainMessenger',\n        type: 'address',\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'version',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  { stateMutability: 'payable', type: 'receive' },\n] as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport const l1StandardBridgeAddress = {\n  1: '0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1',\n  5: '0x636Af16bf2f682dD3109e60102b8E1A089FedAa8',\n} as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport const l1StandardBridgeConfig = {\n  address: l1StandardBridgeAddress,\n  abi: l1StandardBridgeABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// L2OutputOracle\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport const l2OutputOracleABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [\n      { name: '_submissionInterval', internalType: 'uint256', type: 'uint256' },\n      { name: '_l2BlockTime', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_startingBlockNumber',\n        internalType: 'uint256',\n        type: 'uint256',\n      },\n      { name: '_startingTimestamp', internalType: 'uint256', type: 'uint256' },\n      { name: '_proposer', internalType: 'address', type: 'address' },\n      { name: '_challenger', internalType: 'address', type: 'address' },\n      {\n        name: '_finalizationPeriodSeconds',\n        internalType: 'uint256',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'version', internalType: 'uint8', type: 'uint8', indexed: false },\n    ],\n    name: 'Initialized',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'outputRoot',\n        internalType: 'bytes32',\n        type: 'bytes32',\n        indexed: true,\n      },\n      {\n        name: 'l2OutputIndex',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: true,\n      },\n      {\n        name: 'l2BlockNumber',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: true,\n      },\n      {\n        name: 'l1Timestamp',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'OutputProposed',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'prevNextOutputIndex',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: true,\n      },\n      {\n        name: 'newNextOutputIndex',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: true,\n      },\n    ],\n    name: 'OutputsDeleted',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'CHALLENGER',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'FINALIZATION_PERIOD_SECONDS',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'L2_BLOCK_TIME',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'PROPOSER',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'SUBMISSION_INTERVAL',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '_l2BlockNumber', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'computeL2Timestamp',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_l2OutputIndex', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'deleteL2Outputs',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '_l2OutputIndex', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'getL2Output',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct Types.OutputProposal',\n        type: 'tuple',\n        components: [\n          { name: 'outputRoot', internalType: 'bytes32', type: 'bytes32' },\n          { name: 'timestamp', internalType: 'uint128', type: 'uint128' },\n          { name: 'l2BlockNumber', internalType: 'uint128', type: 'uint128' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '_l2BlockNumber', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'getL2OutputAfter',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct Types.OutputProposal',\n        type: 'tuple',\n        components: [\n          { name: 'outputRoot', internalType: 'bytes32', type: 'bytes32' },\n          { name: 'timestamp', internalType: 'uint128', type: 'uint128' },\n          { name: 'l2BlockNumber', internalType: 'uint128', type: 'uint128' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '_l2BlockNumber', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'getL2OutputIndexAfter',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_startingBlockNumber',\n        internalType: 'uint256',\n        type: 'uint256',\n      },\n      { name: '_startingTimestamp', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'initialize',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'latestBlockNumber',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'latestOutputIndex',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'nextBlockNumber',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'nextOutputIndex',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_outputRoot', internalType: 'bytes32', type: 'bytes32' },\n      { name: '_l2BlockNumber', internalType: 'uint256', type: 'uint256' },\n      { name: '_l1BlockHash', internalType: 'bytes32', type: 'bytes32' },\n      { name: '_l1BlockNumber', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'proposeL2Output',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'startingBlockNumber',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'startingTimestamp',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'version',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n] as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport const l2OutputOracleAddress = {\n  1: '0xdfe97868233d1aa22e815a266982f2cf17685a27',\n  5: '0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0',\n} as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport const l2OutputOracleConfig = {\n  address: l2OutputOracleAddress,\n  abi: l2OutputOracleABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// OptimismMintableERC20Factory\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000012)\n */\nexport const optimismMintableErc20FactoryABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [{ name: '_bridge', internalType: 'address', type: 'address' }],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'localToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'remoteToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'deployer',\n        internalType: 'address',\n        type: 'address',\n        indexed: false,\n      },\n    ],\n    name: 'OptimismMintableERC20Created',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'remoteToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'localToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n    ],\n    name: 'StandardL2TokenCreated',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'BRIDGE',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_remoteToken', internalType: 'address', type: 'address' },\n      { name: '_name', internalType: 'string', type: 'string' },\n      { name: '_symbol', internalType: 'string', type: 'string' },\n    ],\n    name: 'createOptimismMintableERC20',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_remoteToken', internalType: 'address', type: 'address' },\n      { name: '_name', internalType: 'string', type: 'string' },\n      { name: '_symbol', internalType: 'string', type: 'string' },\n    ],\n    name: 'createStandardL2Token',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'version',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n] as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000012)\n */\nexport const optimismMintableErc20FactoryAddress = {\n  1: '0x4200000000000000000000000000000000000012',\n  5: '0x4200000000000000000000000000000000000012',\n  420: '0x4200000000000000000000000000000000000012',\n} as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000012)\n */\nexport const optimismMintableErc20FactoryConfig = {\n  address: optimismMintableErc20FactoryAddress,\n  abi: optimismMintableErc20FactoryABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// OptimismPortal\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport const optimismPortalABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [\n      {\n        name: '_l2Oracle',\n        internalType: 'contract L2OutputOracle',\n        type: 'address',\n      },\n      { name: '_guardian', internalType: 'address', type: 'address' },\n      { name: '_paused', internalType: 'bool', type: 'bool' },\n      {\n        name: '_config',\n        internalType: 'contract SystemConfig',\n        type: 'address',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'version', internalType: 'uint8', type: 'uint8', indexed: false },\n    ],\n    name: 'Initialized',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'account',\n        internalType: 'address',\n        type: 'address',\n        indexed: false,\n      },\n    ],\n    name: 'Paused',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      {\n        name: 'version',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: true,\n      },\n      {\n        name: 'opaqueData',\n        internalType: 'bytes',\n        type: 'bytes',\n        indexed: false,\n      },\n    ],\n    name: 'TransactionDeposited',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'account',\n        internalType: 'address',\n        type: 'address',\n        indexed: false,\n      },\n    ],\n    name: 'Unpaused',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'withdrawalHash',\n        internalType: 'bytes32',\n        type: 'bytes32',\n        indexed: true,\n      },\n      { name: 'success', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'WithdrawalFinalized',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'withdrawalHash',\n        internalType: 'bytes32',\n        type: 'bytes32',\n        indexed: true,\n      },\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n    ],\n    name: 'WithdrawalProven',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'GUARDIAN',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'L2_ORACLE',\n    outputs: [\n      { name: '', internalType: 'contract L2OutputOracle', type: 'address' },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'SYSTEM_CONFIG',\n    outputs: [\n      { name: '', internalType: 'contract SystemConfig', type: 'address' },\n    ],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_value', internalType: 'uint256', type: 'uint256' },\n      { name: '_gasLimit', internalType: 'uint64', type: 'uint64' },\n      { name: '_isCreation', internalType: 'bool', type: 'bool' },\n      { name: '_data', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'depositTransaction',\n    outputs: [],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [],\n    name: 'donateETH',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_tx',\n        internalType: 'struct Types.WithdrawalTransaction',\n        type: 'tuple',\n        components: [\n          { name: 'nonce', internalType: 'uint256', type: 'uint256' },\n          { name: 'sender', internalType: 'address', type: 'address' },\n          { name: 'target', internalType: 'address', type: 'address' },\n          { name: 'value', internalType: 'uint256', type: 'uint256' },\n          { name: 'gasLimit', internalType: 'uint256', type: 'uint256' },\n          { name: 'data', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'finalizeWithdrawalTransaction',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    name: 'finalizedWithdrawals',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_paused', internalType: 'bool', type: 'bool' }],\n    name: 'initialize',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '_l2OutputIndex', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'isOutputFinalized',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'l2Sender',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'pure',\n    type: 'function',\n    inputs: [{ name: '_byteCount', internalType: 'uint64', type: 'uint64' }],\n    name: 'minimumGasLimit',\n    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'params',\n    outputs: [\n      { name: 'prevBaseFee', internalType: 'uint128', type: 'uint128' },\n      { name: 'prevBoughtGas', internalType: 'uint64', type: 'uint64' },\n      { name: 'prevBlockNum', internalType: 'uint64', type: 'uint64' },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'pause',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'paused',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_tx',\n        internalType: 'struct Types.WithdrawalTransaction',\n        type: 'tuple',\n        components: [\n          { name: 'nonce', internalType: 'uint256', type: 'uint256' },\n          { name: 'sender', internalType: 'address', type: 'address' },\n          { name: 'target', internalType: 'address', type: 'address' },\n          { name: 'value', internalType: 'uint256', type: 'uint256' },\n          { name: 'gasLimit', internalType: 'uint256', type: 'uint256' },\n          { name: 'data', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n      { name: '_l2OutputIndex', internalType: 'uint256', type: 'uint256' },\n      {\n        name: '_outputRootProof',\n        internalType: 'struct Types.OutputRootProof',\n        type: 'tuple',\n        components: [\n          { name: 'version', internalType: 'bytes32', type: 'bytes32' },\n          { name: 'stateRoot', internalType: 'bytes32', type: 'bytes32' },\n          {\n            name: 'messagePasserStorageRoot',\n            internalType: 'bytes32',\n            type: 'bytes32',\n          },\n          { name: 'latestBlockhash', internalType: 'bytes32', type: 'bytes32' },\n        ],\n      },\n      { name: '_withdrawalProof', internalType: 'bytes[]', type: 'bytes[]' },\n    ],\n    name: 'proveWithdrawalTransaction',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    name: 'provenWithdrawals',\n    outputs: [\n      { name: 'outputRoot', internalType: 'bytes32', type: 'bytes32' },\n      { name: 'timestamp', internalType: 'uint128', type: 'uint128' },\n      { name: 'l2OutputIndex', internalType: 'uint128', type: 'uint128' },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'unpause',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'version',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  { stateMutability: 'payable', type: 'receive' },\n] as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport const optimismPortalAddress = {\n  1: '0xbEb5Fc579115071764c7423A4f12eDde41f106Ed',\n  5: '0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383',\n} as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport const optimismPortalConfig = {\n  address: optimismPortalAddress,\n  abi: optimismPortalABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// PortalSender\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0A893d9576b9cFD9EF78595963dc973238E78210)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe7FACd39531ee3C313330E93B4d7a8B8A3c84Aa4)\n */\nexport const portalSenderABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [\n      {\n        name: '_portal',\n        internalType: 'contract OptimismPortal',\n        type: 'address',\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'PORTAL',\n    outputs: [\n      { name: '', internalType: 'contract OptimismPortal', type: 'address' },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'donate',\n    outputs: [],\n  },\n] as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0A893d9576b9cFD9EF78595963dc973238E78210)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe7FACd39531ee3C313330E93B4d7a8B8A3c84Aa4)\n */\nexport const portalSenderAddress = {\n  1: '0x0A893d9576b9cFD9EF78595963dc973238E78210',\n  5: '0xe7FACd39531ee3C313330E93B4d7a8B8A3c84Aa4',\n} as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0A893d9576b9cFD9EF78595963dc973238E78210)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe7FACd39531ee3C313330E93B4d7a8B8A3c84Aa4)\n */\nexport const portalSenderConfig = {\n  address: portalSenderAddress,\n  abi: portalSenderABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ProxyAdmin\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport const proxyAdminABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [{ name: '_owner', internalType: 'address', type: 'address' }],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'previousOwner',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'newOwner',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'addressManager',\n    outputs: [\n      { name: '', internalType: 'contract AddressManager', type: 'address' },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_proxy', internalType: 'address payable', type: 'address' },\n      { name: '_newAdmin', internalType: 'address', type: 'address' },\n    ],\n    name: 'changeProxyAdmin',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '_proxy', internalType: 'address payable', type: 'address' },\n    ],\n    name: 'getProxyAdmin',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_proxy', internalType: 'address', type: 'address' }],\n    name: 'getProxyImplementation',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'implementationName',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'isUpgrading',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'proxyType',\n    outputs: [\n      { name: '', internalType: 'enum ProxyAdmin.ProxyType', type: 'uint8' },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'renounceOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_name', internalType: 'string', type: 'string' },\n      { name: '_address', internalType: 'address', type: 'address' },\n    ],\n    name: 'setAddress',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_address',\n        internalType: 'contract AddressManager',\n        type: 'address',\n      },\n    ],\n    name: 'setAddressManager',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_address', internalType: 'address', type: 'address' },\n      { name: '_name', internalType: 'string', type: 'string' },\n    ],\n    name: 'setImplementationName',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_address', internalType: 'address', type: 'address' },\n      {\n        name: '_type',\n        internalType: 'enum ProxyAdmin.ProxyType',\n        type: 'uint8',\n      },\n    ],\n    name: 'setProxyType',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_upgrading', internalType: 'bool', type: 'bool' }],\n    name: 'setUpgrading',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_proxy', internalType: 'address payable', type: 'address' },\n      { name: '_implementation', internalType: 'address', type: 'address' },\n    ],\n    name: 'upgrade',\n    outputs: [],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_proxy', internalType: 'address payable', type: 'address' },\n      { name: '_implementation', internalType: 'address', type: 'address' },\n      { name: '_data', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'upgradeAndCall',\n    outputs: [],\n  },\n] as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport const proxyAdminAddress = {\n  1: '0x4200000000000000000000000000000000000018',\n  5: '0x4200000000000000000000000000000000000018',\n} as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport const proxyAdminConfig = {\n  address: proxyAdminAddress,\n  abi: proxyAdminABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// SystemConfig\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport const systemConfigABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [\n      { name: '_owner', internalType: 'address', type: 'address' },\n      { name: '_overhead', internalType: 'uint256', type: 'uint256' },\n      { name: '_scalar', internalType: 'uint256', type: 'uint256' },\n      { name: '_batcherHash', internalType: 'bytes32', type: 'bytes32' },\n      { name: '_gasLimit', internalType: 'uint64', type: 'uint64' },\n      { name: '_unsafeBlockSigner', internalType: 'address', type: 'address' },\n      {\n        name: '_config',\n        internalType: 'struct ResourceMetering.ResourceConfig',\n        type: 'tuple',\n        components: [\n          { name: 'maxResourceLimit', internalType: 'uint32', type: 'uint32' },\n          {\n            name: 'elasticityMultiplier',\n            internalType: 'uint8',\n            type: 'uint8',\n          },\n          {\n            name: 'baseFeeMaxChangeDenominator',\n            internalType: 'uint8',\n            type: 'uint8',\n          },\n          { name: 'minimumBaseFee', internalType: 'uint32', type: 'uint32' },\n          { name: 'systemTxMaxGas', internalType: 'uint32', type: 'uint32' },\n          { name: 'maximumBaseFee', internalType: 'uint128', type: 'uint128' },\n        ],\n      },\n    ],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'version',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: true,\n      },\n      {\n        name: 'updateType',\n        internalType: 'enum SystemConfig.UpdateType',\n        type: 'uint8',\n        indexed: true,\n      },\n      { name: 'data', internalType: 'bytes', type: 'bytes', indexed: false },\n    ],\n    name: 'ConfigUpdate',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'version', internalType: 'uint8', type: 'uint8', indexed: false },\n    ],\n    name: 'Initialized',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'previousOwner',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'newOwner',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'UNSAFE_BLOCK_SIGNER_SLOT',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'batcherHash',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'gasLimit',\n    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_owner', internalType: 'address', type: 'address' },\n      { name: '_overhead', internalType: 'uint256', type: 'uint256' },\n      { name: '_scalar', internalType: 'uint256', type: 'uint256' },\n      { name: '_batcherHash', internalType: 'bytes32', type: 'bytes32' },\n      { name: '_gasLimit', internalType: 'uint64', type: 'uint64' },\n      { name: '_unsafeBlockSigner', internalType: 'address', type: 'address' },\n      {\n        name: '_config',\n        internalType: 'struct ResourceMetering.ResourceConfig',\n        type: 'tuple',\n        components: [\n          { name: 'maxResourceLimit', internalType: 'uint32', type: 'uint32' },\n          {\n            name: 'elasticityMultiplier',\n            internalType: 'uint8',\n            type: 'uint8',\n          },\n          {\n            name: 'baseFeeMaxChangeDenominator',\n            internalType: 'uint8',\n            type: 'uint8',\n          },\n          { name: 'minimumBaseFee', internalType: 'uint32', type: 'uint32' },\n          { name: 'systemTxMaxGas', internalType: 'uint32', type: 'uint32' },\n          { name: 'maximumBaseFee', internalType: 'uint128', type: 'uint128' },\n        ],\n      },\n    ],\n    name: 'initialize',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'minimumGasLimit',\n    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'overhead',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'renounceOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'resourceConfig',\n    outputs: [\n      {\n        name: '',\n        internalType: 'struct ResourceMetering.ResourceConfig',\n        type: 'tuple',\n        components: [\n          { name: 'maxResourceLimit', internalType: 'uint32', type: 'uint32' },\n          {\n            name: 'elasticityMultiplier',\n            internalType: 'uint8',\n            type: 'uint8',\n          },\n          {\n            name: 'baseFeeMaxChangeDenominator',\n            internalType: 'uint8',\n            type: 'uint8',\n          },\n          { name: 'minimumBaseFee', internalType: 'uint32', type: 'uint32' },\n          { name: 'systemTxMaxGas', internalType: 'uint32', type: 'uint32' },\n          { name: 'maximumBaseFee', internalType: 'uint128', type: 'uint128' },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'scalar',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_batcherHash', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'setBatcherHash',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_overhead', internalType: 'uint256', type: 'uint256' },\n      { name: '_scalar', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'setGasConfig',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_gasLimit', internalType: 'uint64', type: 'uint64' }],\n    name: 'setGasLimit',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_config',\n        internalType: 'struct ResourceMetering.ResourceConfig',\n        type: 'tuple',\n        components: [\n          { name: 'maxResourceLimit', internalType: 'uint32', type: 'uint32' },\n          {\n            name: 'elasticityMultiplier',\n            internalType: 'uint8',\n            type: 'uint8',\n          },\n          {\n            name: 'baseFeeMaxChangeDenominator',\n            internalType: 'uint8',\n            type: 'uint8',\n          },\n          { name: 'minimumBaseFee', internalType: 'uint32', type: 'uint32' },\n          { name: 'systemTxMaxGas', internalType: 'uint32', type: 'uint32' },\n          { name: 'maximumBaseFee', internalType: 'uint128', type: 'uint128' },\n        ],\n      },\n    ],\n    name: 'setResourceConfig',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_unsafeBlockSigner', internalType: 'address', type: 'address' },\n    ],\n    name: 'setUnsafeBlockSigner',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'unsafeBlockSigner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'version',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n] as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport const systemConfigAddress = {\n  1: '0x229047fed2591dbec1eF1118d64F7aF3dB9EB290',\n  5: '0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60',\n} as const\n\n/**\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport const systemConfigConfig = {\n  address: systemConfigAddress,\n  abi: systemConfigABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// SystemDictator\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport const systemDictatorABI = [\n  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'version', internalType: 'uint8', type: 'uint8', indexed: false },\n    ],\n    name: 'Initialized',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'previousOwner',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'newOwner',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'EXIT_1_NO_RETURN_STEP',\n    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'PROXY_TRANSFER_STEP',\n    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'config',\n    outputs: [\n      {\n        name: 'globalConfig',\n        internalType: 'struct SystemDictator.GlobalConfig',\n        type: 'tuple',\n        components: [\n          {\n            name: 'addressManager',\n            internalType: 'contract AddressManager',\n            type: 'address',\n          },\n          {\n            name: 'proxyAdmin',\n            internalType: 'contract ProxyAdmin',\n            type: 'address',\n          },\n          { name: 'controller', internalType: 'address', type: 'address' },\n          { name: 'finalOwner', internalType: 'address', type: 'address' },\n        ],\n      },\n      {\n        name: 'proxyAddressConfig',\n        internalType: 'struct SystemDictator.ProxyAddressConfig',\n        type: 'tuple',\n        components: [\n          {\n            name: 'l2OutputOracleProxy',\n            internalType: 'address',\n            type: 'address',\n          },\n          {\n            name: 'optimismPortalProxy',\n            internalType: 'address',\n            type: 'address',\n          },\n          {\n            name: 'l1CrossDomainMessengerProxy',\n            internalType: 'address',\n            type: 'address',\n          },\n          {\n            name: 'l1StandardBridgeProxy',\n            internalType: 'address',\n            type: 'address',\n          },\n          {\n            name: 'optimismMintableERC20FactoryProxy',\n            internalType: 'address',\n            type: 'address',\n          },\n          {\n            name: 'l1ERC721BridgeProxy',\n            internalType: 'address',\n            type: 'address',\n          },\n          {\n            name: 'systemConfigProxy',\n            internalType: 'address',\n            type: 'address',\n          },\n        ],\n      },\n      {\n        name: 'implementationAddressConfig',\n        internalType: 'struct SystemDictator.ImplementationAddressConfig',\n        type: 'tuple',\n        components: [\n          {\n            name: 'l2OutputOracleImpl',\n            internalType: 'contract L2OutputOracle',\n            type: 'address',\n          },\n          {\n            name: 'optimismPortalImpl',\n            internalType: 'contract OptimismPortal',\n            type: 'address',\n          },\n          {\n            name: 'l1CrossDomainMessengerImpl',\n            internalType: 'contract L1CrossDomainMessenger',\n            type: 'address',\n          },\n          {\n            name: 'l1StandardBridgeImpl',\n            internalType: 'contract L1StandardBridge',\n            type: 'address',\n          },\n          {\n            name: 'optimismMintableERC20FactoryImpl',\n            internalType: 'contract OptimismMintableERC20Factory',\n            type: 'address',\n          },\n          {\n            name: 'l1ERC721BridgeImpl',\n            internalType: 'contract L1ERC721Bridge',\n            type: 'address',\n          },\n          {\n            name: 'portalSenderImpl',\n            internalType: 'contract PortalSender',\n            type: 'address',\n          },\n          {\n            name: 'systemConfigImpl',\n            internalType: 'contract SystemConfig',\n            type: 'address',\n          },\n        ],\n      },\n      {\n        name: 'systemConfigConfig',\n        internalType: 'struct SystemDictator.SystemConfigConfig',\n        type: 'tuple',\n        components: [\n          { name: 'owner', internalType: 'address', type: 'address' },\n          { name: 'overhead', internalType: 'uint256', type: 'uint256' },\n          { name: 'scalar', internalType: 'uint256', type: 'uint256' },\n          { name: 'batcherHash', internalType: 'bytes32', type: 'bytes32' },\n          { name: 'gasLimit', internalType: 'uint64', type: 'uint64' },\n          {\n            name: 'unsafeBlockSigner',\n            internalType: 'address',\n            type: 'address',\n          },\n          {\n            name: 'resourceConfig',\n            internalType: 'struct ResourceMetering.ResourceConfig',\n            type: 'tuple',\n            components: [\n              {\n                name: 'maxResourceLimit',\n                internalType: 'uint32',\n                type: 'uint32',\n              },\n              {\n                name: 'elasticityMultiplier',\n                internalType: 'uint8',\n                type: 'uint8',\n              },\n              {\n                name: 'baseFeeMaxChangeDenominator',\n                internalType: 'uint8',\n                type: 'uint8',\n              },\n              {\n                name: 'minimumBaseFee',\n                internalType: 'uint32',\n                type: 'uint32',\n              },\n              {\n                name: 'systemTxMaxGas',\n                internalType: 'uint32',\n                type: 'uint32',\n              },\n              {\n                name: 'maximumBaseFee',\n                internalType: 'uint128',\n                type: 'uint128',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'currentStep',\n    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'dynamicConfigSet',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'exit1',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'exited',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'finalize',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'finalized',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_config',\n        internalType: 'struct SystemDictator.DeployConfig',\n        type: 'tuple',\n        components: [\n          {\n            name: 'globalConfig',\n            internalType: 'struct SystemDictator.GlobalConfig',\n            type: 'tuple',\n            components: [\n              {\n                name: 'addressManager',\n                internalType: 'contract AddressManager',\n                type: 'address',\n              },\n              {\n                name: 'proxyAdmin',\n                internalType: 'contract ProxyAdmin',\n                type: 'address',\n              },\n              { name: 'controller', internalType: 'address', type: 'address' },\n              { name: 'finalOwner', internalType: 'address', type: 'address' },\n            ],\n          },\n          {\n            name: 'proxyAddressConfig',\n            internalType: 'struct SystemDictator.ProxyAddressConfig',\n            type: 'tuple',\n            components: [\n              {\n                name: 'l2OutputOracleProxy',\n                internalType: 'address',\n                type: 'address',\n              },\n              {\n                name: 'optimismPortalProxy',\n                internalType: 'address',\n                type: 'address',\n              },\n              {\n                name: 'l1CrossDomainMessengerProxy',\n                internalType: 'address',\n                type: 'address',\n              },\n              {\n                name: 'l1StandardBridgeProxy',\n                internalType: 'address',\n                type: 'address',\n              },\n              {\n                name: 'optimismMintableERC20FactoryProxy',\n                internalType: 'address',\n                type: 'address',\n              },\n              {\n                name: 'l1ERC721BridgeProxy',\n                internalType: 'address',\n                type: 'address',\n              },\n              {\n                name: 'systemConfigProxy',\n                internalType: 'address',\n                type: 'address',\n              },\n            ],\n          },\n          {\n            name: 'implementationAddressConfig',\n            internalType: 'struct SystemDictator.ImplementationAddressConfig',\n            type: 'tuple',\n            components: [\n              {\n                name: 'l2OutputOracleImpl',\n                internalType: 'contract L2OutputOracle',\n                type: 'address',\n              },\n              {\n                name: 'optimismPortalImpl',\n                internalType: 'contract OptimismPortal',\n                type: 'address',\n              },\n              {\n                name: 'l1CrossDomainMessengerImpl',\n                internalType: 'contract L1CrossDomainMessenger',\n                type: 'address',\n              },\n              {\n                name: 'l1StandardBridgeImpl',\n                internalType: 'contract L1StandardBridge',\n                type: 'address',\n              },\n              {\n                name: 'optimismMintableERC20FactoryImpl',\n                internalType: 'contract OptimismMintableERC20Factory',\n                type: 'address',\n              },\n              {\n                name: 'l1ERC721BridgeImpl',\n                internalType: 'contract L1ERC721Bridge',\n                type: 'address',\n              },\n              {\n                name: 'portalSenderImpl',\n                internalType: 'contract PortalSender',\n                type: 'address',\n              },\n              {\n                name: 'systemConfigImpl',\n                internalType: 'contract SystemConfig',\n                type: 'address',\n              },\n            ],\n          },\n          {\n            name: 'systemConfigConfig',\n            internalType: 'struct SystemDictator.SystemConfigConfig',\n            type: 'tuple',\n            components: [\n              { name: 'owner', internalType: 'address', type: 'address' },\n              { name: 'overhead', internalType: 'uint256', type: 'uint256' },\n              { name: 'scalar', internalType: 'uint256', type: 'uint256' },\n              { name: 'batcherHash', internalType: 'bytes32', type: 'bytes32' },\n              { name: 'gasLimit', internalType: 'uint64', type: 'uint64' },\n              {\n                name: 'unsafeBlockSigner',\n                internalType: 'address',\n                type: 'address',\n              },\n              {\n                name: 'resourceConfig',\n                internalType: 'struct ResourceMetering.ResourceConfig',\n                type: 'tuple',\n                components: [\n                  {\n                    name: 'maxResourceLimit',\n                    internalType: 'uint32',\n                    type: 'uint32',\n                  },\n                  {\n                    name: 'elasticityMultiplier',\n                    internalType: 'uint8',\n                    type: 'uint8',\n                  },\n                  {\n                    name: 'baseFeeMaxChangeDenominator',\n                    internalType: 'uint8',\n                    type: 'uint8',\n                  },\n                  {\n                    name: 'minimumBaseFee',\n                    internalType: 'uint32',\n                    type: 'uint32',\n                  },\n                  {\n                    name: 'systemTxMaxGas',\n                    internalType: 'uint32',\n                    type: 'uint32',\n                  },\n                  {\n                    name: 'maximumBaseFee',\n                    internalType: 'uint128',\n                    type: 'uint128',\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n    ],\n    name: 'initialize',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'l2OutputOracleDynamicConfig',\n    outputs: [\n      {\n        name: 'l2OutputOracleStartingBlockNumber',\n        internalType: 'uint256',\n        type: 'uint256',\n      },\n      {\n        name: 'l2OutputOracleStartingTimestamp',\n        internalType: 'uint256',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'oldL1CrossDomainMessenger',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'optimismPortalDynamicConfig',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'phase1',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'phase2',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'renounceOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'step1',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'step2',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'step3',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'step4',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'step5',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_l2OutputOracleDynamicConfig',\n        internalType: 'struct SystemDictator.L2OutputOracleDynamicConfig',\n        type: 'tuple',\n        components: [\n          {\n            name: 'l2OutputOracleStartingBlockNumber',\n            internalType: 'uint256',\n            type: 'uint256',\n          },\n          {\n            name: 'l2OutputOracleStartingTimestamp',\n            internalType: 'uint256',\n            type: 'uint256',\n          },\n        ],\n      },\n      {\n        name: '_optimismPortalDynamicConfig',\n        internalType: 'bool',\n        type: 'bool',\n      },\n    ],\n    name: 'updateDynamicConfig',\n    outputs: [],\n  },\n] as const\n\n/**\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport const systemDictatorAddress = {\n  1: '0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB',\n} as const\n\n/**\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport const systemDictatorConfig = {\n  address: systemDictatorAddress,\n  abi: systemDictatorABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// SystemDictator_goerli\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport const systemDictatorGoerliABI = [\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'version', internalType: 'uint8', type: 'uint8', indexed: false },\n    ],\n    name: 'Initialized',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'previousOwner',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'newOwner',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'EXIT_1_NO_RETURN_STEP',\n    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'PROXY_TRANSFER_STEP',\n    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'config',\n    outputs: [\n      {\n        name: 'globalConfig',\n        internalType: 'struct SystemDictator.GlobalConfig',\n        type: 'tuple',\n        components: [\n          {\n            name: 'addressManager',\n            internalType: 'contract AddressManager',\n            type: 'address',\n          },\n          {\n            name: 'proxyAdmin',\n            internalType: 'contract ProxyAdmin',\n            type: 'address',\n          },\n          { name: 'controller', internalType: 'address', type: 'address' },\n          { name: 'finalOwner', internalType: 'address', type: 'address' },\n        ],\n      },\n      {\n        name: 'proxyAddressConfig',\n        internalType: 'struct SystemDictator.ProxyAddressConfig',\n        type: 'tuple',\n        components: [\n          {\n            name: 'l2OutputOracleProxy',\n            internalType: 'address',\n            type: 'address',\n          },\n          {\n            name: 'optimismPortalProxy',\n            internalType: 'address',\n            type: 'address',\n          },\n          {\n            name: 'l1CrossDomainMessengerProxy',\n            internalType: 'address',\n            type: 'address',\n          },\n          {\n            name: 'l1StandardBridgeProxy',\n            internalType: 'address',\n            type: 'address',\n          },\n          {\n            name: 'optimismMintableERC20FactoryProxy',\n            internalType: 'address',\n            type: 'address',\n          },\n          {\n            name: 'l1ERC721BridgeProxy',\n            internalType: 'address',\n            type: 'address',\n          },\n          {\n            name: 'systemConfigProxy',\n            internalType: 'address',\n            type: 'address',\n          },\n        ],\n      },\n      {\n        name: 'implementationAddressConfig',\n        internalType: 'struct SystemDictator.ImplementationAddressConfig',\n        type: 'tuple',\n        components: [\n          {\n            name: 'l2OutputOracleImpl',\n            internalType: 'contract L2OutputOracle',\n            type: 'address',\n          },\n          {\n            name: 'optimismPortalImpl',\n            internalType: 'contract OptimismPortal',\n            type: 'address',\n          },\n          {\n            name: 'l1CrossDomainMessengerImpl',\n            internalType: 'contract L1CrossDomainMessenger',\n            type: 'address',\n          },\n          {\n            name: 'l1StandardBridgeImpl',\n            internalType: 'contract L1StandardBridge',\n            type: 'address',\n          },\n          {\n            name: 'optimismMintableERC20FactoryImpl',\n            internalType: 'contract OptimismMintableERC20Factory',\n            type: 'address',\n          },\n          {\n            name: 'l1ERC721BridgeImpl',\n            internalType: 'contract L1ERC721Bridge',\n            type: 'address',\n          },\n          {\n            name: 'portalSenderImpl',\n            internalType: 'contract PortalSender',\n            type: 'address',\n          },\n          {\n            name: 'systemConfigImpl',\n            internalType: 'contract SystemConfig',\n            type: 'address',\n          },\n        ],\n      },\n      {\n        name: 'systemConfigConfig',\n        internalType: 'struct SystemDictator.SystemConfigConfig',\n        type: 'tuple',\n        components: [\n          { name: 'owner', internalType: 'address', type: 'address' },\n          { name: 'overhead', internalType: 'uint256', type: 'uint256' },\n          { name: 'scalar', internalType: 'uint256', type: 'uint256' },\n          { name: 'batcherHash', internalType: 'bytes32', type: 'bytes32' },\n          { name: 'gasLimit', internalType: 'uint64', type: 'uint64' },\n          {\n            name: 'unsafeBlockSigner',\n            internalType: 'address',\n            type: 'address',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'currentStep',\n    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'dynamicConfigSet',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'exit1',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'finalize',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'finalized',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_config',\n        internalType: 'struct SystemDictator.DeployConfig',\n        type: 'tuple',\n        components: [\n          {\n            name: 'globalConfig',\n            internalType: 'struct SystemDictator.GlobalConfig',\n            type: 'tuple',\n            components: [\n              {\n                name: 'addressManager',\n                internalType: 'contract AddressManager',\n                type: 'address',\n              },\n              {\n                name: 'proxyAdmin',\n                internalType: 'contract ProxyAdmin',\n                type: 'address',\n              },\n              { name: 'controller', internalType: 'address', type: 'address' },\n              { name: 'finalOwner', internalType: 'address', type: 'address' },\n            ],\n          },\n          {\n            name: 'proxyAddressConfig',\n            internalType: 'struct SystemDictator.ProxyAddressConfig',\n            type: 'tuple',\n            components: [\n              {\n                name: 'l2OutputOracleProxy',\n                internalType: 'address',\n                type: 'address',\n              },\n              {\n                name: 'optimismPortalProxy',\n                internalType: 'address',\n                type: 'address',\n              },\n              {\n                name: 'l1CrossDomainMessengerProxy',\n                internalType: 'address',\n                type: 'address',\n              },\n              {\n                name: 'l1StandardBridgeProxy',\n                internalType: 'address',\n                type: 'address',\n              },\n              {\n                name: 'optimismMintableERC20FactoryProxy',\n                internalType: 'address',\n                type: 'address',\n              },\n              {\n                name: 'l1ERC721BridgeProxy',\n                internalType: 'address',\n                type: 'address',\n              },\n              {\n                name: 'systemConfigProxy',\n                internalType: 'address',\n                type: 'address',\n              },\n            ],\n          },\n          {\n            name: 'implementationAddressConfig',\n            internalType: 'struct SystemDictator.ImplementationAddressConfig',\n            type: 'tuple',\n            components: [\n              {\n                name: 'l2OutputOracleImpl',\n                internalType: 'contract L2OutputOracle',\n                type: 'address',\n              },\n              {\n                name: 'optimismPortalImpl',\n                internalType: 'contract OptimismPortal',\n                type: 'address',\n              },\n              {\n                name: 'l1CrossDomainMessengerImpl',\n                internalType: 'contract L1CrossDomainMessenger',\n                type: 'address',\n              },\n              {\n                name: 'l1StandardBridgeImpl',\n                internalType: 'contract L1StandardBridge',\n                type: 'address',\n              },\n              {\n                name: 'optimismMintableERC20FactoryImpl',\n                internalType: 'contract OptimismMintableERC20Factory',\n                type: 'address',\n              },\n              {\n                name: 'l1ERC721BridgeImpl',\n                internalType: 'contract L1ERC721Bridge',\n                type: 'address',\n              },\n              {\n                name: 'portalSenderImpl',\n                internalType: 'contract PortalSender',\n                type: 'address',\n              },\n              {\n                name: 'systemConfigImpl',\n                internalType: 'contract SystemConfig',\n                type: 'address',\n              },\n            ],\n          },\n          {\n            name: 'systemConfigConfig',\n            internalType: 'struct SystemDictator.SystemConfigConfig',\n            type: 'tuple',\n            components: [\n              { name: 'owner', internalType: 'address', type: 'address' },\n              { name: 'overhead', internalType: 'uint256', type: 'uint256' },\n              { name: 'scalar', internalType: 'uint256', type: 'uint256' },\n              { name: 'batcherHash', internalType: 'bytes32', type: 'bytes32' },\n              { name: 'gasLimit', internalType: 'uint64', type: 'uint64' },\n              {\n                name: 'unsafeBlockSigner',\n                internalType: 'address',\n                type: 'address',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n    name: 'initialize',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'l2OutputOracleDynamicConfig',\n    outputs: [\n      {\n        name: 'l2OutputOracleStartingBlockNumber',\n        internalType: 'uint256',\n        type: 'uint256',\n      },\n      {\n        name: 'l2OutputOracleStartingTimestamp',\n        internalType: 'uint256',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'oldL1CrossDomainMessenger',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'renounceOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'step1',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'step2',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'step3',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'step4',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'step5',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'step6',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_l2OutputOracleDynamicConfig',\n        internalType: 'struct SystemDictator.L2OutputOracleDynamicConfig',\n        type: 'tuple',\n        components: [\n          {\n            name: 'l2OutputOracleStartingBlockNumber',\n            internalType: 'uint256',\n            type: 'uint256',\n          },\n          {\n            name: 'l2OutputOracleStartingTimestamp',\n            internalType: 'uint256',\n            type: 'uint256',\n          },\n        ],\n      },\n    ],\n    name: 'updateL2OutputOracleDynamicConfig',\n    outputs: [],\n  },\n] as const\n\n/**\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport const systemDictatorGoerliAddress = {\n  5: '0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971',\n} as const\n\n/**\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport const systemDictatorGoerliConfig = {\n  address: systemDictatorGoerliAddress,\n  abi: systemDictatorGoerliABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// TeleportrWithdrawer\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport const teleportrWithdrawerABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [{ name: '_owner', internalType: 'address', type: 'address' }],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'user', internalType: 'address', type: 'address', indexed: true },\n      {\n        name: 'newOwner',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n    ],\n    name: 'OwnerUpdated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'ReceivedETH',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'withdrawer',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'recipient',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'asset',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'WithdrewERC20',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'withdrawer',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'recipient',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'asset',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },\n    ],\n    name: 'WithdrewERC721',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'withdrawer',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'recipient',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'WithdrewETH',\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_target', internalType: 'address', type: 'address' },\n      { name: '_data', internalType: 'bytes', type: 'bytes' },\n      { name: '_gas', internalType: 'uint256', type: 'uint256' },\n      { name: '_value', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'CALL',\n    outputs: [\n      { name: '', internalType: 'bool', type: 'bool' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_target', internalType: 'address', type: 'address' },\n      { name: '_data', internalType: 'bytes', type: 'bytes' },\n      { name: '_gas', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'DELEGATECALL',\n    outputs: [\n      { name: '', internalType: 'bool', type: 'bool' },\n      { name: '', internalType: 'bytes', type: 'bytes' },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'data',\n    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'recipient',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_data', internalType: 'bytes', type: 'bytes' }],\n    name: 'setData',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'setOwner',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_recipient', internalType: 'address', type: 'address' }],\n    name: 'setRecipient',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_teleportr', internalType: 'address', type: 'address' }],\n    name: 'setTeleportr',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'teleportr',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_asset', internalType: 'contract ERC20', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'withdrawERC20',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_asset', internalType: 'contract ERC20', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n    ],\n    name: 'withdrawERC20',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_asset', internalType: 'contract ERC721', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_id', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'withdrawERC721',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_to', internalType: 'address payable', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'withdrawETH',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_to', internalType: 'address payable', type: 'address' }],\n    name: 'withdrawETH',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'withdrawFromTeleportr',\n    outputs: [],\n  },\n  { stateMutability: 'payable', type: 'receive' },\n] as const\n\n/**\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport const teleportrWithdrawerAddress = {\n  1: '0x78A25524D90E3D0596558fb43789bD800a5c3007',\n} as const\n\n/**\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport const teleportrWithdrawerConfig = {\n  address: teleportrWithdrawerAddress,\n  abi: teleportrWithdrawerABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// AttestationStation\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n */\nexport const attestationStationABI = [\n  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'creator',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'about',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      { name: 'key', internalType: 'bytes32', type: 'bytes32', indexed: true },\n      { name: 'val', internalType: 'bytes', type: 'bytes', indexed: false },\n    ],\n    name: 'AttestationCreated',\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      {\n        name: '_attestations',\n        internalType: 'struct AttestationStation.AttestationData[]',\n        type: 'tuple[]',\n        components: [\n          { name: 'about', internalType: 'address', type: 'address' },\n          { name: 'key', internalType: 'bytes32', type: 'bytes32' },\n          { name: 'val', internalType: 'bytes', type: 'bytes' },\n        ],\n      },\n    ],\n    name: 'attest',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_about', internalType: 'address', type: 'address' },\n      { name: '_key', internalType: 'bytes32', type: 'bytes32' },\n      { name: '_val', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'attest',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'attestations',\n    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'version',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n] as const\n\n/**\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n */\nexport const attestationStationAddress = {\n  10: '0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77',\n  420: '0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77',\n} as const\n\n/**\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n */\nexport const attestationStationConfig = {\n  address: attestationStationAddress,\n  abi: attestationStationABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// L2ERC721Bridge\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000014)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000014)\n */\nexport const l2Erc721BridgeABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [\n      { name: '_messenger', internalType: 'address', type: 'address' },\n      { name: '_otherBridge', internalType: 'address', type: 'address' },\n    ],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'localToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'remoteToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: false },\n      {\n        name: 'tokenId',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      {\n        name: 'extraData',\n        internalType: 'bytes',\n        type: 'bytes',\n        indexed: false,\n      },\n    ],\n    name: 'ERC721BridgeFinalized',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'localToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'remoteToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: false },\n      {\n        name: 'tokenId',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      {\n        name: 'extraData',\n        internalType: 'bytes',\n        type: 'bytes',\n        indexed: false,\n      },\n    ],\n    name: 'ERC721BridgeInitiated',\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_localToken', internalType: 'address', type: 'address' },\n      { name: '_remoteToken', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_minGasLimit', internalType: 'uint32', type: 'uint32' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'bridgeERC721',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_localToken', internalType: 'address', type: 'address' },\n      { name: '_remoteToken', internalType: 'address', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_minGasLimit', internalType: 'uint32', type: 'uint32' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'bridgeERC721To',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_localToken', internalType: 'address', type: 'address' },\n      { name: '_remoteToken', internalType: 'address', type: 'address' },\n      { name: '_from', internalType: 'address', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'finalizeBridgeERC721',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'messenger',\n    outputs: [\n      {\n        name: '',\n        internalType: 'contract CrossDomainMessenger',\n        type: 'address',\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'otherBridge',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'version',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n] as const\n\n/**\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000014)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000014)\n */\nexport const l2Erc721BridgeAddress = {\n  10: '0x4200000000000000000000000000000000000014',\n  420: '0x4200000000000000000000000000000000000014',\n} as const\n\n/**\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000014)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000014)\n */\nexport const l2Erc721BridgeConfig = {\n  address: l2Erc721BridgeAddress,\n  abi: l2Erc721BridgeABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// MintManager\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x5C4e7Ba1E219E47948e6e3F55019A647bA501005)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76)\n */\nexport const mintManagerABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [\n      { name: '_upgrader', internalType: 'address', type: 'address' },\n      { name: '_governanceToken', internalType: 'address', type: 'address' },\n    ],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'previousOwner',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'newOwner',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n    ],\n    name: 'OwnershipTransferred',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'DENOMINATOR',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MINT_CAP',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MINT_PERIOD',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'governanceToken',\n    outputs: [\n      { name: '', internalType: 'contract GovernanceToken', type: 'address' },\n    ],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_account', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'mint',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'mintPermittedAfter',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'owner',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'renounceOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],\n    name: 'transferOwnership',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_newMintManager', internalType: 'address', type: 'address' },\n    ],\n    name: 'upgrade',\n    outputs: [],\n  },\n] as const\n\n/**\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x5C4e7Ba1E219E47948e6e3F55019A647bA501005)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76)\n */\nexport const mintManagerAddress = {\n  10: '0x5C4e7Ba1E219E47948e6e3F55019A647bA501005',\n  420: '0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76',\n} as const\n\n/**\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x5C4e7Ba1E219E47948e6e3F55019A647bA501005)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76)\n */\nexport const mintManagerConfig = {\n  address: mintManagerAddress,\n  abi: mintManagerABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// OptimismMintableERC721Factory\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000017)\n */\nexport const optimismMintableErc721FactoryABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [\n      { name: '_bridge', internalType: 'address', type: 'address' },\n      { name: '_remoteChainId', internalType: 'uint256', type: 'uint256' },\n    ],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'localToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'remoteToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'deployer',\n        internalType: 'address',\n        type: 'address',\n        indexed: false,\n      },\n    ],\n    name: 'OptimismMintableERC721Created',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'bridge',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_remoteToken', internalType: 'address', type: 'address' },\n      { name: '_name', internalType: 'string', type: 'string' },\n      { name: '_symbol', internalType: 'string', type: 'string' },\n    ],\n    name: 'createOptimismMintableERC721',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'isOptimismMintableERC721',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'remoteChainId',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'version',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n] as const\n\n/**\n * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000017)\n */\nexport const optimismMintableErc721FactoryAddress = {\n  10: '0x4200000000000000000000000000000000000017',\n} as const\n\n/**\n * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000017)\n */\nexport const optimismMintableErc721FactoryConfig = {\n  address: optimismMintableErc721FactoryAddress,\n  abi: optimismMintableErc721FactoryABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// OptimismMintableERC721Factory_optimism-goerli\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000017)\n */\nexport const optimismMintableErc721FactoryOptimismGoerliABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [\n      { name: '_bridge', internalType: 'address', type: 'address' },\n      { name: '_remoteChainId', internalType: 'uint256', type: 'uint256' },\n    ],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'localToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'remoteToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'deployer',\n        internalType: 'address',\n        type: 'address',\n        indexed: false,\n      },\n    ],\n    name: 'OptimismMintableERC721Created',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'BRIDGE',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'REMOTE_CHAIN_ID',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_remoteToken', internalType: 'address', type: 'address' },\n      { name: '_name', internalType: 'string', type: 'string' },\n      { name: '_symbol', internalType: 'string', type: 'string' },\n    ],\n    name: 'createOptimismMintableERC721',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'isOptimismMintableERC721',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'version',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n] as const\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000017)\n */\nexport const optimismMintableErc721FactoryOptimismGoerliAddress = {\n  420: '0x4200000000000000000000000000000000000017',\n} as const\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000017)\n */\nexport const optimismMintableErc721FactoryOptimismGoerliConfig = {\n  address: optimismMintableErc721FactoryOptimismGoerliAddress,\n  abi: optimismMintableErc721FactoryOptimismGoerliABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Optimist\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport const optimistABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [\n      { name: '_name', internalType: 'string', type: 'string' },\n      { name: '_symbol', internalType: 'string', type: 'string' },\n      { name: '_baseURIAttestor', internalType: 'address', type: 'address' },\n      {\n        name: '_attestationStation',\n        internalType: 'contract AttestationStation',\n        type: 'address',\n      },\n      {\n        name: '_optimistAllowlist',\n        internalType: 'contract OptimistAllowlist',\n        type: 'address',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'owner',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'approved',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'tokenId',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: true,\n      },\n    ],\n    name: 'Approval',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'owner',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'operator',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },\n    ],\n    name: 'ApprovalForAll',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'version', internalType: 'uint8', type: 'uint8', indexed: false },\n    ],\n    name: 'Initialized',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      {\n        name: 'tokenId',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: true,\n      },\n    ],\n    name: 'Transfer',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'ATTESTATION_STATION',\n    outputs: [\n      {\n        name: '',\n        internalType: 'contract AttestationStation',\n        type: 'address',\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'BASE_URI_ATTESTATION_KEY',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'BASE_URI_ATTESTOR',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'OPTIMIST_ALLOWLIST',\n    outputs: [\n      { name: '', internalType: 'contract OptimistAllowlist', type: 'address' },\n    ],\n  },\n  {\n    stateMutability: 'pure',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'baseURI',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'burn',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'getApproved',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_name', internalType: 'string', type: 'string' },\n      { name: '_symbol', internalType: 'string', type: 'string' },\n    ],\n    name: 'initialize',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: 'owner', internalType: 'address', type: 'address' },\n      { name: 'operator', internalType: 'address', type: 'address' },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_recipient', internalType: 'address', type: 'address' }],\n    name: 'isOnAllowList',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_recipient', internalType: 'address', type: 'address' }],\n    name: 'mint',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'name',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'ownerOf',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n      { name: 'data', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'bool', type: 'bool' },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],\n    name: 'supportsInterface',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'symbol',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'pure',\n    type: 'function',\n    inputs: [{ name: '_owner', internalType: 'address', type: 'address' }],\n    name: 'tokenIdOfAddress',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],\n    name: 'tokenURI',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address' },\n      { name: 'to', internalType: 'address', type: 'address' },\n      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'version',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n] as const\n\n/**\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport const optimistAddress = {\n  10: '0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5',\n  420: '0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5',\n} as const\n\n/**\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport const optimistConfig = {\n  address: optimistAddress,\n  abi: optimistABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// OptimistAllowlist\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n */\nexport const optimistAllowlistABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [\n      {\n        name: '_attestationStation',\n        internalType: 'contract AttestationStation',\n        type: 'address',\n      },\n      { name: '_allowlistAttestor', internalType: 'address', type: 'address' },\n      {\n        name: '_coinbaseQuestAttestor',\n        internalType: 'address',\n        type: 'address',\n      },\n      { name: '_optimistInviter', internalType: 'address', type: 'address' },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'ALLOWLIST_ATTESTOR',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'ATTESTATION_STATION',\n    outputs: [\n      {\n        name: '',\n        internalType: 'contract AttestationStation',\n        type: 'address',\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'COINBASE_QUEST_ATTESTOR',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'OPTIMIST_CAN_MINT_ATTESTATION_KEY',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'OPTIMIST_INVITER',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_claimer', internalType: 'address', type: 'address' }],\n    name: 'isAllowedToMint',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'version',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n] as const\n\n/**\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n */\nexport const optimistAllowlistAddress = {\n  10: '0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180',\n  420: '0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180',\n} as const\n\n/**\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n */\nexport const optimistAllowlistConfig = {\n  address: optimistAllowlistAddress,\n  abi: optimistAllowlistABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// OptimistInviter\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport const optimistInviterABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [\n      { name: '_inviteGranter', internalType: 'address', type: 'address' },\n      {\n        name: '_attestationStation',\n        internalType: 'contract AttestationStation',\n        type: 'address',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'version', internalType: 'uint8', type: 'uint8', indexed: false },\n    ],\n    name: 'Initialized',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'issuer',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'claimer',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n    ],\n    name: 'InviteClaimed',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'ATTESTATION_STATION',\n    outputs: [\n      {\n        name: '',\n        internalType: 'contract AttestationStation',\n        type: 'address',\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'CAN_INVITE_ATTESTATION_KEY',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'CLAIMABLE_INVITE_TYPEHASH',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'EIP712_VERSION',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'INVITE_GRANTER',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MIN_COMMITMENT_PERIOD',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_claimer', internalType: 'address', type: 'address' },\n      {\n        name: '_claimableInvite',\n        internalType: 'struct OptimistInviter.ClaimableInvite',\n        type: 'tuple',\n        components: [\n          { name: 'issuer', internalType: 'address', type: 'address' },\n          { name: 'nonce', internalType: 'bytes32', type: 'bytes32' },\n        ],\n      },\n      { name: '_signature', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'claimInvite',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_commitment', internalType: 'bytes32', type: 'bytes32' }],\n    name: 'commitInvite',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    name: 'commitmentTimestamps',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [{ name: '_name', internalType: 'string', type: 'string' }],\n    name: 'initialize',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'address', type: 'address' }],\n    name: 'inviteCounts',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_accounts', internalType: 'address[]', type: 'address[]' },\n      { name: '_inviteCount', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'setInviteCounts',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'bytes32', type: 'bytes32' },\n    ],\n    name: 'usedNonces',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'version',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n] as const\n\n/**\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport const optimistInviterAddress = {\n  10: '0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929',\n  420: '0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929',\n} as const\n\n/**\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport const optimistInviterConfig = {\n  address: optimistInviterAddress,\n  abi: optimistInviterABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// BaseFeeVault\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000019)\n */\nexport const baseFeeVaultABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [{ name: '_recipient', internalType: 'address', type: 'address' }],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'value',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      { name: 'to', internalType: 'address', type: 'address', indexed: false },\n      {\n        name: 'from',\n        internalType: 'address',\n        type: 'address',\n        indexed: false,\n      },\n    ],\n    name: 'Withdrawal',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MIN_WITHDRAWAL_AMOUNT',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'RECIPIENT',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'totalProcessed',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'version',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'withdraw',\n    outputs: [],\n  },\n  { stateMutability: 'payable', type: 'receive' },\n] as const\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000019)\n */\nexport const baseFeeVaultAddress = {\n  420: '0x4200000000000000000000000000000000000019',\n} as const\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000019)\n */\nexport const baseFeeVaultConfig = {\n  address: baseFeeVaultAddress,\n  abi: baseFeeVaultABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// GasPriceOracle\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000000F)\n */\nexport const gasPriceOracleABI = [\n  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'baseFee',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'pure',\n    type: 'function',\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'gasPrice',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_data', internalType: 'bytes', type: 'bytes' }],\n    name: 'getL1Fee',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '_data', internalType: 'bytes', type: 'bytes' }],\n    name: 'getL1GasUsed',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'l1BaseFee',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'overhead',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'scalar',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'version',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n] as const\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000000F)\n */\nexport const gasPriceOracleAddress = {\n  420: '0x420000000000000000000000000000000000000F',\n} as const\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000000F)\n */\nexport const gasPriceOracleConfig = {\n  address: gasPriceOracleAddress,\n  abi: gasPriceOracleABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// L1Block\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000015)\n */\nexport const l1BlockABI = [\n  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'DEPOSITOR_ACCOUNT',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'basefee',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'batcherHash',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'hash',\n    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'l1FeeOverhead',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'l1FeeScalar',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'number',\n    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'sequenceNumber',\n    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_number', internalType: 'uint64', type: 'uint64' },\n      { name: '_timestamp', internalType: 'uint64', type: 'uint64' },\n      { name: '_basefee', internalType: 'uint256', type: 'uint256' },\n      { name: '_hash', internalType: 'bytes32', type: 'bytes32' },\n      { name: '_sequenceNumber', internalType: 'uint64', type: 'uint64' },\n      { name: '_batcherHash', internalType: 'bytes32', type: 'bytes32' },\n      { name: '_l1FeeOverhead', internalType: 'uint256', type: 'uint256' },\n      { name: '_l1FeeScalar', internalType: 'uint256', type: 'uint256' },\n    ],\n    name: 'setL1BlockValues',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'timestamp',\n    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'version',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n] as const\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000015)\n */\nexport const l1BlockAddress = {\n  420: '0x4200000000000000000000000000000000000015',\n} as const\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000015)\n */\nexport const l1BlockConfig = {\n  address: l1BlockAddress,\n  abi: l1BlockABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// L1FeeVault\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000001a)\n */\nexport const l1FeeVaultABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [{ name: '_recipient', internalType: 'address', type: 'address' }],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'value',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      { name: 'to', internalType: 'address', type: 'address', indexed: false },\n      {\n        name: 'from',\n        internalType: 'address',\n        type: 'address',\n        indexed: false,\n      },\n    ],\n    name: 'Withdrawal',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MIN_WITHDRAWAL_AMOUNT',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'RECIPIENT',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'totalProcessed',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'version',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'withdraw',\n    outputs: [],\n  },\n  { stateMutability: 'payable', type: 'receive' },\n] as const\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000001a)\n */\nexport const l1FeeVaultAddress = {\n  420: '0x420000000000000000000000000000000000001A',\n} as const\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000001a)\n */\nexport const l1FeeVaultConfig = {\n  address: l1FeeVaultAddress,\n  abi: l1FeeVaultABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// L2CrossDomainMessenger\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport const l2CrossDomainMessengerABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [\n      {\n        name: '_l1CrossDomainMessenger',\n        internalType: 'address',\n        type: 'address',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'msgHash',\n        internalType: 'bytes32',\n        type: 'bytes32',\n        indexed: true,\n      },\n    ],\n    name: 'FailedRelayedMessage',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'version', internalType: 'uint8', type: 'uint8', indexed: false },\n    ],\n    name: 'Initialized',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'msgHash',\n        internalType: 'bytes32',\n        type: 'bytes32',\n        indexed: true,\n      },\n    ],\n    name: 'RelayedMessage',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'target',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'sender',\n        internalType: 'address',\n        type: 'address',\n        indexed: false,\n      },\n      { name: 'message', internalType: 'bytes', type: 'bytes', indexed: false },\n      {\n        name: 'messageNonce',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      {\n        name: 'gasLimit',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'SentMessage',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'sender',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'value',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n    ],\n    name: 'SentMessageExtension1',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MESSAGE_VERSION',\n    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MIN_GAS_CALLDATA_OVERHEAD',\n    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR',\n    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR',\n    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'OTHER_MESSENGER',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'RELAY_CALL_OVERHEAD',\n    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'RELAY_CONSTANT_OVERHEAD',\n    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'RELAY_GAS_CHECK_BUFFER',\n    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'RELAY_RESERVED_GAS',\n    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],\n  },\n  {\n    stateMutability: 'pure',\n    type: 'function',\n    inputs: [\n      { name: '_message', internalType: 'bytes', type: 'bytes' },\n      { name: '_minGasLimit', internalType: 'uint32', type: 'uint32' },\n    ],\n    name: 'baseGas',\n    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    name: 'failedMessages',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'initialize',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'l1CrossDomainMessenger',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'messageNonce',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_nonce', internalType: 'uint256', type: 'uint256' },\n      { name: '_sender', internalType: 'address', type: 'address' },\n      { name: '_target', internalType: 'address', type: 'address' },\n      { name: '_value', internalType: 'uint256', type: 'uint256' },\n      { name: '_minGasLimit', internalType: 'uint256', type: 'uint256' },\n      { name: '_message', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'relayMessage',\n    outputs: [],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_target', internalType: 'address', type: 'address' },\n      { name: '_message', internalType: 'bytes', type: 'bytes' },\n      { name: '_minGasLimit', internalType: 'uint32', type: 'uint32' },\n    ],\n    name: 'sendMessage',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    name: 'successfulMessages',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'version',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'xDomainMessageSender',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n] as const\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport const l2CrossDomainMessengerAddress = {\n  420: '0x4200000000000000000000000000000000000007',\n} as const\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport const l2CrossDomainMessengerConfig = {\n  address: l2CrossDomainMessengerAddress,\n  abi: l2CrossDomainMessengerABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// L2StandardBridge\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport const l2StandardBridgeABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [\n      {\n        name: '_otherBridge',\n        internalType: 'address payable',\n        type: 'address',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'l1Token',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'l2Token',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: false },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      {\n        name: 'extraData',\n        internalType: 'bytes',\n        type: 'bytes',\n        indexed: false,\n      },\n    ],\n    name: 'DepositFinalized',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'localToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'remoteToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: false },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      {\n        name: 'extraData',\n        internalType: 'bytes',\n        type: 'bytes',\n        indexed: false,\n      },\n    ],\n    name: 'ERC20BridgeFinalized',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'localToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'remoteToken',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: false },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      {\n        name: 'extraData',\n        internalType: 'bytes',\n        type: 'bytes',\n        indexed: false,\n      },\n    ],\n    name: 'ERC20BridgeInitiated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      {\n        name: 'extraData',\n        internalType: 'bytes',\n        type: 'bytes',\n        indexed: false,\n      },\n    ],\n    name: 'ETHBridgeFinalized',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: true },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      {\n        name: 'extraData',\n        internalType: 'bytes',\n        type: 'bytes',\n        indexed: false,\n      },\n    ],\n    name: 'ETHBridgeInitiated',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'l1Token',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'l2Token',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      { name: 'from', internalType: 'address', type: 'address', indexed: true },\n      { name: 'to', internalType: 'address', type: 'address', indexed: false },\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      {\n        name: 'extraData',\n        internalType: 'bytes',\n        type: 'bytes',\n        indexed: false,\n      },\n    ],\n    name: 'WithdrawalInitiated',\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_localToken', internalType: 'address', type: 'address' },\n      { name: '_remoteToken', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n      { name: '_minGasLimit', internalType: 'uint32', type: 'uint32' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'bridgeERC20',\n    outputs: [],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_localToken', internalType: 'address', type: 'address' },\n      { name: '_remoteToken', internalType: 'address', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n      { name: '_minGasLimit', internalType: 'uint32', type: 'uint32' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'bridgeERC20To',\n    outputs: [],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_minGasLimit', internalType: 'uint32', type: 'uint32' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'bridgeETH',\n    outputs: [],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_minGasLimit', internalType: 'uint32', type: 'uint32' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'bridgeETHTo',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [\n      { name: '', internalType: 'address', type: 'address' },\n      { name: '', internalType: 'address', type: 'address' },\n    ],\n    name: 'deposits',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [\n      { name: '_localToken', internalType: 'address', type: 'address' },\n      { name: '_remoteToken', internalType: 'address', type: 'address' },\n      { name: '_from', internalType: 'address', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'finalizeBridgeERC20',\n    outputs: [],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_from', internalType: 'address', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'finalizeBridgeETH',\n    outputs: [],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_l1Token', internalType: 'address', type: 'address' },\n      { name: '_l2Token', internalType: 'address', type: 'address' },\n      { name: '_from', internalType: 'address', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'finalizeDeposit',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'l1TokenBridge',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'messenger',\n    outputs: [\n      {\n        name: '',\n        internalType: 'contract CrossDomainMessenger',\n        type: 'address',\n      },\n    ],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'version',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_l2Token', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n      { name: '_minGasLimit', internalType: 'uint32', type: 'uint32' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'withdraw',\n    outputs: [],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_l2Token', internalType: 'address', type: 'address' },\n      { name: '_to', internalType: 'address', type: 'address' },\n      { name: '_amount', internalType: 'uint256', type: 'uint256' },\n      { name: '_minGasLimit', internalType: 'uint32', type: 'uint32' },\n      { name: '_extraData', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'withdrawTo',\n    outputs: [],\n  },\n  { stateMutability: 'payable', type: 'receive' },\n] as const\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport const l2StandardBridgeAddress = {\n  420: '0x4200000000000000000000000000000000000010',\n} as const\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport const l2StandardBridgeConfig = {\n  address: l2StandardBridgeAddress,\n  abi: l2StandardBridgeABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// L2ToL1MessagePasser\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000016)\n */\nexport const l2ToL1MessagePasserABI = [\n  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'nonce',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: true,\n      },\n      {\n        name: 'sender',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'target',\n        internalType: 'address',\n        type: 'address',\n        indexed: true,\n      },\n      {\n        name: 'value',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      {\n        name: 'gasLimit',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      { name: 'data', internalType: 'bytes', type: 'bytes', indexed: false },\n      {\n        name: 'withdrawalHash',\n        internalType: 'bytes32',\n        type: 'bytes32',\n        indexed: false,\n      },\n    ],\n    name: 'MessagePassed',\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'amount',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: true,\n      },\n    ],\n    name: 'WithdrawerBalanceBurnt',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MESSAGE_VERSION',\n    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'burn',\n    outputs: [],\n  },\n  {\n    stateMutability: 'payable',\n    type: 'function',\n    inputs: [\n      { name: '_target', internalType: 'address', type: 'address' },\n      { name: '_gasLimit', internalType: 'uint256', type: 'uint256' },\n      { name: '_data', internalType: 'bytes', type: 'bytes' },\n    ],\n    name: 'initiateWithdrawal',\n    outputs: [],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'messageNonce',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],\n    name: 'sentMessages',\n    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'version',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  { stateMutability: 'payable', type: 'receive' },\n] as const\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000016)\n */\nexport const l2ToL1MessagePasserAddress = {\n  420: '0x4200000000000000000000000000000000000016',\n} as const\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000016)\n */\nexport const l2ToL1MessagePasserConfig = {\n  address: l2ToL1MessagePasserAddress,\n  abi: l2ToL1MessagePasserABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// SequencerFeeVault\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000011)\n */\nexport const sequencerFeeVaultABI = [\n  {\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n    inputs: [{ name: '_recipient', internalType: 'address', type: 'address' }],\n  },\n  {\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        name: 'value',\n        internalType: 'uint256',\n        type: 'uint256',\n        indexed: false,\n      },\n      { name: 'to', internalType: 'address', type: 'address', indexed: false },\n      {\n        name: 'from',\n        internalType: 'address',\n        type: 'address',\n        indexed: false,\n      },\n    ],\n    name: 'Withdrawal',\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'MIN_WITHDRAWAL_AMOUNT',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'RECIPIENT',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'l1FeeWallet',\n    outputs: [{ name: '', internalType: 'address', type: 'address' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'totalProcessed',\n    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],\n  },\n  {\n    stateMutability: 'view',\n    type: 'function',\n    inputs: [],\n    name: 'version',\n    outputs: [{ name: '', internalType: 'string', type: 'string' }],\n  },\n  {\n    stateMutability: 'nonpayable',\n    type: 'function',\n    inputs: [],\n    name: 'withdraw',\n    outputs: [],\n  },\n  { stateMutability: 'payable', type: 'receive' },\n] as const\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000011)\n */\nexport const sequencerFeeVaultAddress = {\n  420: '0x4200000000000000000000000000000000000011',\n} as const\n\n/**\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000011)\n */\nexport const sequencerFeeVaultConfig = {\n  address: sequencerFeeVaultAddress,\n  abi: sequencerFeeVaultABI,\n} as const\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// eslintIgnore\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// React\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link addressManagerABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdE1FCfB0851916CA5101820A69b13a4E276bd81F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa6f73589243a6A7a9023b1Fa0651b1d89c177111)\n */\nexport function useAddressManagerRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof addressManagerABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof addressManagerABI, TFunctionName, TSelectData>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof addressManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: addressManagerABI,\n    address:\n      addressManagerAddress[chainId as keyof typeof addressManagerAddress],\n    ...config,\n  } as UseContractReadConfig<typeof addressManagerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link addressManagerABI}__ and `functionName` set to `\"getAddress\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdE1FCfB0851916CA5101820A69b13a4E276bd81F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa6f73589243a6A7a9023b1Fa0651b1d89c177111)\n */\nexport function useAddressManagerGetAddress<\n  TFunctionName extends 'getAddress',\n  TSelectData = ReadContractResult<typeof addressManagerABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof addressManagerABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof addressManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: addressManagerABI,\n    address:\n      addressManagerAddress[chainId as keyof typeof addressManagerAddress],\n    functionName: 'getAddress',\n    ...config,\n  } as UseContractReadConfig<typeof addressManagerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link addressManagerABI}__ and `functionName` set to `\"owner\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdE1FCfB0851916CA5101820A69b13a4E276bd81F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa6f73589243a6A7a9023b1Fa0651b1d89c177111)\n */\nexport function useAddressManagerOwner<\n  TFunctionName extends 'owner',\n  TSelectData = ReadContractResult<typeof addressManagerABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof addressManagerABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof addressManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: addressManagerABI,\n    address:\n      addressManagerAddress[chainId as keyof typeof addressManagerAddress],\n    functionName: 'owner',\n    ...config,\n  } as UseContractReadConfig<typeof addressManagerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link addressManagerABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdE1FCfB0851916CA5101820A69b13a4E276bd81F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa6f73589243a6A7a9023b1Fa0651b1d89c177111)\n */\nexport function useAddressManagerWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof addressManagerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof addressManagerABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<typeof addressManagerABI, TFunctionName, TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof addressManagerABI, TFunctionName, TMode>({\n    abi: addressManagerABI,\n    address:\n      addressManagerAddress[chainId as keyof typeof addressManagerAddress],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link addressManagerABI}__ and `functionName` set to `\"renounceOwnership\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdE1FCfB0851916CA5101820A69b13a4E276bd81F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa6f73589243a6A7a9023b1Fa0651b1d89c177111)\n */\nexport function useAddressManagerRenounceOwnership<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof addressManagerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof addressManagerABI,\n          'renounceOwnership'\n        >['request']['abi'],\n        'renounceOwnership',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'renounceOwnership'\n      }\n    : UseContractWriteConfig<\n        typeof addressManagerABI,\n        'renounceOwnership',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'renounceOwnership'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof addressManagerABI, 'renounceOwnership', TMode>(\n    {\n      abi: addressManagerABI,\n      address:\n        addressManagerAddress[chainId as keyof typeof addressManagerAddress],\n      functionName: 'renounceOwnership',\n      ...config,\n    } as any\n  )\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link addressManagerABI}__ and `functionName` set to `\"setAddress\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdE1FCfB0851916CA5101820A69b13a4E276bd81F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa6f73589243a6A7a9023b1Fa0651b1d89c177111)\n */\nexport function useAddressManagerSetAddress<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof addressManagerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof addressManagerABI,\n          'setAddress'\n        >['request']['abi'],\n        'setAddress',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'setAddress' }\n    : UseContractWriteConfig<typeof addressManagerABI, 'setAddress', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'setAddress'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof addressManagerABI, 'setAddress', TMode>({\n    abi: addressManagerABI,\n    address:\n      addressManagerAddress[chainId as keyof typeof addressManagerAddress],\n    functionName: 'setAddress',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link addressManagerABI}__ and `functionName` set to `\"transferOwnership\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdE1FCfB0851916CA5101820A69b13a4E276bd81F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa6f73589243a6A7a9023b1Fa0651b1d89c177111)\n */\nexport function useAddressManagerTransferOwnership<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof addressManagerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof addressManagerABI,\n          'transferOwnership'\n        >['request']['abi'],\n        'transferOwnership',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'transferOwnership'\n      }\n    : UseContractWriteConfig<\n        typeof addressManagerABI,\n        'transferOwnership',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'transferOwnership'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof addressManagerABI, 'transferOwnership', TMode>(\n    {\n      abi: addressManagerABI,\n      address:\n        addressManagerAddress[chainId as keyof typeof addressManagerAddress],\n      functionName: 'transferOwnership',\n      ...config,\n    } as any\n  )\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link addressManagerABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdE1FCfB0851916CA5101820A69b13a4E276bd81F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa6f73589243a6A7a9023b1Fa0651b1d89c177111)\n */\nexport function usePrepareAddressManagerWrite<TFunctionName extends string>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof addressManagerABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof addressManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: addressManagerABI,\n    address:\n      addressManagerAddress[chainId as keyof typeof addressManagerAddress],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof addressManagerABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link addressManagerABI}__ and `functionName` set to `\"renounceOwnership\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdE1FCfB0851916CA5101820A69b13a4E276bd81F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa6f73589243a6A7a9023b1Fa0651b1d89c177111)\n */\nexport function usePrepareAddressManagerRenounceOwnership(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof addressManagerABI,\n      'renounceOwnership'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof addressManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: addressManagerABI,\n    address:\n      addressManagerAddress[chainId as keyof typeof addressManagerAddress],\n    functionName: 'renounceOwnership',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof addressManagerABI, 'renounceOwnership'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link addressManagerABI}__ and `functionName` set to `\"setAddress\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdE1FCfB0851916CA5101820A69b13a4E276bd81F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa6f73589243a6A7a9023b1Fa0651b1d89c177111)\n */\nexport function usePrepareAddressManagerSetAddress(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof addressManagerABI, 'setAddress'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof addressManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: addressManagerABI,\n    address:\n      addressManagerAddress[chainId as keyof typeof addressManagerAddress],\n    functionName: 'setAddress',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof addressManagerABI, 'setAddress'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link addressManagerABI}__ and `functionName` set to `\"transferOwnership\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdE1FCfB0851916CA5101820A69b13a4E276bd81F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa6f73589243a6A7a9023b1Fa0651b1d89c177111)\n */\nexport function usePrepareAddressManagerTransferOwnership(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof addressManagerABI,\n      'transferOwnership'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof addressManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: addressManagerABI,\n    address:\n      addressManagerAddress[chainId as keyof typeof addressManagerAddress],\n    functionName: 'transferOwnership',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof addressManagerABI, 'transferOwnership'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link addressManagerABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdE1FCfB0851916CA5101820A69b13a4E276bd81F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa6f73589243a6A7a9023b1Fa0651b1d89c177111)\n */\nexport function useAddressManagerEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof addressManagerABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof addressManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: addressManagerABI,\n    address:\n      addressManagerAddress[chainId as keyof typeof addressManagerAddress],\n    ...config,\n  } as UseContractEventConfig<typeof addressManagerABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link addressManagerABI}__ and `eventName` set to `\"AddressSet\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdE1FCfB0851916CA5101820A69b13a4E276bd81F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa6f73589243a6A7a9023b1Fa0651b1d89c177111)\n */\nexport function useAddressManagerAddressSetEvent(\n  config: Omit<\n    UseContractEventConfig<typeof addressManagerABI, 'AddressSet'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof addressManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: addressManagerABI,\n    address:\n      addressManagerAddress[chainId as keyof typeof addressManagerAddress],\n    eventName: 'AddressSet',\n    ...config,\n  } as UseContractEventConfig<typeof addressManagerABI, 'AddressSet'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link addressManagerABI}__ and `eventName` set to `\"OwnershipTransferred\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdE1FCfB0851916CA5101820A69b13a4E276bd81F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa6f73589243a6A7a9023b1Fa0651b1d89c177111)\n */\nexport function useAddressManagerOwnershipTransferredEvent(\n  config: Omit<\n    UseContractEventConfig<typeof addressManagerABI, 'OwnershipTransferred'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof addressManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: addressManagerABI,\n    address:\n      addressManagerAddress[chainId as keyof typeof addressManagerAddress],\n    eventName: 'OwnershipTransferred',\n    ...config,\n  } as UseContractEventConfig<typeof addressManagerABI, 'OwnershipTransferred'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link assetReceiverABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport function useAssetReceiverRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof assetReceiverABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof assetReceiverABI, TFunctionName, TSelectData>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof assetReceiverAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: assetReceiverABI,\n    address: assetReceiverAddress[chainId as keyof typeof assetReceiverAddress],\n    ...config,\n  } as UseContractReadConfig<typeof assetReceiverABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link assetReceiverABI}__ and `functionName` set to `\"owner\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport function useAssetReceiverOwner<\n  TFunctionName extends 'owner',\n  TSelectData = ReadContractResult<typeof assetReceiverABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof assetReceiverABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof assetReceiverAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: assetReceiverABI,\n    address: assetReceiverAddress[chainId as keyof typeof assetReceiverAddress],\n    functionName: 'owner',\n    ...config,\n  } as UseContractReadConfig<typeof assetReceiverABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link assetReceiverABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport function useAssetReceiverWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof assetReceiverAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof assetReceiverABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<typeof assetReceiverABI, TFunctionName, TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof assetReceiverABI, TFunctionName, TMode>({\n    abi: assetReceiverABI,\n    address: assetReceiverAddress[chainId as keyof typeof assetReceiverAddress],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link assetReceiverABI}__ and `functionName` set to `\"CALL\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport function useAssetReceiverCall<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof assetReceiverAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof assetReceiverABI,\n          'CALL'\n        >['request']['abi'],\n        'CALL',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'CALL' }\n    : UseContractWriteConfig<typeof assetReceiverABI, 'CALL', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'CALL'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof assetReceiverABI, 'CALL', TMode>({\n    abi: assetReceiverABI,\n    address: assetReceiverAddress[chainId as keyof typeof assetReceiverAddress],\n    functionName: 'CALL',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link assetReceiverABI}__ and `functionName` set to `\"DELEGATECALL\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport function useAssetReceiverDelegatecall<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof assetReceiverAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof assetReceiverABI,\n          'DELEGATECALL'\n        >['request']['abi'],\n        'DELEGATECALL',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'DELEGATECALL'\n      }\n    : UseContractWriteConfig<typeof assetReceiverABI, 'DELEGATECALL', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'DELEGATECALL'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof assetReceiverABI, 'DELEGATECALL', TMode>({\n    abi: assetReceiverABI,\n    address: assetReceiverAddress[chainId as keyof typeof assetReceiverAddress],\n    functionName: 'DELEGATECALL',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link assetReceiverABI}__ and `functionName` set to `\"setOwner\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport function useAssetReceiverSetOwner<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof assetReceiverAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof assetReceiverABI,\n          'setOwner'\n        >['request']['abi'],\n        'setOwner',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'setOwner' }\n    : UseContractWriteConfig<typeof assetReceiverABI, 'setOwner', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'setOwner'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof assetReceiverABI, 'setOwner', TMode>({\n    abi: assetReceiverABI,\n    address: assetReceiverAddress[chainId as keyof typeof assetReceiverAddress],\n    functionName: 'setOwner',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link assetReceiverABI}__ and `functionName` set to `\"withdrawERC20\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport function useAssetReceiverWithdrawErc20<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof assetReceiverAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof assetReceiverABI,\n          'withdrawERC20'\n        >['request']['abi'],\n        'withdrawERC20',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'withdrawERC20'\n      }\n    : UseContractWriteConfig<\n        typeof assetReceiverABI,\n        'withdrawERC20',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'withdrawERC20'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof assetReceiverABI, 'withdrawERC20', TMode>({\n    abi: assetReceiverABI,\n    address: assetReceiverAddress[chainId as keyof typeof assetReceiverAddress],\n    functionName: 'withdrawERC20',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link assetReceiverABI}__ and `functionName` set to `\"withdrawERC721\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport function useAssetReceiverWithdrawErc721<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof assetReceiverAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof assetReceiverABI,\n          'withdrawERC721'\n        >['request']['abi'],\n        'withdrawERC721',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'withdrawERC721'\n      }\n    : UseContractWriteConfig<\n        typeof assetReceiverABI,\n        'withdrawERC721',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'withdrawERC721'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof assetReceiverABI, 'withdrawERC721', TMode>({\n    abi: assetReceiverABI,\n    address: assetReceiverAddress[chainId as keyof typeof assetReceiverAddress],\n    functionName: 'withdrawERC721',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link assetReceiverABI}__ and `functionName` set to `\"withdrawETH\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport function useAssetReceiverWithdrawEth<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof assetReceiverAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof assetReceiverABI,\n          'withdrawETH'\n        >['request']['abi'],\n        'withdrawETH',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'withdrawETH'\n      }\n    : UseContractWriteConfig<typeof assetReceiverABI, 'withdrawETH', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'withdrawETH'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof assetReceiverABI, 'withdrawETH', TMode>({\n    abi: assetReceiverABI,\n    address: assetReceiverAddress[chainId as keyof typeof assetReceiverAddress],\n    functionName: 'withdrawETH',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link assetReceiverABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport function usePrepareAssetReceiverWrite<TFunctionName extends string>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof assetReceiverABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof assetReceiverAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: assetReceiverABI,\n    address: assetReceiverAddress[chainId as keyof typeof assetReceiverAddress],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof assetReceiverABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link assetReceiverABI}__ and `functionName` set to `\"CALL\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport function usePrepareAssetReceiverCall(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof assetReceiverABI, 'CALL'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof assetReceiverAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: assetReceiverABI,\n    address: assetReceiverAddress[chainId as keyof typeof assetReceiverAddress],\n    functionName: 'CALL',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof assetReceiverABI, 'CALL'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link assetReceiverABI}__ and `functionName` set to `\"DELEGATECALL\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport function usePrepareAssetReceiverDelegatecall(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof assetReceiverABI, 'DELEGATECALL'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof assetReceiverAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: assetReceiverABI,\n    address: assetReceiverAddress[chainId as keyof typeof assetReceiverAddress],\n    functionName: 'DELEGATECALL',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof assetReceiverABI, 'DELEGATECALL'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link assetReceiverABI}__ and `functionName` set to `\"setOwner\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport function usePrepareAssetReceiverSetOwner(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof assetReceiverABI, 'setOwner'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof assetReceiverAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: assetReceiverABI,\n    address: assetReceiverAddress[chainId as keyof typeof assetReceiverAddress],\n    functionName: 'setOwner',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof assetReceiverABI, 'setOwner'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link assetReceiverABI}__ and `functionName` set to `\"withdrawERC20\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport function usePrepareAssetReceiverWithdrawErc20(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof assetReceiverABI, 'withdrawERC20'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof assetReceiverAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: assetReceiverABI,\n    address: assetReceiverAddress[chainId as keyof typeof assetReceiverAddress],\n    functionName: 'withdrawERC20',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof assetReceiverABI, 'withdrawERC20'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link assetReceiverABI}__ and `functionName` set to `\"withdrawERC721\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport function usePrepareAssetReceiverWithdrawErc721(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof assetReceiverABI, 'withdrawERC721'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof assetReceiverAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: assetReceiverABI,\n    address: assetReceiverAddress[chainId as keyof typeof assetReceiverAddress],\n    functionName: 'withdrawERC721',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof assetReceiverABI, 'withdrawERC721'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link assetReceiverABI}__ and `functionName` set to `\"withdrawETH\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport function usePrepareAssetReceiverWithdrawEth(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof assetReceiverABI, 'withdrawETH'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof assetReceiverAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: assetReceiverABI,\n    address: assetReceiverAddress[chainId as keyof typeof assetReceiverAddress],\n    functionName: 'withdrawETH',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof assetReceiverABI, 'withdrawETH'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link assetReceiverABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport function useAssetReceiverEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof assetReceiverABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof assetReceiverAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: assetReceiverABI,\n    address: assetReceiverAddress[chainId as keyof typeof assetReceiverAddress],\n    ...config,\n  } as UseContractEventConfig<typeof assetReceiverABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link assetReceiverABI}__ and `eventName` set to `\"OwnerUpdated\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport function useAssetReceiverOwnerUpdatedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof assetReceiverABI, 'OwnerUpdated'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof assetReceiverAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: assetReceiverABI,\n    address: assetReceiverAddress[chainId as keyof typeof assetReceiverAddress],\n    eventName: 'OwnerUpdated',\n    ...config,\n  } as UseContractEventConfig<typeof assetReceiverABI, 'OwnerUpdated'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link assetReceiverABI}__ and `eventName` set to `\"ReceivedETH\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport function useAssetReceiverReceivedEthEvent(\n  config: Omit<\n    UseContractEventConfig<typeof assetReceiverABI, 'ReceivedETH'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof assetReceiverAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: assetReceiverABI,\n    address: assetReceiverAddress[chainId as keyof typeof assetReceiverAddress],\n    eventName: 'ReceivedETH',\n    ...config,\n  } as UseContractEventConfig<typeof assetReceiverABI, 'ReceivedETH'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link assetReceiverABI}__ and `eventName` set to `\"WithdrewERC20\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport function useAssetReceiverWithdrewErc20Event(\n  config: Omit<\n    UseContractEventConfig<typeof assetReceiverABI, 'WithdrewERC20'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof assetReceiverAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: assetReceiverABI,\n    address: assetReceiverAddress[chainId as keyof typeof assetReceiverAddress],\n    eventName: 'WithdrewERC20',\n    ...config,\n  } as UseContractEventConfig<typeof assetReceiverABI, 'WithdrewERC20'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link assetReceiverABI}__ and `eventName` set to `\"WithdrewERC721\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport function useAssetReceiverWithdrewErc721Event(\n  config: Omit<\n    UseContractEventConfig<typeof assetReceiverABI, 'WithdrewERC721'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof assetReceiverAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: assetReceiverABI,\n    address: assetReceiverAddress[chainId as keyof typeof assetReceiverAddress],\n    eventName: 'WithdrewERC721',\n    ...config,\n  } as UseContractEventConfig<typeof assetReceiverABI, 'WithdrewERC721'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link assetReceiverABI}__ and `eventName` set to `\"WithdrewETH\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x15DdA60616Ffca20371ED1659dBB78E888f65556)\n */\nexport function useAssetReceiverWithdrewEthEvent(\n  config: Omit<\n    UseContractEventConfig<typeof assetReceiverABI, 'WithdrewETH'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof assetReceiverAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: assetReceiverABI,\n    address: assetReceiverAddress[chainId as keyof typeof assetReceiverAddress],\n    eventName: 'WithdrewETH',\n    ...config,\n  } as UseContractEventConfig<typeof assetReceiverABI, 'WithdrewETH'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link checkBalanceHighABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x7eC64a8a591bFf829ff6C8be76074D540ACb813F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x7eC64a8a591bFf829ff6C8be76074D540ACb813F)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x5d7103853f12109A7d27F118e54BbC654ad847E9)\n */\nexport function useCheckBalanceHighRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof checkBalanceHighABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof checkBalanceHighABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof checkBalanceHighAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: checkBalanceHighABI,\n    address:\n      checkBalanceHighAddress[chainId as keyof typeof checkBalanceHighAddress],\n    ...config,\n  } as UseContractReadConfig<typeof checkBalanceHighABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link checkBalanceHighABI}__ and `functionName` set to `\"check\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x7eC64a8a591bFf829ff6C8be76074D540ACb813F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x7eC64a8a591bFf829ff6C8be76074D540ACb813F)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x5d7103853f12109A7d27F118e54BbC654ad847E9)\n */\nexport function useCheckBalanceHighCheck<\n  TFunctionName extends 'check',\n  TSelectData = ReadContractResult<typeof checkBalanceHighABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof checkBalanceHighABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof checkBalanceHighAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: checkBalanceHighABI,\n    address:\n      checkBalanceHighAddress[chainId as keyof typeof checkBalanceHighAddress],\n    functionName: 'check',\n    ...config,\n  } as UseContractReadConfig<typeof checkBalanceHighABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link checkBalanceHighABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x7eC64a8a591bFf829ff6C8be76074D540ACb813F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x7eC64a8a591bFf829ff6C8be76074D540ACb813F)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x5d7103853f12109A7d27F118e54BbC654ad847E9)\n */\nexport function useCheckBalanceHighEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof checkBalanceHighABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof checkBalanceHighAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: checkBalanceHighABI,\n    address:\n      checkBalanceHighAddress[chainId as keyof typeof checkBalanceHighAddress],\n    ...config,\n  } as UseContractEventConfig<typeof checkBalanceHighABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link checkBalanceHighABI}__ and `eventName` set to `\"_EventToExposeStructInABI__Params\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x7eC64a8a591bFf829ff6C8be76074D540ACb813F)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x7eC64a8a591bFf829ff6C8be76074D540ACb813F)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x5d7103853f12109A7d27F118e54BbC654ad847E9)\n */\nexport function useCheckBalanceHighEventToExposeStructInAbiParamsEvent(\n  config: Omit<\n    UseContractEventConfig<\n      typeof checkBalanceHighABI,\n      '_EventToExposeStructInABI__Params'\n    >,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof checkBalanceHighAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: checkBalanceHighABI,\n    address:\n      checkBalanceHighAddress[chainId as keyof typeof checkBalanceHighAddress],\n    eventName: '_EventToExposeStructInABI__Params',\n    ...config,\n  } as UseContractEventConfig<typeof checkBalanceHighABI, '_EventToExposeStructInABI__Params'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link checkBalanceLowABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x381a4eFC2A2C914eA1889722bB4B44Fa6BD5b640)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x381a4eFC2A2C914eA1889722bB4B44Fa6BD5b640)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x7Ce13D154FAEE5C8B3E6b19d4Add16f21d884474)\n */\nexport function useCheckBalanceLowRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof checkBalanceLowABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof checkBalanceLowABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof checkBalanceLowAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: checkBalanceLowABI,\n    address:\n      checkBalanceLowAddress[chainId as keyof typeof checkBalanceLowAddress],\n    ...config,\n  } as UseContractReadConfig<typeof checkBalanceLowABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link checkBalanceLowABI}__ and `functionName` set to `\"check\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x381a4eFC2A2C914eA1889722bB4B44Fa6BD5b640)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x381a4eFC2A2C914eA1889722bB4B44Fa6BD5b640)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x7Ce13D154FAEE5C8B3E6b19d4Add16f21d884474)\n */\nexport function useCheckBalanceLowCheck<\n  TFunctionName extends 'check',\n  TSelectData = ReadContractResult<typeof checkBalanceLowABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof checkBalanceLowABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof checkBalanceLowAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: checkBalanceLowABI,\n    address:\n      checkBalanceLowAddress[chainId as keyof typeof checkBalanceLowAddress],\n    functionName: 'check',\n    ...config,\n  } as UseContractReadConfig<typeof checkBalanceLowABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link checkBalanceLowABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x381a4eFC2A2C914eA1889722bB4B44Fa6BD5b640)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x381a4eFC2A2C914eA1889722bB4B44Fa6BD5b640)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x7Ce13D154FAEE5C8B3E6b19d4Add16f21d884474)\n */\nexport function useCheckBalanceLowEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof checkBalanceLowABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof checkBalanceLowAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: checkBalanceLowABI,\n    address:\n      checkBalanceLowAddress[chainId as keyof typeof checkBalanceLowAddress],\n    ...config,\n  } as UseContractEventConfig<typeof checkBalanceLowABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link checkBalanceLowABI}__ and `eventName` set to `\"_EventToExposeStructInABI__Params\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x381a4eFC2A2C914eA1889722bB4B44Fa6BD5b640)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x381a4eFC2A2C914eA1889722bB4B44Fa6BD5b640)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x7Ce13D154FAEE5C8B3E6b19d4Add16f21d884474)\n */\nexport function useCheckBalanceLowEventToExposeStructInAbiParamsEvent(\n  config: Omit<\n    UseContractEventConfig<\n      typeof checkBalanceLowABI,\n      '_EventToExposeStructInABI__Params'\n    >,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof checkBalanceLowAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: checkBalanceLowABI,\n    address:\n      checkBalanceLowAddress[chainId as keyof typeof checkBalanceLowAddress],\n    eventName: '_EventToExposeStructInABI__Params',\n    ...config,\n  } as UseContractEventConfig<typeof checkBalanceLowABI, '_EventToExposeStructInABI__Params'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link checkGelatoLowABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4f7CFc43f6D262a085F3b946cAC69E7a8E39BBAa)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4f7CFc43f6D262a085F3b946cAC69E7a8E39BBAa)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0xF9c8a4Cb4021f57F9f6d69799cA9BefF64524862)\n */\nexport function useCheckGelatoLowRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof checkGelatoLowABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof checkGelatoLowABI, TFunctionName, TSelectData>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof checkGelatoLowAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: checkGelatoLowABI,\n    address:\n      checkGelatoLowAddress[chainId as keyof typeof checkGelatoLowAddress],\n    ...config,\n  } as UseContractReadConfig<typeof checkGelatoLowABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link checkGelatoLowABI}__ and `functionName` set to `\"check\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4f7CFc43f6D262a085F3b946cAC69E7a8E39BBAa)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4f7CFc43f6D262a085F3b946cAC69E7a8E39BBAa)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0xF9c8a4Cb4021f57F9f6d69799cA9BefF64524862)\n */\nexport function useCheckGelatoLowCheck<\n  TFunctionName extends 'check',\n  TSelectData = ReadContractResult<typeof checkGelatoLowABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof checkGelatoLowABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof checkGelatoLowAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: checkGelatoLowABI,\n    address:\n      checkGelatoLowAddress[chainId as keyof typeof checkGelatoLowAddress],\n    functionName: 'check',\n    ...config,\n  } as UseContractReadConfig<typeof checkGelatoLowABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link checkGelatoLowABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4f7CFc43f6D262a085F3b946cAC69E7a8E39BBAa)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4f7CFc43f6D262a085F3b946cAC69E7a8E39BBAa)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0xF9c8a4Cb4021f57F9f6d69799cA9BefF64524862)\n */\nexport function useCheckGelatoLowEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof checkGelatoLowABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof checkGelatoLowAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: checkGelatoLowABI,\n    address:\n      checkGelatoLowAddress[chainId as keyof typeof checkGelatoLowAddress],\n    ...config,\n  } as UseContractEventConfig<typeof checkGelatoLowABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link checkGelatoLowABI}__ and `eventName` set to `\"_EventToExposeStructInABI__Params\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4f7CFc43f6D262a085F3b946cAC69E7a8E39BBAa)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4f7CFc43f6D262a085F3b946cAC69E7a8E39BBAa)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0xF9c8a4Cb4021f57F9f6d69799cA9BefF64524862)\n */\nexport function useCheckGelatoLowEventToExposeStructInAbiParamsEvent(\n  config: Omit<\n    UseContractEventConfig<\n      typeof checkGelatoLowABI,\n      '_EventToExposeStructInABI__Params'\n    >,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof checkGelatoLowAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: checkGelatoLowABI,\n    address:\n      checkGelatoLowAddress[chainId as keyof typeof checkGelatoLowAddress],\n    eventName: '_EventToExposeStructInABI__Params',\n    ...config,\n  } as UseContractEventConfig<typeof checkGelatoLowABI, '_EventToExposeStructInABI__Params'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link checkTrueABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5c741a38cb11424711231777D71689C458eE835D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5c741a38cb11424711231777D71689C458eE835D)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x47443D0C184e022F19BD1578F5bca6B8a9F58E32)\n */\nexport function useCheckTrueRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof checkTrueABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof checkTrueABI, TFunctionName, TSelectData>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof checkTrueAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: checkTrueABI,\n    address: checkTrueAddress[chainId as keyof typeof checkTrueAddress],\n    ...config,\n  } as UseContractReadConfig<typeof checkTrueABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link checkTrueABI}__ and `functionName` set to `\"check\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5c741a38cb11424711231777D71689C458eE835D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5c741a38cb11424711231777D71689C458eE835D)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x47443D0C184e022F19BD1578F5bca6B8a9F58E32)\n */\nexport function useCheckTrueCheck<\n  TFunctionName extends 'check',\n  TSelectData = ReadContractResult<typeof checkTrueABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof checkTrueABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof checkTrueAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: checkTrueABI,\n    address: checkTrueAddress[chainId as keyof typeof checkTrueAddress],\n    functionName: 'check',\n    ...config,\n  } as UseContractReadConfig<typeof checkTrueABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link drippieABI}__.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof drippieABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof drippieABI, TFunctionName, TSelectData>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return useContractRead({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    ...config,\n  } as UseContractReadConfig<typeof drippieABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link drippieABI}__ and `functionName` set to `\"drips\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieDrips<\n  TFunctionName extends 'drips',\n  TSelectData = ReadContractResult<typeof drippieABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof drippieABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return useContractRead({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    functionName: 'drips',\n    ...config,\n  } as UseContractReadConfig<typeof drippieABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link drippieABI}__ and `functionName` set to `\"executable\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieExecutable<\n  TFunctionName extends 'executable',\n  TSelectData = ReadContractResult<typeof drippieABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof drippieABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return useContractRead({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    functionName: 'executable',\n    ...config,\n  } as UseContractReadConfig<typeof drippieABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link drippieABI}__ and `functionName` set to `\"owner\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieOwner<\n  TFunctionName extends 'owner',\n  TSelectData = ReadContractResult<typeof drippieABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof drippieABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return useContractRead({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    functionName: 'owner',\n    ...config,\n  } as UseContractReadConfig<typeof drippieABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieABI}__.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<typeof drippieABI, string>['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<typeof drippieABI, TFunctionName, TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieABI, TFunctionName, TMode>({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieABI}__ and `functionName` set to `\"CALL\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieCall<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<typeof drippieABI, 'CALL'>['request']['abi'],\n        'CALL',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'CALL' }\n    : UseContractWriteConfig<typeof drippieABI, 'CALL', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'CALL'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieABI, 'CALL', TMode>({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    functionName: 'CALL',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieABI}__ and `functionName` set to `\"DELEGATECALL\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieDelegatecall<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieABI,\n          'DELEGATECALL'\n        >['request']['abi'],\n        'DELEGATECALL',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'DELEGATECALL'\n      }\n    : UseContractWriteConfig<typeof drippieABI, 'DELEGATECALL', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'DELEGATECALL'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieABI, 'DELEGATECALL', TMode>({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    functionName: 'DELEGATECALL',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieABI}__ and `functionName` set to `\"create\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieCreate<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieABI,\n          'create'\n        >['request']['abi'],\n        'create',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'create' }\n    : UseContractWriteConfig<typeof drippieABI, 'create', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'create'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieABI, 'create', TMode>({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    functionName: 'create',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieABI}__ and `functionName` set to `\"drip\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieDrip<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<typeof drippieABI, 'drip'>['request']['abi'],\n        'drip',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'drip' }\n    : UseContractWriteConfig<typeof drippieABI, 'drip', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'drip'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieABI, 'drip', TMode>({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    functionName: 'drip',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieABI}__ and `functionName` set to `\"setOwner\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieSetOwner<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieABI,\n          'setOwner'\n        >['request']['abi'],\n        'setOwner',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'setOwner' }\n    : UseContractWriteConfig<typeof drippieABI, 'setOwner', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'setOwner'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieABI, 'setOwner', TMode>({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    functionName: 'setOwner',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieABI}__ and `functionName` set to `\"status\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieStatus<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieABI,\n          'status'\n        >['request']['abi'],\n        'status',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'status' }\n    : UseContractWriteConfig<typeof drippieABI, 'status', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'status'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieABI, 'status', TMode>({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    functionName: 'status',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieABI}__ and `functionName` set to `\"withdrawERC20\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieWithdrawErc20<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieABI,\n          'withdrawERC20'\n        >['request']['abi'],\n        'withdrawERC20',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'withdrawERC20'\n      }\n    : UseContractWriteConfig<typeof drippieABI, 'withdrawERC20', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'withdrawERC20'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieABI, 'withdrawERC20', TMode>({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    functionName: 'withdrawERC20',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieABI}__ and `functionName` set to `\"withdrawERC721\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieWithdrawErc721<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieABI,\n          'withdrawERC721'\n        >['request']['abi'],\n        'withdrawERC721',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'withdrawERC721'\n      }\n    : UseContractWriteConfig<typeof drippieABI, 'withdrawERC721', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'withdrawERC721'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieABI, 'withdrawERC721', TMode>({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    functionName: 'withdrawERC721',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieABI}__ and `functionName` set to `\"withdrawETH\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieWithdrawEth<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieABI,\n          'withdrawETH'\n        >['request']['abi'],\n        'withdrawETH',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'withdrawETH'\n      }\n    : UseContractWriteConfig<typeof drippieABI, 'withdrawETH', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'withdrawETH'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieABI, 'withdrawETH', TMode>({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    functionName: 'withdrawETH',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieABI}__.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function usePrepareDrippieWrite<TFunctionName extends string>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieABI}__ and `functionName` set to `\"CALL\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function usePrepareDrippieCall(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieABI, 'CALL'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    functionName: 'CALL',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieABI, 'CALL'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieABI}__ and `functionName` set to `\"DELEGATECALL\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function usePrepareDrippieDelegatecall(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieABI, 'DELEGATECALL'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    functionName: 'DELEGATECALL',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieABI, 'DELEGATECALL'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieABI}__ and `functionName` set to `\"create\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function usePrepareDrippieCreate(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieABI, 'create'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    functionName: 'create',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieABI, 'create'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieABI}__ and `functionName` set to `\"drip\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function usePrepareDrippieDrip(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieABI, 'drip'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    functionName: 'drip',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieABI, 'drip'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieABI}__ and `functionName` set to `\"setOwner\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function usePrepareDrippieSetOwner(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieABI, 'setOwner'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    functionName: 'setOwner',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieABI, 'setOwner'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieABI}__ and `functionName` set to `\"status\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function usePrepareDrippieStatus(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieABI, 'status'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    functionName: 'status',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieABI, 'status'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieABI}__ and `functionName` set to `\"withdrawERC20\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function usePrepareDrippieWithdrawErc20(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieABI, 'withdrawERC20'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    functionName: 'withdrawERC20',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieABI, 'withdrawERC20'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieABI}__ and `functionName` set to `\"withdrawERC721\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function usePrepareDrippieWithdrawErc721(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieABI, 'withdrawERC721'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    functionName: 'withdrawERC721',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieABI, 'withdrawERC721'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieABI}__ and `functionName` set to `\"withdrawETH\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function usePrepareDrippieWithdrawEth(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieABI, 'withdrawETH'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    functionName: 'withdrawETH',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieABI, 'withdrawETH'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieABI}__.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof drippieABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    ...config,\n  } as UseContractEventConfig<typeof drippieABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieABI}__ and `eventName` set to `\"DripCreated\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieDripCreatedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof drippieABI, 'DripCreated'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    eventName: 'DripCreated',\n    ...config,\n  } as UseContractEventConfig<typeof drippieABI, 'DripCreated'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieABI}__ and `eventName` set to `\"DripExecuted\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieDripExecutedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof drippieABI, 'DripExecuted'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    eventName: 'DripExecuted',\n    ...config,\n  } as UseContractEventConfig<typeof drippieABI, 'DripExecuted'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieABI}__ and `eventName` set to `\"DripStatusUpdated\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieDripStatusUpdatedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof drippieABI, 'DripStatusUpdated'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    eventName: 'DripStatusUpdated',\n    ...config,\n  } as UseContractEventConfig<typeof drippieABI, 'DripStatusUpdated'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieABI}__ and `eventName` set to `\"OwnerUpdated\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieOwnerUpdatedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof drippieABI, 'OwnerUpdated'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    eventName: 'OwnerUpdated',\n    ...config,\n  } as UseContractEventConfig<typeof drippieABI, 'OwnerUpdated'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieABI}__ and `eventName` set to `\"ReceivedETH\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieReceivedEthEvent(\n  config: Omit<\n    UseContractEventConfig<typeof drippieABI, 'ReceivedETH'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    eventName: 'ReceivedETH',\n    ...config,\n  } as UseContractEventConfig<typeof drippieABI, 'ReceivedETH'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieABI}__ and `eventName` set to `\"WithdrewERC20\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieWithdrewErc20Event(\n  config: Omit<\n    UseContractEventConfig<typeof drippieABI, 'WithdrewERC20'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    eventName: 'WithdrewERC20',\n    ...config,\n  } as UseContractEventConfig<typeof drippieABI, 'WithdrewERC20'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieABI}__ and `eventName` set to `\"WithdrewERC721\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieWithdrewErc721Event(\n  config: Omit<\n    UseContractEventConfig<typeof drippieABI, 'WithdrewERC721'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    eventName: 'WithdrewERC721',\n    ...config,\n  } as UseContractEventConfig<typeof drippieABI, 'WithdrewERC721'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieABI}__ and `eventName` set to `\"WithdrewETH\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieWithdrewEthEvent(\n  config: Omit<\n    UseContractEventConfig<typeof drippieABI, 'WithdrewETH'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieABI,\n    address: drippieAddress[1],\n    eventName: 'WithdrewETH',\n    ...config,\n  } as UseContractEventConfig<typeof drippieABI, 'WithdrewETH'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link drippieGoerliABI}__.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof drippieGoerliABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof drippieGoerliABI, TFunctionName, TSelectData>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return useContractRead({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    ...config,\n  } as UseContractReadConfig<typeof drippieGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link drippieGoerliABI}__ and `functionName` set to `\"drips\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliDrips<\n  TFunctionName extends 'drips',\n  TSelectData = ReadContractResult<typeof drippieGoerliABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof drippieGoerliABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return useContractRead({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    functionName: 'drips',\n    ...config,\n  } as UseContractReadConfig<typeof drippieGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link drippieGoerliABI}__ and `functionName` set to `\"executable\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliExecutable<\n  TFunctionName extends 'executable',\n  TSelectData = ReadContractResult<typeof drippieGoerliABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof drippieGoerliABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return useContractRead({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    functionName: 'executable',\n    ...config,\n  } as UseContractReadConfig<typeof drippieGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link drippieGoerliABI}__ and `functionName` set to `\"owner\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliOwner<\n  TFunctionName extends 'owner',\n  TSelectData = ReadContractResult<typeof drippieGoerliABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof drippieGoerliABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return useContractRead({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    functionName: 'owner',\n    ...config,\n  } as UseContractReadConfig<typeof drippieGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieGoerliABI}__.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieGoerliABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<typeof drippieGoerliABI, TFunctionName, TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieGoerliABI, TFunctionName, TMode>({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieGoerliABI}__ and `functionName` set to `\"CALL\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliCall<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieGoerliABI,\n          'CALL'\n        >['request']['abi'],\n        'CALL',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'CALL' }\n    : UseContractWriteConfig<typeof drippieGoerliABI, 'CALL', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'CALL'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieGoerliABI, 'CALL', TMode>({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    functionName: 'CALL',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieGoerliABI}__ and `functionName` set to `\"DELEGATECALL\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliDelegatecall<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieGoerliABI,\n          'DELEGATECALL'\n        >['request']['abi'],\n        'DELEGATECALL',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'DELEGATECALL'\n      }\n    : UseContractWriteConfig<typeof drippieGoerliABI, 'DELEGATECALL', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'DELEGATECALL'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieGoerliABI, 'DELEGATECALL', TMode>({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    functionName: 'DELEGATECALL',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieGoerliABI}__ and `functionName` set to `\"create\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliCreate<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieGoerliABI,\n          'create'\n        >['request']['abi'],\n        'create',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'create' }\n    : UseContractWriteConfig<typeof drippieGoerliABI, 'create', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'create'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieGoerliABI, 'create', TMode>({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    functionName: 'create',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieGoerliABI}__ and `functionName` set to `\"drip\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliDrip<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieGoerliABI,\n          'drip'\n        >['request']['abi'],\n        'drip',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'drip' }\n    : UseContractWriteConfig<typeof drippieGoerliABI, 'drip', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'drip'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieGoerliABI, 'drip', TMode>({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    functionName: 'drip',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieGoerliABI}__ and `functionName` set to `\"setOwner\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliSetOwner<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieGoerliABI,\n          'setOwner'\n        >['request']['abi'],\n        'setOwner',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'setOwner' }\n    : UseContractWriteConfig<typeof drippieGoerliABI, 'setOwner', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'setOwner'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieGoerliABI, 'setOwner', TMode>({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    functionName: 'setOwner',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieGoerliABI}__ and `functionName` set to `\"status\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliStatus<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieGoerliABI,\n          'status'\n        >['request']['abi'],\n        'status',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'status' }\n    : UseContractWriteConfig<typeof drippieGoerliABI, 'status', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'status'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieGoerliABI, 'status', TMode>({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    functionName: 'status',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieGoerliABI}__ and `functionName` set to `\"withdrawERC20\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliWithdrawErc20<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieGoerliABI,\n          'withdrawERC20'\n        >['request']['abi'],\n        'withdrawERC20',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'withdrawERC20'\n      }\n    : UseContractWriteConfig<\n        typeof drippieGoerliABI,\n        'withdrawERC20',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'withdrawERC20'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieGoerliABI, 'withdrawERC20', TMode>({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    functionName: 'withdrawERC20',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieGoerliABI}__ and `functionName` set to `\"withdrawERC721\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliWithdrawErc721<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieGoerliABI,\n          'withdrawERC721'\n        >['request']['abi'],\n        'withdrawERC721',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'withdrawERC721'\n      }\n    : UseContractWriteConfig<\n        typeof drippieGoerliABI,\n        'withdrawERC721',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'withdrawERC721'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieGoerliABI, 'withdrawERC721', TMode>({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    functionName: 'withdrawERC721',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieGoerliABI}__ and `functionName` set to `\"withdrawETH\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliWithdrawEth<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieGoerliABI,\n          'withdrawETH'\n        >['request']['abi'],\n        'withdrawETH',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'withdrawETH'\n      }\n    : UseContractWriteConfig<typeof drippieGoerliABI, 'withdrawETH', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'withdrawETH'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieGoerliABI, 'withdrawETH', TMode>({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    functionName: 'withdrawETH',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieGoerliABI}__.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function usePrepareDrippieGoerliWrite<TFunctionName extends string>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieGoerliABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieGoerliABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieGoerliABI}__ and `functionName` set to `\"CALL\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function usePrepareDrippieGoerliCall(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieGoerliABI, 'CALL'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    functionName: 'CALL',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieGoerliABI, 'CALL'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieGoerliABI}__ and `functionName` set to `\"DELEGATECALL\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function usePrepareDrippieGoerliDelegatecall(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieGoerliABI, 'DELEGATECALL'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    functionName: 'DELEGATECALL',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieGoerliABI, 'DELEGATECALL'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieGoerliABI}__ and `functionName` set to `\"create\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function usePrepareDrippieGoerliCreate(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieGoerliABI, 'create'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    functionName: 'create',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieGoerliABI, 'create'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieGoerliABI}__ and `functionName` set to `\"drip\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function usePrepareDrippieGoerliDrip(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieGoerliABI, 'drip'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    functionName: 'drip',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieGoerliABI, 'drip'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieGoerliABI}__ and `functionName` set to `\"setOwner\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function usePrepareDrippieGoerliSetOwner(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieGoerliABI, 'setOwner'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    functionName: 'setOwner',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieGoerliABI, 'setOwner'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieGoerliABI}__ and `functionName` set to `\"status\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function usePrepareDrippieGoerliStatus(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieGoerliABI, 'status'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    functionName: 'status',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieGoerliABI, 'status'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieGoerliABI}__ and `functionName` set to `\"withdrawERC20\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function usePrepareDrippieGoerliWithdrawErc20(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieGoerliABI, 'withdrawERC20'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    functionName: 'withdrawERC20',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieGoerliABI, 'withdrawERC20'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieGoerliABI}__ and `functionName` set to `\"withdrawERC721\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function usePrepareDrippieGoerliWithdrawErc721(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieGoerliABI, 'withdrawERC721'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    functionName: 'withdrawERC721',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieGoerliABI, 'withdrawERC721'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieGoerliABI}__ and `functionName` set to `\"withdrawETH\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function usePrepareDrippieGoerliWithdrawEth(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieGoerliABI, 'withdrawETH'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    functionName: 'withdrawETH',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieGoerliABI, 'withdrawETH'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieGoerliABI}__.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof drippieGoerliABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    ...config,\n  } as UseContractEventConfig<typeof drippieGoerliABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieGoerliABI}__ and `eventName` set to `\"DripCreated\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliDripCreatedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof drippieGoerliABI, 'DripCreated'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    eventName: 'DripCreated',\n    ...config,\n  } as UseContractEventConfig<typeof drippieGoerliABI, 'DripCreated'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieGoerliABI}__ and `eventName` set to `\"DripExecuted\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliDripExecutedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof drippieGoerliABI, 'DripExecuted'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    eventName: 'DripExecuted',\n    ...config,\n  } as UseContractEventConfig<typeof drippieGoerliABI, 'DripExecuted'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieGoerliABI}__ and `eventName` set to `\"DripStatusUpdated\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliDripStatusUpdatedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof drippieGoerliABI, 'DripStatusUpdated'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    eventName: 'DripStatusUpdated',\n    ...config,\n  } as UseContractEventConfig<typeof drippieGoerliABI, 'DripStatusUpdated'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieGoerliABI}__ and `eventName` set to `\"OwnerUpdated\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliOwnerUpdatedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof drippieGoerliABI, 'OwnerUpdated'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    eventName: 'OwnerUpdated',\n    ...config,\n  } as UseContractEventConfig<typeof drippieGoerliABI, 'OwnerUpdated'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieGoerliABI}__ and `eventName` set to `\"ReceivedETH\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliReceivedEthEvent(\n  config: Omit<\n    UseContractEventConfig<typeof drippieGoerliABI, 'ReceivedETH'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    eventName: 'ReceivedETH',\n    ...config,\n  } as UseContractEventConfig<typeof drippieGoerliABI, 'ReceivedETH'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieGoerliABI}__ and `eventName` set to `\"WithdrewERC20\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliWithdrewErc20Event(\n  config: Omit<\n    UseContractEventConfig<typeof drippieGoerliABI, 'WithdrewERC20'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    eventName: 'WithdrewERC20',\n    ...config,\n  } as UseContractEventConfig<typeof drippieGoerliABI, 'WithdrewERC20'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieGoerliABI}__ and `eventName` set to `\"WithdrewERC721\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliWithdrewErc721Event(\n  config: Omit<\n    UseContractEventConfig<typeof drippieGoerliABI, 'WithdrewERC721'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    eventName: 'WithdrewERC721',\n    ...config,\n  } as UseContractEventConfig<typeof drippieGoerliABI, 'WithdrewERC721'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieGoerliABI}__ and `eventName` set to `\"WithdrewETH\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x44b3A2a040057eBafC601A78647e805fd58B1f50)\n */\nexport function useDrippieGoerliWithdrewEthEvent(\n  config: Omit<\n    UseContractEventConfig<typeof drippieGoerliABI, 'WithdrewETH'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieGoerliAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieGoerliABI,\n    address: drippieGoerliAddress[5],\n    eventName: 'WithdrewETH',\n    ...config,\n  } as UseContractEventConfig<typeof drippieGoerliABI, 'WithdrewETH'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link drippieOptimismGoerliABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<\n    typeof drippieOptimismGoerliABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof drippieOptimismGoerliABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return useContractRead({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    ...config,\n  } as UseContractReadConfig<typeof drippieOptimismGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `functionName` set to `\"drips\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliDrips<\n  TFunctionName extends 'drips',\n  TSelectData = ReadContractResult<\n    typeof drippieOptimismGoerliABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof drippieOptimismGoerliABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return useContractRead({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    functionName: 'drips',\n    ...config,\n  } as UseContractReadConfig<typeof drippieOptimismGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `functionName` set to `\"executable\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliExecutable<\n  TFunctionName extends 'executable',\n  TSelectData = ReadContractResult<\n    typeof drippieOptimismGoerliABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof drippieOptimismGoerliABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return useContractRead({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    functionName: 'executable',\n    ...config,\n  } as UseContractReadConfig<typeof drippieOptimismGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `functionName` set to `\"owner\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliOwner<\n  TFunctionName extends 'owner',\n  TSelectData = ReadContractResult<\n    typeof drippieOptimismGoerliABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof drippieOptimismGoerliABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return useContractRead({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    functionName: 'owner',\n    ...config,\n  } as UseContractReadConfig<typeof drippieOptimismGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieOptimismGoerliABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieOptimismGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieOptimismGoerliABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<\n        typeof drippieOptimismGoerliABI,\n        TFunctionName,\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof drippieOptimismGoerliABI,\n    TFunctionName,\n    TMode\n  >({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `functionName` set to `\"CALL\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliCall<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieOptimismGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieOptimismGoerliABI,\n          'CALL'\n        >['request']['abi'],\n        'CALL',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'CALL' }\n    : UseContractWriteConfig<typeof drippieOptimismGoerliABI, 'CALL', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'CALL'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieOptimismGoerliABI, 'CALL', TMode>({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    functionName: 'CALL',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `functionName` set to `\"DELEGATECALL\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliDelegatecall<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieOptimismGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieOptimismGoerliABI,\n          'DELEGATECALL'\n        >['request']['abi'],\n        'DELEGATECALL',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'DELEGATECALL'\n      }\n    : UseContractWriteConfig<\n        typeof drippieOptimismGoerliABI,\n        'DELEGATECALL',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'DELEGATECALL'\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof drippieOptimismGoerliABI,\n    'DELEGATECALL',\n    TMode\n  >({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    functionName: 'DELEGATECALL',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `functionName` set to `\"create\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliCreate<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieOptimismGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieOptimismGoerliABI,\n          'create'\n        >['request']['abi'],\n        'create',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'create' }\n    : UseContractWriteConfig<\n        typeof drippieOptimismGoerliABI,\n        'create',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'create'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieOptimismGoerliABI, 'create', TMode>({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    functionName: 'create',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `functionName` set to `\"drip\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliDrip<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieOptimismGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieOptimismGoerliABI,\n          'drip'\n        >['request']['abi'],\n        'drip',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'drip' }\n    : UseContractWriteConfig<typeof drippieOptimismGoerliABI, 'drip', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'drip'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieOptimismGoerliABI, 'drip', TMode>({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    functionName: 'drip',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `functionName` set to `\"setOwner\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliSetOwner<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieOptimismGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieOptimismGoerliABI,\n          'setOwner'\n        >['request']['abi'],\n        'setOwner',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'setOwner' }\n    : UseContractWriteConfig<\n        typeof drippieOptimismGoerliABI,\n        'setOwner',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'setOwner'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieOptimismGoerliABI, 'setOwner', TMode>({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    functionName: 'setOwner',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `functionName` set to `\"status\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliStatus<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieOptimismGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieOptimismGoerliABI,\n          'status'\n        >['request']['abi'],\n        'status',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'status' }\n    : UseContractWriteConfig<\n        typeof drippieOptimismGoerliABI,\n        'status',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'status'\n      } = {} as any\n) {\n  return useContractWrite<typeof drippieOptimismGoerliABI, 'status', TMode>({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    functionName: 'status',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `functionName` set to `\"withdrawERC20\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliWithdrawErc20<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieOptimismGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieOptimismGoerliABI,\n          'withdrawERC20'\n        >['request']['abi'],\n        'withdrawERC20',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'withdrawERC20'\n      }\n    : UseContractWriteConfig<\n        typeof drippieOptimismGoerliABI,\n        'withdrawERC20',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'withdrawERC20'\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof drippieOptimismGoerliABI,\n    'withdrawERC20',\n    TMode\n  >({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    functionName: 'withdrawERC20',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `functionName` set to `\"withdrawERC721\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliWithdrawErc721<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieOptimismGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieOptimismGoerliABI,\n          'withdrawERC721'\n        >['request']['abi'],\n        'withdrawERC721',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'withdrawERC721'\n      }\n    : UseContractWriteConfig<\n        typeof drippieOptimismGoerliABI,\n        'withdrawERC721',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'withdrawERC721'\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof drippieOptimismGoerliABI,\n    'withdrawERC721',\n    TMode\n  >({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    functionName: 'withdrawERC721',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `functionName` set to `\"withdrawETH\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliWithdrawEth<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof drippieOptimismGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof drippieOptimismGoerliABI,\n          'withdrawETH'\n        >['request']['abi'],\n        'withdrawETH',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'withdrawETH'\n      }\n    : UseContractWriteConfig<\n        typeof drippieOptimismGoerliABI,\n        'withdrawETH',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'withdrawETH'\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof drippieOptimismGoerliABI,\n    'withdrawETH',\n    TMode\n  >({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    functionName: 'withdrawETH',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieOptimismGoerliABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function usePrepareDrippieOptimismGoerliWrite<\n  TFunctionName extends string\n>(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof drippieOptimismGoerliABI,\n      TFunctionName\n    >,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieOptimismGoerliABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `functionName` set to `\"CALL\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function usePrepareDrippieOptimismGoerliCall(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieOptimismGoerliABI, 'CALL'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    functionName: 'CALL',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieOptimismGoerliABI, 'CALL'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `functionName` set to `\"DELEGATECALL\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function usePrepareDrippieOptimismGoerliDelegatecall(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof drippieOptimismGoerliABI,\n      'DELEGATECALL'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    functionName: 'DELEGATECALL',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieOptimismGoerliABI, 'DELEGATECALL'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `functionName` set to `\"create\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function usePrepareDrippieOptimismGoerliCreate(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieOptimismGoerliABI, 'create'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    functionName: 'create',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieOptimismGoerliABI, 'create'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `functionName` set to `\"drip\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function usePrepareDrippieOptimismGoerliDrip(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieOptimismGoerliABI, 'drip'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    functionName: 'drip',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieOptimismGoerliABI, 'drip'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `functionName` set to `\"setOwner\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function usePrepareDrippieOptimismGoerliSetOwner(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieOptimismGoerliABI, 'setOwner'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    functionName: 'setOwner',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieOptimismGoerliABI, 'setOwner'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `functionName` set to `\"status\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function usePrepareDrippieOptimismGoerliStatus(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof drippieOptimismGoerliABI, 'status'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    functionName: 'status',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieOptimismGoerliABI, 'status'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `functionName` set to `\"withdrawERC20\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function usePrepareDrippieOptimismGoerliWithdrawErc20(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof drippieOptimismGoerliABI,\n      'withdrawERC20'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    functionName: 'withdrawERC20',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieOptimismGoerliABI, 'withdrawERC20'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `functionName` set to `\"withdrawERC721\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function usePrepareDrippieOptimismGoerliWithdrawErc721(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof drippieOptimismGoerliABI,\n      'withdrawERC721'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    functionName: 'withdrawERC721',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieOptimismGoerliABI, 'withdrawERC721'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `functionName` set to `\"withdrawETH\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function usePrepareDrippieOptimismGoerliWithdrawEth(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof drippieOptimismGoerliABI,\n      'withdrawETH'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    functionName: 'withdrawETH',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof drippieOptimismGoerliABI, 'withdrawETH'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieOptimismGoerliABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof drippieOptimismGoerliABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    ...config,\n  } as UseContractEventConfig<typeof drippieOptimismGoerliABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `eventName` set to `\"DripCreated\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliDripCreatedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof drippieOptimismGoerliABI, 'DripCreated'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    eventName: 'DripCreated',\n    ...config,\n  } as UseContractEventConfig<typeof drippieOptimismGoerliABI, 'DripCreated'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `eventName` set to `\"DripExecuted\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliDripExecutedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof drippieOptimismGoerliABI, 'DripExecuted'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    eventName: 'DripExecuted',\n    ...config,\n  } as UseContractEventConfig<typeof drippieOptimismGoerliABI, 'DripExecuted'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `eventName` set to `\"DripStatusUpdated\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliDripStatusUpdatedEvent(\n  config: Omit<\n    UseContractEventConfig<\n      typeof drippieOptimismGoerliABI,\n      'DripStatusUpdated'\n    >,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    eventName: 'DripStatusUpdated',\n    ...config,\n  } as UseContractEventConfig<typeof drippieOptimismGoerliABI, 'DripStatusUpdated'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `eventName` set to `\"OwnerUpdated\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliOwnerUpdatedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof drippieOptimismGoerliABI, 'OwnerUpdated'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    eventName: 'OwnerUpdated',\n    ...config,\n  } as UseContractEventConfig<typeof drippieOptimismGoerliABI, 'OwnerUpdated'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `eventName` set to `\"ReceivedETH\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliReceivedEthEvent(\n  config: Omit<\n    UseContractEventConfig<typeof drippieOptimismGoerliABI, 'ReceivedETH'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    eventName: 'ReceivedETH',\n    ...config,\n  } as UseContractEventConfig<typeof drippieOptimismGoerliABI, 'ReceivedETH'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `eventName` set to `\"WithdrewERC20\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliWithdrewErc20Event(\n  config: Omit<\n    UseContractEventConfig<typeof drippieOptimismGoerliABI, 'WithdrewERC20'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    eventName: 'WithdrewERC20',\n    ...config,\n  } as UseContractEventConfig<typeof drippieOptimismGoerliABI, 'WithdrewERC20'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `eventName` set to `\"WithdrewERC721\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliWithdrewErc721Event(\n  config: Omit<\n    UseContractEventConfig<typeof drippieOptimismGoerliABI, 'WithdrewERC721'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    eventName: 'WithdrewERC721',\n    ...config,\n  } as UseContractEventConfig<typeof drippieOptimismGoerliABI, 'WithdrewERC721'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link drippieOptimismGoerliABI}__ and `eventName` set to `\"WithdrewETH\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x8D8d533C16D23847EB04EEB0925be8900Dd3af86)\n */\nexport function useDrippieOptimismGoerliWithdrewEthEvent(\n  config: Omit<\n    UseContractEventConfig<typeof drippieOptimismGoerliABI, 'WithdrewETH'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof drippieOptimismGoerliAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: drippieOptimismGoerliABI,\n    address: drippieOptimismGoerliAddress[420],\n    eventName: 'WithdrewETH',\n    ...config,\n  } as UseContractEventConfig<typeof drippieOptimismGoerliABI, 'WithdrewETH'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<\n    typeof l1CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l1CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    ...config,\n  } as UseContractReadConfig<typeof l1CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `functionName` set to `\"MESSAGE_VERSION\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerMessageVersion<\n  TFunctionName extends 'MESSAGE_VERSION',\n  TSelectData = ReadContractResult<\n    typeof l1CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l1CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    functionName: 'MESSAGE_VERSION',\n    ...config,\n  } as UseContractReadConfig<typeof l1CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `functionName` set to `\"MIN_GAS_CALLDATA_OVERHEAD\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerMinGasCalldataOverhead<\n  TFunctionName extends 'MIN_GAS_CALLDATA_OVERHEAD',\n  TSelectData = ReadContractResult<\n    typeof l1CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l1CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    functionName: 'MIN_GAS_CALLDATA_OVERHEAD',\n    ...config,\n  } as UseContractReadConfig<typeof l1CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `functionName` set to `\"MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerMinGasDynamicOverheadDenominator<\n  TFunctionName extends 'MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR',\n  TSelectData = ReadContractResult<\n    typeof l1CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l1CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    functionName: 'MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR',\n    ...config,\n  } as UseContractReadConfig<typeof l1CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `functionName` set to `\"MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerMinGasDynamicOverheadNumerator<\n  TFunctionName extends 'MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR',\n  TSelectData = ReadContractResult<\n    typeof l1CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l1CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    functionName: 'MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR',\n    ...config,\n  } as UseContractReadConfig<typeof l1CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `functionName` set to `\"OTHER_MESSENGER\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerOtherMessenger<\n  TFunctionName extends 'OTHER_MESSENGER',\n  TSelectData = ReadContractResult<\n    typeof l1CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l1CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    functionName: 'OTHER_MESSENGER',\n    ...config,\n  } as UseContractReadConfig<typeof l1CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `functionName` set to `\"PORTAL\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerPortal<\n  TFunctionName extends 'PORTAL',\n  TSelectData = ReadContractResult<\n    typeof l1CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l1CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    functionName: 'PORTAL',\n    ...config,\n  } as UseContractReadConfig<typeof l1CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `functionName` set to `\"RELAY_CALL_OVERHEAD\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerRelayCallOverhead<\n  TFunctionName extends 'RELAY_CALL_OVERHEAD',\n  TSelectData = ReadContractResult<\n    typeof l1CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l1CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    functionName: 'RELAY_CALL_OVERHEAD',\n    ...config,\n  } as UseContractReadConfig<typeof l1CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `functionName` set to `\"RELAY_CONSTANT_OVERHEAD\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerRelayConstantOverhead<\n  TFunctionName extends 'RELAY_CONSTANT_OVERHEAD',\n  TSelectData = ReadContractResult<\n    typeof l1CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l1CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    functionName: 'RELAY_CONSTANT_OVERHEAD',\n    ...config,\n  } as UseContractReadConfig<typeof l1CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `functionName` set to `\"RELAY_GAS_CHECK_BUFFER\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerRelayGasCheckBuffer<\n  TFunctionName extends 'RELAY_GAS_CHECK_BUFFER',\n  TSelectData = ReadContractResult<\n    typeof l1CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l1CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    functionName: 'RELAY_GAS_CHECK_BUFFER',\n    ...config,\n  } as UseContractReadConfig<typeof l1CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `functionName` set to `\"RELAY_RESERVED_GAS\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerRelayReservedGas<\n  TFunctionName extends 'RELAY_RESERVED_GAS',\n  TSelectData = ReadContractResult<\n    typeof l1CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l1CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    functionName: 'RELAY_RESERVED_GAS',\n    ...config,\n  } as UseContractReadConfig<typeof l1CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `functionName` set to `\"baseGas\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerBaseGas<\n  TFunctionName extends 'baseGas',\n  TSelectData = ReadContractResult<\n    typeof l1CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l1CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    functionName: 'baseGas',\n    ...config,\n  } as UseContractReadConfig<typeof l1CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `functionName` set to `\"failedMessages\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerFailedMessages<\n  TFunctionName extends 'failedMessages',\n  TSelectData = ReadContractResult<\n    typeof l1CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l1CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    functionName: 'failedMessages',\n    ...config,\n  } as UseContractReadConfig<typeof l1CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `functionName` set to `\"messageNonce\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerMessageNonce<\n  TFunctionName extends 'messageNonce',\n  TSelectData = ReadContractResult<\n    typeof l1CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l1CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    functionName: 'messageNonce',\n    ...config,\n  } as UseContractReadConfig<typeof l1CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `functionName` set to `\"successfulMessages\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerSuccessfulMessages<\n  TFunctionName extends 'successfulMessages',\n  TSelectData = ReadContractResult<\n    typeof l1CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l1CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    functionName: 'successfulMessages',\n    ...config,\n  } as UseContractReadConfig<typeof l1CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `functionName` set to `\"version\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerVersion<\n  TFunctionName extends 'version',\n  TSelectData = ReadContractResult<\n    typeof l1CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l1CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    functionName: 'version',\n    ...config,\n  } as UseContractReadConfig<typeof l1CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `functionName` set to `\"xDomainMessageSender\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerXDomainMessageSender<\n  TFunctionName extends 'xDomainMessageSender',\n  TSelectData = ReadContractResult<\n    typeof l1CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l1CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    functionName: 'xDomainMessageSender',\n    ...config,\n  } as UseContractReadConfig<typeof l1CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1CrossDomainMessengerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1CrossDomainMessengerABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<\n        typeof l1CrossDomainMessengerABI,\n        TFunctionName,\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<\n    typeof l1CrossDomainMessengerABI,\n    TFunctionName,\n    TMode\n  >({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `functionName` set to `\"initialize\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerInitialize<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1CrossDomainMessengerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1CrossDomainMessengerABI,\n          'initialize'\n        >['request']['abi'],\n        'initialize',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'initialize' }\n    : UseContractWriteConfig<\n        typeof l1CrossDomainMessengerABI,\n        'initialize',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'initialize'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<\n    typeof l1CrossDomainMessengerABI,\n    'initialize',\n    TMode\n  >({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    functionName: 'initialize',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `functionName` set to `\"relayMessage\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerRelayMessage<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1CrossDomainMessengerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1CrossDomainMessengerABI,\n          'relayMessage'\n        >['request']['abi'],\n        'relayMessage',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'relayMessage'\n      }\n    : UseContractWriteConfig<\n        typeof l1CrossDomainMessengerABI,\n        'relayMessage',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'relayMessage'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<\n    typeof l1CrossDomainMessengerABI,\n    'relayMessage',\n    TMode\n  >({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    functionName: 'relayMessage',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `functionName` set to `\"sendMessage\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerSendMessage<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1CrossDomainMessengerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1CrossDomainMessengerABI,\n          'sendMessage'\n        >['request']['abi'],\n        'sendMessage',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'sendMessage'\n      }\n    : UseContractWriteConfig<\n        typeof l1CrossDomainMessengerABI,\n        'sendMessage',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'sendMessage'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<\n    typeof l1CrossDomainMessengerABI,\n    'sendMessage',\n    TMode\n  >({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    functionName: 'sendMessage',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function usePrepareL1CrossDomainMessengerWrite<\n  TFunctionName extends string\n>(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof l1CrossDomainMessengerABI,\n      TFunctionName\n    >,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1CrossDomainMessengerABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `functionName` set to `\"initialize\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function usePrepareL1CrossDomainMessengerInitialize(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof l1CrossDomainMessengerABI,\n      'initialize'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    functionName: 'initialize',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1CrossDomainMessengerABI, 'initialize'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `functionName` set to `\"relayMessage\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function usePrepareL1CrossDomainMessengerRelayMessage(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof l1CrossDomainMessengerABI,\n      'relayMessage'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    functionName: 'relayMessage',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1CrossDomainMessengerABI, 'relayMessage'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `functionName` set to `\"sendMessage\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function usePrepareL1CrossDomainMessengerSendMessage(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof l1CrossDomainMessengerABI,\n      'sendMessage'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    functionName: 'sendMessage',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1CrossDomainMessengerABI, 'sendMessage'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof l1CrossDomainMessengerABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    ...config,\n  } as UseContractEventConfig<typeof l1CrossDomainMessengerABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `eventName` set to `\"FailedRelayedMessage\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerFailedRelayedMessageEvent(\n  config: Omit<\n    UseContractEventConfig<\n      typeof l1CrossDomainMessengerABI,\n      'FailedRelayedMessage'\n    >,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    eventName: 'FailedRelayedMessage',\n    ...config,\n  } as UseContractEventConfig<typeof l1CrossDomainMessengerABI, 'FailedRelayedMessage'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `eventName` set to `\"Initialized\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerInitializedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l1CrossDomainMessengerABI, 'Initialized'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    eventName: 'Initialized',\n    ...config,\n  } as UseContractEventConfig<typeof l1CrossDomainMessengerABI, 'Initialized'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `eventName` set to `\"RelayedMessage\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerRelayedMessageEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l1CrossDomainMessengerABI, 'RelayedMessage'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    eventName: 'RelayedMessage',\n    ...config,\n  } as UseContractEventConfig<typeof l1CrossDomainMessengerABI, 'RelayedMessage'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `eventName` set to `\"SentMessage\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerSentMessageEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l1CrossDomainMessengerABI, 'SentMessage'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    eventName: 'SentMessage',\n    ...config,\n  } as UseContractEventConfig<typeof l1CrossDomainMessengerABI, 'SentMessage'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l1CrossDomainMessengerABI}__ and `eventName` set to `\"SentMessageExtension1\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5086d1eEF304eb5284A0f6720f79403b4e9bE294)\n */\nexport function useL1CrossDomainMessengerSentMessageExtension1Event(\n  config: Omit<\n    UseContractEventConfig<\n      typeof l1CrossDomainMessengerABI,\n      'SentMessageExtension1'\n    >,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l1CrossDomainMessengerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l1CrossDomainMessengerABI,\n    address:\n      l1CrossDomainMessengerAddress[\n        chainId as keyof typeof l1CrossDomainMessengerAddress\n      ],\n    eventName: 'SentMessageExtension1',\n    ...config,\n  } as UseContractEventConfig<typeof l1CrossDomainMessengerABI, 'SentMessageExtension1'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1Erc721BridgeABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5a7749f83b81B301cAb5f48EB8516B986DAef23D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x8DD330DdE8D9898d43b4dc840Da27A07dF91b3c9)\n */\nexport function useL1Erc721BridgeRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof l1Erc721BridgeABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l1Erc721BridgeABI, TFunctionName, TSelectData>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l1Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1Erc721BridgeABI,\n    address:\n      l1Erc721BridgeAddress[chainId as keyof typeof l1Erc721BridgeAddress],\n    ...config,\n  } as UseContractReadConfig<typeof l1Erc721BridgeABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1Erc721BridgeABI}__ and `functionName` set to `\"deposits\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5a7749f83b81B301cAb5f48EB8516B986DAef23D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x8DD330DdE8D9898d43b4dc840Da27A07dF91b3c9)\n */\nexport function useL1Erc721BridgeDeposits<\n  TFunctionName extends 'deposits',\n  TSelectData = ReadContractResult<typeof l1Erc721BridgeABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l1Erc721BridgeABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1Erc721BridgeABI,\n    address:\n      l1Erc721BridgeAddress[chainId as keyof typeof l1Erc721BridgeAddress],\n    functionName: 'deposits',\n    ...config,\n  } as UseContractReadConfig<typeof l1Erc721BridgeABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1Erc721BridgeABI}__ and `functionName` set to `\"messenger\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5a7749f83b81B301cAb5f48EB8516B986DAef23D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x8DD330DdE8D9898d43b4dc840Da27A07dF91b3c9)\n */\nexport function useL1Erc721BridgeMessenger<\n  TFunctionName extends 'messenger',\n  TSelectData = ReadContractResult<typeof l1Erc721BridgeABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l1Erc721BridgeABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1Erc721BridgeABI,\n    address:\n      l1Erc721BridgeAddress[chainId as keyof typeof l1Erc721BridgeAddress],\n    functionName: 'messenger',\n    ...config,\n  } as UseContractReadConfig<typeof l1Erc721BridgeABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1Erc721BridgeABI}__ and `functionName` set to `\"otherBridge\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5a7749f83b81B301cAb5f48EB8516B986DAef23D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x8DD330DdE8D9898d43b4dc840Da27A07dF91b3c9)\n */\nexport function useL1Erc721BridgeOtherBridge<\n  TFunctionName extends 'otherBridge',\n  TSelectData = ReadContractResult<typeof l1Erc721BridgeABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l1Erc721BridgeABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1Erc721BridgeABI,\n    address:\n      l1Erc721BridgeAddress[chainId as keyof typeof l1Erc721BridgeAddress],\n    functionName: 'otherBridge',\n    ...config,\n  } as UseContractReadConfig<typeof l1Erc721BridgeABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1Erc721BridgeABI}__ and `functionName` set to `\"version\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5a7749f83b81B301cAb5f48EB8516B986DAef23D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x8DD330DdE8D9898d43b4dc840Da27A07dF91b3c9)\n */\nexport function useL1Erc721BridgeVersion<\n  TFunctionName extends 'version',\n  TSelectData = ReadContractResult<typeof l1Erc721BridgeABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l1Erc721BridgeABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1Erc721BridgeABI,\n    address:\n      l1Erc721BridgeAddress[chainId as keyof typeof l1Erc721BridgeAddress],\n    functionName: 'version',\n    ...config,\n  } as UseContractReadConfig<typeof l1Erc721BridgeABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1Erc721BridgeABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5a7749f83b81B301cAb5f48EB8516B986DAef23D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x8DD330DdE8D9898d43b4dc840Da27A07dF91b3c9)\n */\nexport function useL1Erc721BridgeWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1Erc721BridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1Erc721BridgeABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<typeof l1Erc721BridgeABI, TFunctionName, TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof l1Erc721BridgeABI, TFunctionName, TMode>({\n    abi: l1Erc721BridgeABI,\n    address:\n      l1Erc721BridgeAddress[chainId as keyof typeof l1Erc721BridgeAddress],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1Erc721BridgeABI}__ and `functionName` set to `\"bridgeERC721\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5a7749f83b81B301cAb5f48EB8516B986DAef23D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x8DD330DdE8D9898d43b4dc840Da27A07dF91b3c9)\n */\nexport function useL1Erc721BridgeBridgeErc721<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1Erc721BridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1Erc721BridgeABI,\n          'bridgeERC721'\n        >['request']['abi'],\n        'bridgeERC721',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'bridgeERC721'\n      }\n    : UseContractWriteConfig<\n        typeof l1Erc721BridgeABI,\n        'bridgeERC721',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'bridgeERC721'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof l1Erc721BridgeABI, 'bridgeERC721', TMode>({\n    abi: l1Erc721BridgeABI,\n    address:\n      l1Erc721BridgeAddress[chainId as keyof typeof l1Erc721BridgeAddress],\n    functionName: 'bridgeERC721',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1Erc721BridgeABI}__ and `functionName` set to `\"bridgeERC721To\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5a7749f83b81B301cAb5f48EB8516B986DAef23D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x8DD330DdE8D9898d43b4dc840Da27A07dF91b3c9)\n */\nexport function useL1Erc721BridgeBridgeErc721To<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1Erc721BridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1Erc721BridgeABI,\n          'bridgeERC721To'\n        >['request']['abi'],\n        'bridgeERC721To',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'bridgeERC721To'\n      }\n    : UseContractWriteConfig<\n        typeof l1Erc721BridgeABI,\n        'bridgeERC721To',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'bridgeERC721To'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof l1Erc721BridgeABI, 'bridgeERC721To', TMode>({\n    abi: l1Erc721BridgeABI,\n    address:\n      l1Erc721BridgeAddress[chainId as keyof typeof l1Erc721BridgeAddress],\n    functionName: 'bridgeERC721To',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1Erc721BridgeABI}__ and `functionName` set to `\"finalizeBridgeERC721\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5a7749f83b81B301cAb5f48EB8516B986DAef23D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x8DD330DdE8D9898d43b4dc840Da27A07dF91b3c9)\n */\nexport function useL1Erc721BridgeFinalizeBridgeErc721<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1Erc721BridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1Erc721BridgeABI,\n          'finalizeBridgeERC721'\n        >['request']['abi'],\n        'finalizeBridgeERC721',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'finalizeBridgeERC721'\n      }\n    : UseContractWriteConfig<\n        typeof l1Erc721BridgeABI,\n        'finalizeBridgeERC721',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'finalizeBridgeERC721'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<\n    typeof l1Erc721BridgeABI,\n    'finalizeBridgeERC721',\n    TMode\n  >({\n    abi: l1Erc721BridgeABI,\n    address:\n      l1Erc721BridgeAddress[chainId as keyof typeof l1Erc721BridgeAddress],\n    functionName: 'finalizeBridgeERC721',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1Erc721BridgeABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5a7749f83b81B301cAb5f48EB8516B986DAef23D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x8DD330DdE8D9898d43b4dc840Da27A07dF91b3c9)\n */\nexport function usePrepareL1Erc721BridgeWrite<TFunctionName extends string>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l1Erc721BridgeABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l1Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l1Erc721BridgeABI,\n    address:\n      l1Erc721BridgeAddress[chainId as keyof typeof l1Erc721BridgeAddress],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1Erc721BridgeABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1Erc721BridgeABI}__ and `functionName` set to `\"bridgeERC721\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5a7749f83b81B301cAb5f48EB8516B986DAef23D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x8DD330DdE8D9898d43b4dc840Da27A07dF91b3c9)\n */\nexport function usePrepareL1Erc721BridgeBridgeErc721(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l1Erc721BridgeABI, 'bridgeERC721'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l1Erc721BridgeABI,\n    address:\n      l1Erc721BridgeAddress[chainId as keyof typeof l1Erc721BridgeAddress],\n    functionName: 'bridgeERC721',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1Erc721BridgeABI, 'bridgeERC721'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1Erc721BridgeABI}__ and `functionName` set to `\"bridgeERC721To\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5a7749f83b81B301cAb5f48EB8516B986DAef23D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x8DD330DdE8D9898d43b4dc840Da27A07dF91b3c9)\n */\nexport function usePrepareL1Erc721BridgeBridgeErc721To(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l1Erc721BridgeABI, 'bridgeERC721To'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l1Erc721BridgeABI,\n    address:\n      l1Erc721BridgeAddress[chainId as keyof typeof l1Erc721BridgeAddress],\n    functionName: 'bridgeERC721To',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1Erc721BridgeABI, 'bridgeERC721To'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1Erc721BridgeABI}__ and `functionName` set to `\"finalizeBridgeERC721\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5a7749f83b81B301cAb5f48EB8516B986DAef23D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x8DD330DdE8D9898d43b4dc840Da27A07dF91b3c9)\n */\nexport function usePrepareL1Erc721BridgeFinalizeBridgeErc721(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof l1Erc721BridgeABI,\n      'finalizeBridgeERC721'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l1Erc721BridgeABI,\n    address:\n      l1Erc721BridgeAddress[chainId as keyof typeof l1Erc721BridgeAddress],\n    functionName: 'finalizeBridgeERC721',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1Erc721BridgeABI, 'finalizeBridgeERC721'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l1Erc721BridgeABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5a7749f83b81B301cAb5f48EB8516B986DAef23D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x8DD330DdE8D9898d43b4dc840Da27A07dF91b3c9)\n */\nexport function useL1Erc721BridgeEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof l1Erc721BridgeABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l1Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l1Erc721BridgeABI,\n    address:\n      l1Erc721BridgeAddress[chainId as keyof typeof l1Erc721BridgeAddress],\n    ...config,\n  } as UseContractEventConfig<typeof l1Erc721BridgeABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l1Erc721BridgeABI}__ and `eventName` set to `\"ERC721BridgeFinalized\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5a7749f83b81B301cAb5f48EB8516B986DAef23D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x8DD330DdE8D9898d43b4dc840Da27A07dF91b3c9)\n */\nexport function useL1Erc721BridgeErc721BridgeFinalizedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l1Erc721BridgeABI, 'ERC721BridgeFinalized'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l1Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l1Erc721BridgeABI,\n    address:\n      l1Erc721BridgeAddress[chainId as keyof typeof l1Erc721BridgeAddress],\n    eventName: 'ERC721BridgeFinalized',\n    ...config,\n  } as UseContractEventConfig<typeof l1Erc721BridgeABI, 'ERC721BridgeFinalized'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l1Erc721BridgeABI}__ and `eventName` set to `\"ERC721BridgeInitiated\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x5a7749f83b81B301cAb5f48EB8516B986DAef23D)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x8DD330DdE8D9898d43b4dc840Da27A07dF91b3c9)\n */\nexport function useL1Erc721BridgeErc721BridgeInitiatedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l1Erc721BridgeABI, 'ERC721BridgeInitiated'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l1Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l1Erc721BridgeABI,\n    address:\n      l1Erc721BridgeAddress[chainId as keyof typeof l1Erc721BridgeAddress],\n    eventName: 'ERC721BridgeInitiated',\n    ...config,\n  } as UseContractEventConfig<typeof l1Erc721BridgeABI, 'ERC721BridgeInitiated'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1StandardBridgeABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof l1StandardBridgeABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l1StandardBridgeABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    ...config,\n  } as UseContractReadConfig<typeof l1StandardBridgeABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"deposits\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeDeposits<\n  TFunctionName extends 'deposits',\n  TSelectData = ReadContractResult<typeof l1StandardBridgeABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l1StandardBridgeABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'deposits',\n    ...config,\n  } as UseContractReadConfig<typeof l1StandardBridgeABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"l2TokenBridge\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeL2TokenBridge<\n  TFunctionName extends 'l2TokenBridge',\n  TSelectData = ReadContractResult<typeof l1StandardBridgeABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l1StandardBridgeABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'l2TokenBridge',\n    ...config,\n  } as UseContractReadConfig<typeof l1StandardBridgeABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"messenger\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeMessenger<\n  TFunctionName extends 'messenger',\n  TSelectData = ReadContractResult<typeof l1StandardBridgeABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l1StandardBridgeABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'messenger',\n    ...config,\n  } as UseContractReadConfig<typeof l1StandardBridgeABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"version\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeVersion<\n  TFunctionName extends 'version',\n  TSelectData = ReadContractResult<typeof l1StandardBridgeABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l1StandardBridgeABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'version',\n    ...config,\n  } as UseContractReadConfig<typeof l1StandardBridgeABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1StandardBridgeABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<\n        typeof l1StandardBridgeABI,\n        TFunctionName,\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof l1StandardBridgeABI, TFunctionName, TMode>({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"bridgeERC20\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeBridgeErc20<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1StandardBridgeABI,\n          'bridgeERC20'\n        >['request']['abi'],\n        'bridgeERC20',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'bridgeERC20'\n      }\n    : UseContractWriteConfig<\n        typeof l1StandardBridgeABI,\n        'bridgeERC20',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'bridgeERC20'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof l1StandardBridgeABI, 'bridgeERC20', TMode>({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'bridgeERC20',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"bridgeERC20To\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeBridgeErc20To<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1StandardBridgeABI,\n          'bridgeERC20To'\n        >['request']['abi'],\n        'bridgeERC20To',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'bridgeERC20To'\n      }\n    : UseContractWriteConfig<\n        typeof l1StandardBridgeABI,\n        'bridgeERC20To',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'bridgeERC20To'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof l1StandardBridgeABI, 'bridgeERC20To', TMode>({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'bridgeERC20To',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"bridgeETH\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeBridgeEth<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1StandardBridgeABI,\n          'bridgeETH'\n        >['request']['abi'],\n        'bridgeETH',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'bridgeETH' }\n    : UseContractWriteConfig<typeof l1StandardBridgeABI, 'bridgeETH', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'bridgeETH'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof l1StandardBridgeABI, 'bridgeETH', TMode>({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'bridgeETH',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"bridgeETHTo\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeBridgeEthTo<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1StandardBridgeABI,\n          'bridgeETHTo'\n        >['request']['abi'],\n        'bridgeETHTo',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'bridgeETHTo'\n      }\n    : UseContractWriteConfig<\n        typeof l1StandardBridgeABI,\n        'bridgeETHTo',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'bridgeETHTo'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof l1StandardBridgeABI, 'bridgeETHTo', TMode>({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'bridgeETHTo',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"depositERC20\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeDepositErc20<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1StandardBridgeABI,\n          'depositERC20'\n        >['request']['abi'],\n        'depositERC20',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'depositERC20'\n      }\n    : UseContractWriteConfig<\n        typeof l1StandardBridgeABI,\n        'depositERC20',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'depositERC20'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof l1StandardBridgeABI, 'depositERC20', TMode>({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'depositERC20',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"depositERC20To\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeDepositErc20To<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1StandardBridgeABI,\n          'depositERC20To'\n        >['request']['abi'],\n        'depositERC20To',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'depositERC20To'\n      }\n    : UseContractWriteConfig<\n        typeof l1StandardBridgeABI,\n        'depositERC20To',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'depositERC20To'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof l1StandardBridgeABI, 'depositERC20To', TMode>({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'depositERC20To',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"depositETH\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeDepositEth<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1StandardBridgeABI,\n          'depositETH'\n        >['request']['abi'],\n        'depositETH',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'depositETH' }\n    : UseContractWriteConfig<\n        typeof l1StandardBridgeABI,\n        'depositETH',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'depositETH'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof l1StandardBridgeABI, 'depositETH', TMode>({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'depositETH',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"depositETHTo\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeDepositEthTo<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1StandardBridgeABI,\n          'depositETHTo'\n        >['request']['abi'],\n        'depositETHTo',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'depositETHTo'\n      }\n    : UseContractWriteConfig<\n        typeof l1StandardBridgeABI,\n        'depositETHTo',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'depositETHTo'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof l1StandardBridgeABI, 'depositETHTo', TMode>({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'depositETHTo',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"finalizeBridgeERC20\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeFinalizeBridgeErc20<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1StandardBridgeABI,\n          'finalizeBridgeERC20'\n        >['request']['abi'],\n        'finalizeBridgeERC20',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'finalizeBridgeERC20'\n      }\n    : UseContractWriteConfig<\n        typeof l1StandardBridgeABI,\n        'finalizeBridgeERC20',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'finalizeBridgeERC20'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<\n    typeof l1StandardBridgeABI,\n    'finalizeBridgeERC20',\n    TMode\n  >({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'finalizeBridgeERC20',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"finalizeBridgeETH\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeFinalizeBridgeEth<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1StandardBridgeABI,\n          'finalizeBridgeETH'\n        >['request']['abi'],\n        'finalizeBridgeETH',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'finalizeBridgeETH'\n      }\n    : UseContractWriteConfig<\n        typeof l1StandardBridgeABI,\n        'finalizeBridgeETH',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'finalizeBridgeETH'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<\n    typeof l1StandardBridgeABI,\n    'finalizeBridgeETH',\n    TMode\n  >({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'finalizeBridgeETH',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"finalizeERC20Withdrawal\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeFinalizeErc20Withdrawal<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1StandardBridgeABI,\n          'finalizeERC20Withdrawal'\n        >['request']['abi'],\n        'finalizeERC20Withdrawal',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'finalizeERC20Withdrawal'\n      }\n    : UseContractWriteConfig<\n        typeof l1StandardBridgeABI,\n        'finalizeERC20Withdrawal',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'finalizeERC20Withdrawal'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<\n    typeof l1StandardBridgeABI,\n    'finalizeERC20Withdrawal',\n    TMode\n  >({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'finalizeERC20Withdrawal',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"finalizeETHWithdrawal\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeFinalizeEthWithdrawal<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1StandardBridgeABI,\n          'finalizeETHWithdrawal'\n        >['request']['abi'],\n        'finalizeETHWithdrawal',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'finalizeETHWithdrawal'\n      }\n    : UseContractWriteConfig<\n        typeof l1StandardBridgeABI,\n        'finalizeETHWithdrawal',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'finalizeETHWithdrawal'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<\n    typeof l1StandardBridgeABI,\n    'finalizeETHWithdrawal',\n    TMode\n  >({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'finalizeETHWithdrawal',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function usePrepareL1StandardBridgeWrite<TFunctionName extends string>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l1StandardBridgeABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1StandardBridgeABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"bridgeERC20\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function usePrepareL1StandardBridgeBridgeErc20(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l1StandardBridgeABI, 'bridgeERC20'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'bridgeERC20',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1StandardBridgeABI, 'bridgeERC20'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"bridgeERC20To\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function usePrepareL1StandardBridgeBridgeErc20To(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l1StandardBridgeABI, 'bridgeERC20To'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'bridgeERC20To',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1StandardBridgeABI, 'bridgeERC20To'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"bridgeETH\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function usePrepareL1StandardBridgeBridgeEth(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l1StandardBridgeABI, 'bridgeETH'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'bridgeETH',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1StandardBridgeABI, 'bridgeETH'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"bridgeETHTo\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function usePrepareL1StandardBridgeBridgeEthTo(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l1StandardBridgeABI, 'bridgeETHTo'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'bridgeETHTo',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1StandardBridgeABI, 'bridgeETHTo'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"depositERC20\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function usePrepareL1StandardBridgeDepositErc20(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l1StandardBridgeABI, 'depositERC20'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'depositERC20',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1StandardBridgeABI, 'depositERC20'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"depositERC20To\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function usePrepareL1StandardBridgeDepositErc20To(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l1StandardBridgeABI, 'depositERC20To'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'depositERC20To',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1StandardBridgeABI, 'depositERC20To'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"depositETH\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function usePrepareL1StandardBridgeDepositEth(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l1StandardBridgeABI, 'depositETH'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'depositETH',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1StandardBridgeABI, 'depositETH'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"depositETHTo\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function usePrepareL1StandardBridgeDepositEthTo(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l1StandardBridgeABI, 'depositETHTo'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'depositETHTo',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1StandardBridgeABI, 'depositETHTo'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"finalizeBridgeERC20\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function usePrepareL1StandardBridgeFinalizeBridgeErc20(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof l1StandardBridgeABI,\n      'finalizeBridgeERC20'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'finalizeBridgeERC20',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1StandardBridgeABI, 'finalizeBridgeERC20'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"finalizeBridgeETH\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function usePrepareL1StandardBridgeFinalizeBridgeEth(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof l1StandardBridgeABI,\n      'finalizeBridgeETH'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'finalizeBridgeETH',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1StandardBridgeABI, 'finalizeBridgeETH'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"finalizeERC20Withdrawal\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function usePrepareL1StandardBridgeFinalizeErc20Withdrawal(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof l1StandardBridgeABI,\n      'finalizeERC20Withdrawal'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'finalizeERC20Withdrawal',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1StandardBridgeABI, 'finalizeERC20Withdrawal'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `functionName` set to `\"finalizeETHWithdrawal\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function usePrepareL1StandardBridgeFinalizeEthWithdrawal(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof l1StandardBridgeABI,\n      'finalizeETHWithdrawal'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    functionName: 'finalizeETHWithdrawal',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1StandardBridgeABI, 'finalizeETHWithdrawal'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l1StandardBridgeABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof l1StandardBridgeABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    ...config,\n  } as UseContractEventConfig<typeof l1StandardBridgeABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `eventName` set to `\"ERC20BridgeFinalized\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeErc20BridgeFinalizedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l1StandardBridgeABI, 'ERC20BridgeFinalized'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    eventName: 'ERC20BridgeFinalized',\n    ...config,\n  } as UseContractEventConfig<typeof l1StandardBridgeABI, 'ERC20BridgeFinalized'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `eventName` set to `\"ERC20BridgeInitiated\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeErc20BridgeInitiatedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l1StandardBridgeABI, 'ERC20BridgeInitiated'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    eventName: 'ERC20BridgeInitiated',\n    ...config,\n  } as UseContractEventConfig<typeof l1StandardBridgeABI, 'ERC20BridgeInitiated'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `eventName` set to `\"ERC20DepositInitiated\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeErc20DepositInitiatedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l1StandardBridgeABI, 'ERC20DepositInitiated'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    eventName: 'ERC20DepositInitiated',\n    ...config,\n  } as UseContractEventConfig<typeof l1StandardBridgeABI, 'ERC20DepositInitiated'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `eventName` set to `\"ERC20WithdrawalFinalized\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeErc20WithdrawalFinalizedEvent(\n  config: Omit<\n    UseContractEventConfig<\n      typeof l1StandardBridgeABI,\n      'ERC20WithdrawalFinalized'\n    >,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    eventName: 'ERC20WithdrawalFinalized',\n    ...config,\n  } as UseContractEventConfig<typeof l1StandardBridgeABI, 'ERC20WithdrawalFinalized'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `eventName` set to `\"ETHBridgeFinalized\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeEthBridgeFinalizedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l1StandardBridgeABI, 'ETHBridgeFinalized'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    eventName: 'ETHBridgeFinalized',\n    ...config,\n  } as UseContractEventConfig<typeof l1StandardBridgeABI, 'ETHBridgeFinalized'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `eventName` set to `\"ETHBridgeInitiated\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeEthBridgeInitiatedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l1StandardBridgeABI, 'ETHBridgeInitiated'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    eventName: 'ETHBridgeInitiated',\n    ...config,\n  } as UseContractEventConfig<typeof l1StandardBridgeABI, 'ETHBridgeInitiated'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `eventName` set to `\"ETHDepositInitiated\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeEthDepositInitiatedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l1StandardBridgeABI, 'ETHDepositInitiated'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    eventName: 'ETHDepositInitiated',\n    ...config,\n  } as UseContractEventConfig<typeof l1StandardBridgeABI, 'ETHDepositInitiated'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l1StandardBridgeABI}__ and `eventName` set to `\"ETHWithdrawalFinalized\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x636Af16bf2f682dD3109e60102b8E1A089FedAa8)\n */\nexport function useL1StandardBridgeEthWithdrawalFinalizedEvent(\n  config: Omit<\n    UseContractEventConfig<\n      typeof l1StandardBridgeABI,\n      'ETHWithdrawalFinalized'\n    >,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l1StandardBridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l1StandardBridgeABI,\n    address:\n      l1StandardBridgeAddress[chainId as keyof typeof l1StandardBridgeAddress],\n    eventName: 'ETHWithdrawalFinalized',\n    ...config,\n  } as UseContractEventConfig<typeof l1StandardBridgeABI, 'ETHWithdrawalFinalized'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2OutputOracleABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof l2OutputOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    ...config,\n  } as UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2OutputOracleABI}__ and `functionName` set to `\"CHALLENGER\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleChallenger<\n  TFunctionName extends 'CHALLENGER',\n  TSelectData = ReadContractResult<typeof l2OutputOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    functionName: 'CHALLENGER',\n    ...config,\n  } as UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2OutputOracleABI}__ and `functionName` set to `\"FINALIZATION_PERIOD_SECONDS\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleFinalizationPeriodSeconds<\n  TFunctionName extends 'FINALIZATION_PERIOD_SECONDS',\n  TSelectData = ReadContractResult<typeof l2OutputOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    functionName: 'FINALIZATION_PERIOD_SECONDS',\n    ...config,\n  } as UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2OutputOracleABI}__ and `functionName` set to `\"L2_BLOCK_TIME\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleL2BlockTime<\n  TFunctionName extends 'L2_BLOCK_TIME',\n  TSelectData = ReadContractResult<typeof l2OutputOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    functionName: 'L2_BLOCK_TIME',\n    ...config,\n  } as UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2OutputOracleABI}__ and `functionName` set to `\"PROPOSER\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleProposer<\n  TFunctionName extends 'PROPOSER',\n  TSelectData = ReadContractResult<typeof l2OutputOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    functionName: 'PROPOSER',\n    ...config,\n  } as UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2OutputOracleABI}__ and `functionName` set to `\"SUBMISSION_INTERVAL\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleSubmissionInterval<\n  TFunctionName extends 'SUBMISSION_INTERVAL',\n  TSelectData = ReadContractResult<typeof l2OutputOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    functionName: 'SUBMISSION_INTERVAL',\n    ...config,\n  } as UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2OutputOracleABI}__ and `functionName` set to `\"computeL2Timestamp\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleComputeL2Timestamp<\n  TFunctionName extends 'computeL2Timestamp',\n  TSelectData = ReadContractResult<typeof l2OutputOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    functionName: 'computeL2Timestamp',\n    ...config,\n  } as UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2OutputOracleABI}__ and `functionName` set to `\"getL2Output\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleGetL2Output<\n  TFunctionName extends 'getL2Output',\n  TSelectData = ReadContractResult<typeof l2OutputOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    functionName: 'getL2Output',\n    ...config,\n  } as UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2OutputOracleABI}__ and `functionName` set to `\"getL2OutputAfter\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleGetL2OutputAfter<\n  TFunctionName extends 'getL2OutputAfter',\n  TSelectData = ReadContractResult<typeof l2OutputOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    functionName: 'getL2OutputAfter',\n    ...config,\n  } as UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2OutputOracleABI}__ and `functionName` set to `\"getL2OutputIndexAfter\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleGetL2OutputIndexAfter<\n  TFunctionName extends 'getL2OutputIndexAfter',\n  TSelectData = ReadContractResult<typeof l2OutputOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    functionName: 'getL2OutputIndexAfter',\n    ...config,\n  } as UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2OutputOracleABI}__ and `functionName` set to `\"latestBlockNumber\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleLatestBlockNumber<\n  TFunctionName extends 'latestBlockNumber',\n  TSelectData = ReadContractResult<typeof l2OutputOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    functionName: 'latestBlockNumber',\n    ...config,\n  } as UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2OutputOracleABI}__ and `functionName` set to `\"latestOutputIndex\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleLatestOutputIndex<\n  TFunctionName extends 'latestOutputIndex',\n  TSelectData = ReadContractResult<typeof l2OutputOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    functionName: 'latestOutputIndex',\n    ...config,\n  } as UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2OutputOracleABI}__ and `functionName` set to `\"nextBlockNumber\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleNextBlockNumber<\n  TFunctionName extends 'nextBlockNumber',\n  TSelectData = ReadContractResult<typeof l2OutputOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    functionName: 'nextBlockNumber',\n    ...config,\n  } as UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2OutputOracleABI}__ and `functionName` set to `\"nextOutputIndex\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleNextOutputIndex<\n  TFunctionName extends 'nextOutputIndex',\n  TSelectData = ReadContractResult<typeof l2OutputOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    functionName: 'nextOutputIndex',\n    ...config,\n  } as UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2OutputOracleABI}__ and `functionName` set to `\"startingBlockNumber\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleStartingBlockNumber<\n  TFunctionName extends 'startingBlockNumber',\n  TSelectData = ReadContractResult<typeof l2OutputOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    functionName: 'startingBlockNumber',\n    ...config,\n  } as UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2OutputOracleABI}__ and `functionName` set to `\"startingTimestamp\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleStartingTimestamp<\n  TFunctionName extends 'startingTimestamp',\n  TSelectData = ReadContractResult<typeof l2OutputOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    functionName: 'startingTimestamp',\n    ...config,\n  } as UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2OutputOracleABI}__ and `functionName` set to `\"version\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleVersion<\n  TFunctionName extends 'version',\n  TSelectData = ReadContractResult<typeof l2OutputOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    functionName: 'version',\n    ...config,\n  } as UseContractReadConfig<typeof l2OutputOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2OutputOracleABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2OutputOracleAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2OutputOracleABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<typeof l2OutputOracleABI, TFunctionName, TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof l2OutputOracleABI, TFunctionName, TMode>({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2OutputOracleABI}__ and `functionName` set to `\"deleteL2Outputs\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleDeleteL2Outputs<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2OutputOracleAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2OutputOracleABI,\n          'deleteL2Outputs'\n        >['request']['abi'],\n        'deleteL2Outputs',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'deleteL2Outputs'\n      }\n    : UseContractWriteConfig<\n        typeof l2OutputOracleABI,\n        'deleteL2Outputs',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'deleteL2Outputs'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof l2OutputOracleABI, 'deleteL2Outputs', TMode>({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    functionName: 'deleteL2Outputs',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2OutputOracleABI}__ and `functionName` set to `\"initialize\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleInitialize<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2OutputOracleAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2OutputOracleABI,\n          'initialize'\n        >['request']['abi'],\n        'initialize',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'initialize' }\n    : UseContractWriteConfig<typeof l2OutputOracleABI, 'initialize', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'initialize'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof l2OutputOracleABI, 'initialize', TMode>({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    functionName: 'initialize',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2OutputOracleABI}__ and `functionName` set to `\"proposeL2Output\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleProposeL2Output<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2OutputOracleAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2OutputOracleABI,\n          'proposeL2Output'\n        >['request']['abi'],\n        'proposeL2Output',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'proposeL2Output'\n      }\n    : UseContractWriteConfig<\n        typeof l2OutputOracleABI,\n        'proposeL2Output',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'proposeL2Output'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof l2OutputOracleABI, 'proposeL2Output', TMode>({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    functionName: 'proposeL2Output',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2OutputOracleABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function usePrepareL2OutputOracleWrite<TFunctionName extends string>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l2OutputOracleABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2OutputOracleABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2OutputOracleABI}__ and `functionName` set to `\"deleteL2Outputs\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function usePrepareL2OutputOracleDeleteL2Outputs(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l2OutputOracleABI, 'deleteL2Outputs'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    functionName: 'deleteL2Outputs',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2OutputOracleABI, 'deleteL2Outputs'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2OutputOracleABI}__ and `functionName` set to `\"initialize\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function usePrepareL2OutputOracleInitialize(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l2OutputOracleABI, 'initialize'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    functionName: 'initialize',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2OutputOracleABI, 'initialize'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2OutputOracleABI}__ and `functionName` set to `\"proposeL2Output\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function usePrepareL2OutputOracleProposeL2Output(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l2OutputOracleABI, 'proposeL2Output'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    functionName: 'proposeL2Output',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2OutputOracleABI, 'proposeL2Output'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2OutputOracleABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof l2OutputOracleABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    ...config,\n  } as UseContractEventConfig<typeof l2OutputOracleABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2OutputOracleABI}__ and `eventName` set to `\"Initialized\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleInitializedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l2OutputOracleABI, 'Initialized'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    eventName: 'Initialized',\n    ...config,\n  } as UseContractEventConfig<typeof l2OutputOracleABI, 'Initialized'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2OutputOracleABI}__ and `eventName` set to `\"OutputProposed\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleOutputProposedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l2OutputOracleABI, 'OutputProposed'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    eventName: 'OutputProposed',\n    ...config,\n  } as UseContractEventConfig<typeof l2OutputOracleABI, 'OutputProposed'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2OutputOracleABI}__ and `eventName` set to `\"OutputsDeleted\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xdfe97868233d1aa22e815a266982f2cf17685a27)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0)\n */\nexport function useL2OutputOracleOutputsDeletedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l2OutputOracleABI, 'OutputsDeleted'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l2OutputOracleAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l2OutputOracleABI,\n    address:\n      l2OutputOracleAddress[chainId as keyof typeof l2OutputOracleAddress],\n    eventName: 'OutputsDeleted',\n    ...config,\n  } as UseContractEventConfig<typeof l2OutputOracleABI, 'OutputsDeleted'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismMintableErc20FactoryABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000012)\n */\nexport function useOptimismMintableErc20FactoryRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<\n    typeof optimismMintableErc20FactoryABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimismMintableErc20FactoryABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof optimismMintableErc20FactoryAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimismMintableErc20FactoryABI,\n    address:\n      optimismMintableErc20FactoryAddress[\n        chainId as keyof typeof optimismMintableErc20FactoryAddress\n      ],\n    ...config,\n  } as UseContractReadConfig<typeof optimismMintableErc20FactoryABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismMintableErc20FactoryABI}__ and `functionName` set to `\"BRIDGE\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000012)\n */\nexport function useOptimismMintableErc20FactoryBridge<\n  TFunctionName extends 'BRIDGE',\n  TSelectData = ReadContractResult<\n    typeof optimismMintableErc20FactoryABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimismMintableErc20FactoryABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimismMintableErc20FactoryAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimismMintableErc20FactoryABI,\n    address:\n      optimismMintableErc20FactoryAddress[\n        chainId as keyof typeof optimismMintableErc20FactoryAddress\n      ],\n    functionName: 'BRIDGE',\n    ...config,\n  } as UseContractReadConfig<typeof optimismMintableErc20FactoryABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismMintableErc20FactoryABI}__ and `functionName` set to `\"version\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000012)\n */\nexport function useOptimismMintableErc20FactoryVersion<\n  TFunctionName extends 'version',\n  TSelectData = ReadContractResult<\n    typeof optimismMintableErc20FactoryABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimismMintableErc20FactoryABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimismMintableErc20FactoryAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimismMintableErc20FactoryABI,\n    address:\n      optimismMintableErc20FactoryAddress[\n        chainId as keyof typeof optimismMintableErc20FactoryAddress\n      ],\n    functionName: 'version',\n    ...config,\n  } as UseContractReadConfig<typeof optimismMintableErc20FactoryABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimismMintableErc20FactoryABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000012)\n */\nexport function useOptimismMintableErc20FactoryWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimismMintableErc20FactoryAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimismMintableErc20FactoryABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<\n        typeof optimismMintableErc20FactoryABI,\n        TFunctionName,\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<\n    typeof optimismMintableErc20FactoryABI,\n    TFunctionName,\n    TMode\n  >({\n    abi: optimismMintableErc20FactoryABI,\n    address:\n      optimismMintableErc20FactoryAddress[\n        chainId as keyof typeof optimismMintableErc20FactoryAddress\n      ],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimismMintableErc20FactoryABI}__ and `functionName` set to `\"createOptimismMintableERC20\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000012)\n */\nexport function useOptimismMintableErc20FactoryCreateOptimismMintableErc20<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimismMintableErc20FactoryAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimismMintableErc20FactoryABI,\n          'createOptimismMintableERC20'\n        >['request']['abi'],\n        'createOptimismMintableERC20',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'createOptimismMintableERC20'\n      }\n    : UseContractWriteConfig<\n        typeof optimismMintableErc20FactoryABI,\n        'createOptimismMintableERC20',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'createOptimismMintableERC20'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<\n    typeof optimismMintableErc20FactoryABI,\n    'createOptimismMintableERC20',\n    TMode\n  >({\n    abi: optimismMintableErc20FactoryABI,\n    address:\n      optimismMintableErc20FactoryAddress[\n        chainId as keyof typeof optimismMintableErc20FactoryAddress\n      ],\n    functionName: 'createOptimismMintableERC20',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimismMintableErc20FactoryABI}__ and `functionName` set to `\"createStandardL2Token\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000012)\n */\nexport function useOptimismMintableErc20FactoryCreateStandardL2Token<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimismMintableErc20FactoryAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimismMintableErc20FactoryABI,\n          'createStandardL2Token'\n        >['request']['abi'],\n        'createStandardL2Token',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'createStandardL2Token'\n      }\n    : UseContractWriteConfig<\n        typeof optimismMintableErc20FactoryABI,\n        'createStandardL2Token',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'createStandardL2Token'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<\n    typeof optimismMintableErc20FactoryABI,\n    'createStandardL2Token',\n    TMode\n  >({\n    abi: optimismMintableErc20FactoryABI,\n    address:\n      optimismMintableErc20FactoryAddress[\n        chainId as keyof typeof optimismMintableErc20FactoryAddress\n      ],\n    functionName: 'createStandardL2Token',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimismMintableErc20FactoryABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000012)\n */\nexport function usePrepareOptimismMintableErc20FactoryWrite<\n  TFunctionName extends string\n>(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof optimismMintableErc20FactoryABI,\n      TFunctionName\n    >,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof optimismMintableErc20FactoryAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimismMintableErc20FactoryABI,\n    address:\n      optimismMintableErc20FactoryAddress[\n        chainId as keyof typeof optimismMintableErc20FactoryAddress\n      ],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimismMintableErc20FactoryABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimismMintableErc20FactoryABI}__ and `functionName` set to `\"createOptimismMintableERC20\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000012)\n */\nexport function usePrepareOptimismMintableErc20FactoryCreateOptimismMintableErc20(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof optimismMintableErc20FactoryABI,\n      'createOptimismMintableERC20'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimismMintableErc20FactoryAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimismMintableErc20FactoryABI,\n    address:\n      optimismMintableErc20FactoryAddress[\n        chainId as keyof typeof optimismMintableErc20FactoryAddress\n      ],\n    functionName: 'createOptimismMintableERC20',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimismMintableErc20FactoryABI, 'createOptimismMintableERC20'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimismMintableErc20FactoryABI}__ and `functionName` set to `\"createStandardL2Token\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000012)\n */\nexport function usePrepareOptimismMintableErc20FactoryCreateStandardL2Token(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof optimismMintableErc20FactoryABI,\n      'createStandardL2Token'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimismMintableErc20FactoryAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimismMintableErc20FactoryABI,\n    address:\n      optimismMintableErc20FactoryAddress[\n        chainId as keyof typeof optimismMintableErc20FactoryAddress\n      ],\n    functionName: 'createStandardL2Token',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimismMintableErc20FactoryABI, 'createStandardL2Token'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link optimismMintableErc20FactoryABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000012)\n */\nexport function useOptimismMintableErc20FactoryEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof optimismMintableErc20FactoryABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof optimismMintableErc20FactoryAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: optimismMintableErc20FactoryABI,\n    address:\n      optimismMintableErc20FactoryAddress[\n        chainId as keyof typeof optimismMintableErc20FactoryAddress\n      ],\n    ...config,\n  } as UseContractEventConfig<typeof optimismMintableErc20FactoryABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link optimismMintableErc20FactoryABI}__ and `eventName` set to `\"OptimismMintableERC20Created\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000012)\n */\nexport function useOptimismMintableErc20FactoryOptimismMintableErc20CreatedEvent(\n  config: Omit<\n    UseContractEventConfig<\n      typeof optimismMintableErc20FactoryABI,\n      'OptimismMintableERC20Created'\n    >,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof optimismMintableErc20FactoryAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: optimismMintableErc20FactoryABI,\n    address:\n      optimismMintableErc20FactoryAddress[\n        chainId as keyof typeof optimismMintableErc20FactoryAddress\n      ],\n    eventName: 'OptimismMintableERC20Created',\n    ...config,\n  } as UseContractEventConfig<typeof optimismMintableErc20FactoryABI, 'OptimismMintableERC20Created'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link optimismMintableErc20FactoryABI}__ and `eventName` set to `\"StandardL2TokenCreated\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000012)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000012)\n */\nexport function useOptimismMintableErc20FactoryStandardL2TokenCreatedEvent(\n  config: Omit<\n    UseContractEventConfig<\n      typeof optimismMintableErc20FactoryABI,\n      'StandardL2TokenCreated'\n    >,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof optimismMintableErc20FactoryAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: optimismMintableErc20FactoryABI,\n    address:\n      optimismMintableErc20FactoryAddress[\n        chainId as keyof typeof optimismMintableErc20FactoryAddress\n      ],\n    eventName: 'StandardL2TokenCreated',\n    ...config,\n  } as UseContractEventConfig<typeof optimismMintableErc20FactoryABI, 'StandardL2TokenCreated'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismPortalABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof optimismPortalABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    ...config,\n  } as UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"GUARDIAN\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalGuardian<\n  TFunctionName extends 'GUARDIAN',\n  TSelectData = ReadContractResult<typeof optimismPortalABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'GUARDIAN',\n    ...config,\n  } as UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"L2_ORACLE\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalL2Oracle<\n  TFunctionName extends 'L2_ORACLE',\n  TSelectData = ReadContractResult<typeof optimismPortalABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'L2_ORACLE',\n    ...config,\n  } as UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"SYSTEM_CONFIG\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalSystemConfig<\n  TFunctionName extends 'SYSTEM_CONFIG',\n  TSelectData = ReadContractResult<typeof optimismPortalABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'SYSTEM_CONFIG',\n    ...config,\n  } as UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"finalizedWithdrawals\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalFinalizedWithdrawals<\n  TFunctionName extends 'finalizedWithdrawals',\n  TSelectData = ReadContractResult<typeof optimismPortalABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'finalizedWithdrawals',\n    ...config,\n  } as UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"isOutputFinalized\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalIsOutputFinalized<\n  TFunctionName extends 'isOutputFinalized',\n  TSelectData = ReadContractResult<typeof optimismPortalABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'isOutputFinalized',\n    ...config,\n  } as UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"l2Sender\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalL2Sender<\n  TFunctionName extends 'l2Sender',\n  TSelectData = ReadContractResult<typeof optimismPortalABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'l2Sender',\n    ...config,\n  } as UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"minimumGasLimit\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalMinimumGasLimit<\n  TFunctionName extends 'minimumGasLimit',\n  TSelectData = ReadContractResult<typeof optimismPortalABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'minimumGasLimit',\n    ...config,\n  } as UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"params\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalParams<\n  TFunctionName extends 'params',\n  TSelectData = ReadContractResult<typeof optimismPortalABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'params',\n    ...config,\n  } as UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"paused\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalPaused<\n  TFunctionName extends 'paused',\n  TSelectData = ReadContractResult<typeof optimismPortalABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'paused',\n    ...config,\n  } as UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"provenWithdrawals\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalProvenWithdrawals<\n  TFunctionName extends 'provenWithdrawals',\n  TSelectData = ReadContractResult<typeof optimismPortalABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'provenWithdrawals',\n    ...config,\n  } as UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"version\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalVersion<\n  TFunctionName extends 'version',\n  TSelectData = ReadContractResult<typeof optimismPortalABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'version',\n    ...config,\n  } as UseContractReadConfig<typeof optimismPortalABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimismPortalABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimismPortalAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimismPortalABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<typeof optimismPortalABI, TFunctionName, TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof optimismPortalABI, TFunctionName, TMode>({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"depositTransaction\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalDepositTransaction<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimismPortalAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimismPortalABI,\n          'depositTransaction'\n        >['request']['abi'],\n        'depositTransaction',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'depositTransaction'\n      }\n    : UseContractWriteConfig<\n        typeof optimismPortalABI,\n        'depositTransaction',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'depositTransaction'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<\n    typeof optimismPortalABI,\n    'depositTransaction',\n    TMode\n  >({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'depositTransaction',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"donateETH\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalDonateEth<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimismPortalAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimismPortalABI,\n          'donateETH'\n        >['request']['abi'],\n        'donateETH',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'donateETH' }\n    : UseContractWriteConfig<typeof optimismPortalABI, 'donateETH', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'donateETH'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof optimismPortalABI, 'donateETH', TMode>({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'donateETH',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"finalizeWithdrawalTransaction\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalFinalizeWithdrawalTransaction<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimismPortalAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimismPortalABI,\n          'finalizeWithdrawalTransaction'\n        >['request']['abi'],\n        'finalizeWithdrawalTransaction',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'finalizeWithdrawalTransaction'\n      }\n    : UseContractWriteConfig<\n        typeof optimismPortalABI,\n        'finalizeWithdrawalTransaction',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'finalizeWithdrawalTransaction'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<\n    typeof optimismPortalABI,\n    'finalizeWithdrawalTransaction',\n    TMode\n  >({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'finalizeWithdrawalTransaction',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"initialize\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalInitialize<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimismPortalAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimismPortalABI,\n          'initialize'\n        >['request']['abi'],\n        'initialize',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'initialize' }\n    : UseContractWriteConfig<typeof optimismPortalABI, 'initialize', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'initialize'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof optimismPortalABI, 'initialize', TMode>({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'initialize',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"pause\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalPause<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimismPortalAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimismPortalABI,\n          'pause'\n        >['request']['abi'],\n        'pause',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'pause' }\n    : UseContractWriteConfig<typeof optimismPortalABI, 'pause', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'pause'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof optimismPortalABI, 'pause', TMode>({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'pause',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"proveWithdrawalTransaction\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalProveWithdrawalTransaction<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimismPortalAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimismPortalABI,\n          'proveWithdrawalTransaction'\n        >['request']['abi'],\n        'proveWithdrawalTransaction',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'proveWithdrawalTransaction'\n      }\n    : UseContractWriteConfig<\n        typeof optimismPortalABI,\n        'proveWithdrawalTransaction',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'proveWithdrawalTransaction'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<\n    typeof optimismPortalABI,\n    'proveWithdrawalTransaction',\n    TMode\n  >({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'proveWithdrawalTransaction',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"unpause\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalUnpause<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimismPortalAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimismPortalABI,\n          'unpause'\n        >['request']['abi'],\n        'unpause',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'unpause' }\n    : UseContractWriteConfig<typeof optimismPortalABI, 'unpause', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'unpause'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof optimismPortalABI, 'unpause', TMode>({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'unpause',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimismPortalABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function usePrepareOptimismPortalWrite<TFunctionName extends string>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof optimismPortalABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimismPortalABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"depositTransaction\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function usePrepareOptimismPortalDepositTransaction(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof optimismPortalABI,\n      'depositTransaction'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'depositTransaction',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimismPortalABI, 'depositTransaction'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"donateETH\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function usePrepareOptimismPortalDonateEth(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof optimismPortalABI, 'donateETH'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'donateETH',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimismPortalABI, 'donateETH'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"finalizeWithdrawalTransaction\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function usePrepareOptimismPortalFinalizeWithdrawalTransaction(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof optimismPortalABI,\n      'finalizeWithdrawalTransaction'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'finalizeWithdrawalTransaction',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimismPortalABI, 'finalizeWithdrawalTransaction'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"initialize\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function usePrepareOptimismPortalInitialize(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof optimismPortalABI, 'initialize'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'initialize',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimismPortalABI, 'initialize'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"pause\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function usePrepareOptimismPortalPause(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof optimismPortalABI, 'pause'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'pause',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimismPortalABI, 'pause'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"proveWithdrawalTransaction\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function usePrepareOptimismPortalProveWithdrawalTransaction(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof optimismPortalABI,\n      'proveWithdrawalTransaction'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'proveWithdrawalTransaction',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimismPortalABI, 'proveWithdrawalTransaction'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimismPortalABI}__ and `functionName` set to `\"unpause\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function usePrepareOptimismPortalUnpause(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof optimismPortalABI, 'unpause'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    functionName: 'unpause',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimismPortalABI, 'unpause'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link optimismPortalABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof optimismPortalABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    ...config,\n  } as UseContractEventConfig<typeof optimismPortalABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link optimismPortalABI}__ and `eventName` set to `\"Initialized\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalInitializedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof optimismPortalABI, 'Initialized'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    eventName: 'Initialized',\n    ...config,\n  } as UseContractEventConfig<typeof optimismPortalABI, 'Initialized'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link optimismPortalABI}__ and `eventName` set to `\"Paused\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalPausedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof optimismPortalABI, 'Paused'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    eventName: 'Paused',\n    ...config,\n  } as UseContractEventConfig<typeof optimismPortalABI, 'Paused'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link optimismPortalABI}__ and `eventName` set to `\"TransactionDeposited\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalTransactionDepositedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof optimismPortalABI, 'TransactionDeposited'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    eventName: 'TransactionDeposited',\n    ...config,\n  } as UseContractEventConfig<typeof optimismPortalABI, 'TransactionDeposited'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link optimismPortalABI}__ and `eventName` set to `\"Unpaused\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalUnpausedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof optimismPortalABI, 'Unpaused'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    eventName: 'Unpaused',\n    ...config,\n  } as UseContractEventConfig<typeof optimismPortalABI, 'Unpaused'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link optimismPortalABI}__ and `eventName` set to `\"WithdrawalFinalized\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalWithdrawalFinalizedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof optimismPortalABI, 'WithdrawalFinalized'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    eventName: 'WithdrawalFinalized',\n    ...config,\n  } as UseContractEventConfig<typeof optimismPortalABI, 'WithdrawalFinalized'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link optimismPortalABI}__ and `eventName` set to `\"WithdrawalProven\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xbEb5Fc579115071764c7423A4f12eDde41f106Ed)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383)\n */\nexport function useOptimismPortalWithdrawalProvenEvent(\n  config: Omit<\n    UseContractEventConfig<typeof optimismPortalABI, 'WithdrawalProven'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof optimismPortalAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: optimismPortalABI,\n    address:\n      optimismPortalAddress[chainId as keyof typeof optimismPortalAddress],\n    eventName: 'WithdrawalProven',\n    ...config,\n  } as UseContractEventConfig<typeof optimismPortalABI, 'WithdrawalProven'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link portalSenderABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0A893d9576b9cFD9EF78595963dc973238E78210)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe7FACd39531ee3C313330E93B4d7a8B8A3c84Aa4)\n */\nexport function usePortalSenderRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof portalSenderABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof portalSenderABI, TFunctionName, TSelectData>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof portalSenderAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: portalSenderABI,\n    address: portalSenderAddress[chainId as keyof typeof portalSenderAddress],\n    ...config,\n  } as UseContractReadConfig<typeof portalSenderABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link portalSenderABI}__ and `functionName` set to `\"PORTAL\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0A893d9576b9cFD9EF78595963dc973238E78210)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe7FACd39531ee3C313330E93B4d7a8B8A3c84Aa4)\n */\nexport function usePortalSenderPortal<\n  TFunctionName extends 'PORTAL',\n  TSelectData = ReadContractResult<typeof portalSenderABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof portalSenderABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof portalSenderAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: portalSenderABI,\n    address: portalSenderAddress[chainId as keyof typeof portalSenderAddress],\n    functionName: 'PORTAL',\n    ...config,\n  } as UseContractReadConfig<typeof portalSenderABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link portalSenderABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0A893d9576b9cFD9EF78595963dc973238E78210)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe7FACd39531ee3C313330E93B4d7a8B8A3c84Aa4)\n */\nexport function usePortalSenderWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof portalSenderAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof portalSenderABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<typeof portalSenderABI, TFunctionName, TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof portalSenderABI, TFunctionName, TMode>({\n    abi: portalSenderABI,\n    address: portalSenderAddress[chainId as keyof typeof portalSenderAddress],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link portalSenderABI}__ and `functionName` set to `\"donate\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0A893d9576b9cFD9EF78595963dc973238E78210)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe7FACd39531ee3C313330E93B4d7a8B8A3c84Aa4)\n */\nexport function usePortalSenderDonate<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof portalSenderAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof portalSenderABI,\n          'donate'\n        >['request']['abi'],\n        'donate',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'donate' }\n    : UseContractWriteConfig<typeof portalSenderABI, 'donate', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'donate'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof portalSenderABI, 'donate', TMode>({\n    abi: portalSenderABI,\n    address: portalSenderAddress[chainId as keyof typeof portalSenderAddress],\n    functionName: 'donate',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link portalSenderABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0A893d9576b9cFD9EF78595963dc973238E78210)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe7FACd39531ee3C313330E93B4d7a8B8A3c84Aa4)\n */\nexport function usePreparePortalSenderWrite<TFunctionName extends string>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof portalSenderABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof portalSenderAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: portalSenderABI,\n    address: portalSenderAddress[chainId as keyof typeof portalSenderAddress],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof portalSenderABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link portalSenderABI}__ and `functionName` set to `\"donate\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x0A893d9576b9cFD9EF78595963dc973238E78210)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xe7FACd39531ee3C313330E93B4d7a8B8A3c84Aa4)\n */\nexport function usePreparePortalSenderDonate(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof portalSenderABI, 'donate'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof portalSenderAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: portalSenderABI,\n    address: portalSenderAddress[chainId as keyof typeof portalSenderAddress],\n    functionName: 'donate',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof portalSenderABI, 'donate'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link proxyAdminABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function useProxyAdminRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof proxyAdminABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof proxyAdminABI, TFunctionName, TSelectData>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof proxyAdminAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    ...config,\n  } as UseContractReadConfig<typeof proxyAdminABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"addressManager\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function useProxyAdminAddressManager<\n  TFunctionName extends 'addressManager',\n  TSelectData = ReadContractResult<typeof proxyAdminABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof proxyAdminABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof proxyAdminAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'addressManager',\n    ...config,\n  } as UseContractReadConfig<typeof proxyAdminABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"getProxyAdmin\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function useProxyAdminGetProxyAdmin<\n  TFunctionName extends 'getProxyAdmin',\n  TSelectData = ReadContractResult<typeof proxyAdminABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof proxyAdminABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof proxyAdminAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'getProxyAdmin',\n    ...config,\n  } as UseContractReadConfig<typeof proxyAdminABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"getProxyImplementation\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function useProxyAdminGetProxyImplementation<\n  TFunctionName extends 'getProxyImplementation',\n  TSelectData = ReadContractResult<typeof proxyAdminABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof proxyAdminABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof proxyAdminAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'getProxyImplementation',\n    ...config,\n  } as UseContractReadConfig<typeof proxyAdminABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"implementationName\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function useProxyAdminImplementationName<\n  TFunctionName extends 'implementationName',\n  TSelectData = ReadContractResult<typeof proxyAdminABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof proxyAdminABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof proxyAdminAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'implementationName',\n    ...config,\n  } as UseContractReadConfig<typeof proxyAdminABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"isUpgrading\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function useProxyAdminIsUpgrading<\n  TFunctionName extends 'isUpgrading',\n  TSelectData = ReadContractResult<typeof proxyAdminABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof proxyAdminABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof proxyAdminAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'isUpgrading',\n    ...config,\n  } as UseContractReadConfig<typeof proxyAdminABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"owner\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function useProxyAdminOwner<\n  TFunctionName extends 'owner',\n  TSelectData = ReadContractResult<typeof proxyAdminABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof proxyAdminABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof proxyAdminAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'owner',\n    ...config,\n  } as UseContractReadConfig<typeof proxyAdminABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"proxyType\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function useProxyAdminProxyType<\n  TFunctionName extends 'proxyType',\n  TSelectData = ReadContractResult<typeof proxyAdminABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof proxyAdminABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof proxyAdminAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'proxyType',\n    ...config,\n  } as UseContractReadConfig<typeof proxyAdminABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link proxyAdminABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function useProxyAdminWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof proxyAdminAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof proxyAdminABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<typeof proxyAdminABI, TFunctionName, TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof proxyAdminABI, TFunctionName, TMode>({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"changeProxyAdmin\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function useProxyAdminChangeProxyAdmin<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof proxyAdminAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof proxyAdminABI,\n          'changeProxyAdmin'\n        >['request']['abi'],\n        'changeProxyAdmin',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'changeProxyAdmin'\n      }\n    : UseContractWriteConfig<\n        typeof proxyAdminABI,\n        'changeProxyAdmin',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'changeProxyAdmin'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof proxyAdminABI, 'changeProxyAdmin', TMode>({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'changeProxyAdmin',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"renounceOwnership\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function useProxyAdminRenounceOwnership<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof proxyAdminAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof proxyAdminABI,\n          'renounceOwnership'\n        >['request']['abi'],\n        'renounceOwnership',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'renounceOwnership'\n      }\n    : UseContractWriteConfig<\n        typeof proxyAdminABI,\n        'renounceOwnership',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'renounceOwnership'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof proxyAdminABI, 'renounceOwnership', TMode>({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'renounceOwnership',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"setAddress\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function useProxyAdminSetAddress<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof proxyAdminAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof proxyAdminABI,\n          'setAddress'\n        >['request']['abi'],\n        'setAddress',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'setAddress' }\n    : UseContractWriteConfig<typeof proxyAdminABI, 'setAddress', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'setAddress'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof proxyAdminABI, 'setAddress', TMode>({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'setAddress',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"setAddressManager\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function useProxyAdminSetAddressManager<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof proxyAdminAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof proxyAdminABI,\n          'setAddressManager'\n        >['request']['abi'],\n        'setAddressManager',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'setAddressManager'\n      }\n    : UseContractWriteConfig<\n        typeof proxyAdminABI,\n        'setAddressManager',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'setAddressManager'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof proxyAdminABI, 'setAddressManager', TMode>({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'setAddressManager',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"setImplementationName\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function useProxyAdminSetImplementationName<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof proxyAdminAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof proxyAdminABI,\n          'setImplementationName'\n        >['request']['abi'],\n        'setImplementationName',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'setImplementationName'\n      }\n    : UseContractWriteConfig<\n        typeof proxyAdminABI,\n        'setImplementationName',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'setImplementationName'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof proxyAdminABI, 'setImplementationName', TMode>(\n    {\n      abi: proxyAdminABI,\n      address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n      functionName: 'setImplementationName',\n      ...config,\n    } as any\n  )\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"setProxyType\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function useProxyAdminSetProxyType<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof proxyAdminAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof proxyAdminABI,\n          'setProxyType'\n        >['request']['abi'],\n        'setProxyType',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'setProxyType'\n      }\n    : UseContractWriteConfig<typeof proxyAdminABI, 'setProxyType', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'setProxyType'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof proxyAdminABI, 'setProxyType', TMode>({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'setProxyType',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"setUpgrading\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function useProxyAdminSetUpgrading<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof proxyAdminAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof proxyAdminABI,\n          'setUpgrading'\n        >['request']['abi'],\n        'setUpgrading',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'setUpgrading'\n      }\n    : UseContractWriteConfig<typeof proxyAdminABI, 'setUpgrading', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'setUpgrading'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof proxyAdminABI, 'setUpgrading', TMode>({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'setUpgrading',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"transferOwnership\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function useProxyAdminTransferOwnership<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof proxyAdminAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof proxyAdminABI,\n          'transferOwnership'\n        >['request']['abi'],\n        'transferOwnership',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'transferOwnership'\n      }\n    : UseContractWriteConfig<\n        typeof proxyAdminABI,\n        'transferOwnership',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'transferOwnership'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof proxyAdminABI, 'transferOwnership', TMode>({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'transferOwnership',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"upgrade\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function useProxyAdminUpgrade<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof proxyAdminAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof proxyAdminABI,\n          'upgrade'\n        >['request']['abi'],\n        'upgrade',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'upgrade' }\n    : UseContractWriteConfig<typeof proxyAdminABI, 'upgrade', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'upgrade'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof proxyAdminABI, 'upgrade', TMode>({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'upgrade',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"upgradeAndCall\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function useProxyAdminUpgradeAndCall<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof proxyAdminAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof proxyAdminABI,\n          'upgradeAndCall'\n        >['request']['abi'],\n        'upgradeAndCall',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'upgradeAndCall'\n      }\n    : UseContractWriteConfig<typeof proxyAdminABI, 'upgradeAndCall', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'upgradeAndCall'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof proxyAdminABI, 'upgradeAndCall', TMode>({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'upgradeAndCall',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link proxyAdminABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function usePrepareProxyAdminWrite<TFunctionName extends string>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof proxyAdminABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof proxyAdminAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof proxyAdminABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"changeProxyAdmin\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function usePrepareProxyAdminChangeProxyAdmin(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof proxyAdminABI, 'changeProxyAdmin'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof proxyAdminAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'changeProxyAdmin',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof proxyAdminABI, 'changeProxyAdmin'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"renounceOwnership\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function usePrepareProxyAdminRenounceOwnership(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof proxyAdminABI, 'renounceOwnership'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof proxyAdminAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'renounceOwnership',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof proxyAdminABI, 'renounceOwnership'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"setAddress\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function usePrepareProxyAdminSetAddress(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof proxyAdminABI, 'setAddress'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof proxyAdminAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'setAddress',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof proxyAdminABI, 'setAddress'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"setAddressManager\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function usePrepareProxyAdminSetAddressManager(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof proxyAdminABI, 'setAddressManager'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof proxyAdminAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'setAddressManager',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof proxyAdminABI, 'setAddressManager'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"setImplementationName\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function usePrepareProxyAdminSetImplementationName(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof proxyAdminABI,\n      'setImplementationName'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof proxyAdminAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'setImplementationName',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof proxyAdminABI, 'setImplementationName'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"setProxyType\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function usePrepareProxyAdminSetProxyType(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof proxyAdminABI, 'setProxyType'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof proxyAdminAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'setProxyType',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof proxyAdminABI, 'setProxyType'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"setUpgrading\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function usePrepareProxyAdminSetUpgrading(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof proxyAdminABI, 'setUpgrading'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof proxyAdminAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'setUpgrading',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof proxyAdminABI, 'setUpgrading'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"transferOwnership\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function usePrepareProxyAdminTransferOwnership(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof proxyAdminABI, 'transferOwnership'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof proxyAdminAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'transferOwnership',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof proxyAdminABI, 'transferOwnership'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"upgrade\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function usePrepareProxyAdminUpgrade(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof proxyAdminABI, 'upgrade'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof proxyAdminAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'upgrade',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof proxyAdminABI, 'upgrade'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link proxyAdminABI}__ and `functionName` set to `\"upgradeAndCall\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function usePrepareProxyAdminUpgradeAndCall(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof proxyAdminABI, 'upgradeAndCall'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof proxyAdminAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    functionName: 'upgradeAndCall',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof proxyAdminABI, 'upgradeAndCall'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link proxyAdminABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function useProxyAdminEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof proxyAdminABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof proxyAdminAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    ...config,\n  } as UseContractEventConfig<typeof proxyAdminABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link proxyAdminABI}__ and `eventName` set to `\"OwnershipTransferred\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x4200000000000000000000000000000000000018)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x4200000000000000000000000000000000000018)\n */\nexport function useProxyAdminOwnershipTransferredEvent(\n  config: Omit<\n    UseContractEventConfig<typeof proxyAdminABI, 'OwnershipTransferred'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof proxyAdminAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: proxyAdminABI,\n    address: proxyAdminAddress[chainId as keyof typeof proxyAdminAddress],\n    eventName: 'OwnershipTransferred',\n    ...config,\n  } as UseContractEventConfig<typeof proxyAdminABI, 'OwnershipTransferred'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemConfigABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof systemConfigABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemConfigABI, TFunctionName, TSelectData>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    ...config,\n  } as UseContractReadConfig<typeof systemConfigABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"UNSAFE_BLOCK_SIGNER_SLOT\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigUnsafeBlockSignerSlot<\n  TFunctionName extends 'UNSAFE_BLOCK_SIGNER_SLOT',\n  TSelectData = ReadContractResult<typeof systemConfigABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemConfigABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'UNSAFE_BLOCK_SIGNER_SLOT',\n    ...config,\n  } as UseContractReadConfig<typeof systemConfigABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"batcherHash\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigBatcherHash<\n  TFunctionName extends 'batcherHash',\n  TSelectData = ReadContractResult<typeof systemConfigABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemConfigABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'batcherHash',\n    ...config,\n  } as UseContractReadConfig<typeof systemConfigABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"gasLimit\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigGasLimit<\n  TFunctionName extends 'gasLimit',\n  TSelectData = ReadContractResult<typeof systemConfigABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemConfigABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'gasLimit',\n    ...config,\n  } as UseContractReadConfig<typeof systemConfigABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"minimumGasLimit\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigMinimumGasLimit<\n  TFunctionName extends 'minimumGasLimit',\n  TSelectData = ReadContractResult<typeof systemConfigABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemConfigABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'minimumGasLimit',\n    ...config,\n  } as UseContractReadConfig<typeof systemConfigABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"overhead\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigOverhead<\n  TFunctionName extends 'overhead',\n  TSelectData = ReadContractResult<typeof systemConfigABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemConfigABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'overhead',\n    ...config,\n  } as UseContractReadConfig<typeof systemConfigABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"owner\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigOwner<\n  TFunctionName extends 'owner',\n  TSelectData = ReadContractResult<typeof systemConfigABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemConfigABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'owner',\n    ...config,\n  } as UseContractReadConfig<typeof systemConfigABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"resourceConfig\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigResourceConfig<\n  TFunctionName extends 'resourceConfig',\n  TSelectData = ReadContractResult<typeof systemConfigABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemConfigABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'resourceConfig',\n    ...config,\n  } as UseContractReadConfig<typeof systemConfigABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"scalar\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigScalar<\n  TFunctionName extends 'scalar',\n  TSelectData = ReadContractResult<typeof systemConfigABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemConfigABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'scalar',\n    ...config,\n  } as UseContractReadConfig<typeof systemConfigABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"unsafeBlockSigner\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigUnsafeBlockSigner<\n  TFunctionName extends 'unsafeBlockSigner',\n  TSelectData = ReadContractResult<typeof systemConfigABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemConfigABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'unsafeBlockSigner',\n    ...config,\n  } as UseContractReadConfig<typeof systemConfigABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"version\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigVersion<\n  TFunctionName extends 'version',\n  TSelectData = ReadContractResult<typeof systemConfigABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemConfigABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'version',\n    ...config,\n  } as UseContractReadConfig<typeof systemConfigABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemConfigABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemConfigAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemConfigABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<typeof systemConfigABI, TFunctionName, TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof systemConfigABI, TFunctionName, TMode>({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"initialize\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigInitialize<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemConfigAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemConfigABI,\n          'initialize'\n        >['request']['abi'],\n        'initialize',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'initialize' }\n    : UseContractWriteConfig<typeof systemConfigABI, 'initialize', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'initialize'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof systemConfigABI, 'initialize', TMode>({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'initialize',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"renounceOwnership\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigRenounceOwnership<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemConfigAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemConfigABI,\n          'renounceOwnership'\n        >['request']['abi'],\n        'renounceOwnership',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'renounceOwnership'\n      }\n    : UseContractWriteConfig<\n        typeof systemConfigABI,\n        'renounceOwnership',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'renounceOwnership'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof systemConfigABI, 'renounceOwnership', TMode>({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'renounceOwnership',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"setBatcherHash\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigSetBatcherHash<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemConfigAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemConfigABI,\n          'setBatcherHash'\n        >['request']['abi'],\n        'setBatcherHash',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'setBatcherHash'\n      }\n    : UseContractWriteConfig<\n        typeof systemConfigABI,\n        'setBatcherHash',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'setBatcherHash'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof systemConfigABI, 'setBatcherHash', TMode>({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'setBatcherHash',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"setGasConfig\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigSetGasConfig<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemConfigAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemConfigABI,\n          'setGasConfig'\n        >['request']['abi'],\n        'setGasConfig',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'setGasConfig'\n      }\n    : UseContractWriteConfig<typeof systemConfigABI, 'setGasConfig', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'setGasConfig'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof systemConfigABI, 'setGasConfig', TMode>({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'setGasConfig',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"setGasLimit\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigSetGasLimit<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemConfigAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemConfigABI,\n          'setGasLimit'\n        >['request']['abi'],\n        'setGasLimit',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'setGasLimit'\n      }\n    : UseContractWriteConfig<typeof systemConfigABI, 'setGasLimit', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'setGasLimit'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof systemConfigABI, 'setGasLimit', TMode>({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'setGasLimit',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"setResourceConfig\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigSetResourceConfig<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemConfigAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemConfigABI,\n          'setResourceConfig'\n        >['request']['abi'],\n        'setResourceConfig',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'setResourceConfig'\n      }\n    : UseContractWriteConfig<\n        typeof systemConfigABI,\n        'setResourceConfig',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'setResourceConfig'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof systemConfigABI, 'setResourceConfig', TMode>({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'setResourceConfig',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"setUnsafeBlockSigner\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigSetUnsafeBlockSigner<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemConfigAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemConfigABI,\n          'setUnsafeBlockSigner'\n        >['request']['abi'],\n        'setUnsafeBlockSigner',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'setUnsafeBlockSigner'\n      }\n    : UseContractWriteConfig<\n        typeof systemConfigABI,\n        'setUnsafeBlockSigner',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'setUnsafeBlockSigner'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<\n    typeof systemConfigABI,\n    'setUnsafeBlockSigner',\n    TMode\n  >({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'setUnsafeBlockSigner',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"transferOwnership\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigTransferOwnership<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemConfigAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemConfigABI,\n          'transferOwnership'\n        >['request']['abi'],\n        'transferOwnership',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'transferOwnership'\n      }\n    : UseContractWriteConfig<\n        typeof systemConfigABI,\n        'transferOwnership',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'transferOwnership'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof systemConfigABI, 'transferOwnership', TMode>({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'transferOwnership',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemConfigABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function usePrepareSystemConfigWrite<TFunctionName extends string>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemConfigABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemConfigABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"initialize\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function usePrepareSystemConfigInitialize(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemConfigABI, 'initialize'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'initialize',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemConfigABI, 'initialize'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"renounceOwnership\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function usePrepareSystemConfigRenounceOwnership(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemConfigABI, 'renounceOwnership'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'renounceOwnership',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemConfigABI, 'renounceOwnership'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"setBatcherHash\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function usePrepareSystemConfigSetBatcherHash(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemConfigABI, 'setBatcherHash'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'setBatcherHash',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemConfigABI, 'setBatcherHash'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"setGasConfig\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function usePrepareSystemConfigSetGasConfig(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemConfigABI, 'setGasConfig'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'setGasConfig',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemConfigABI, 'setGasConfig'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"setGasLimit\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function usePrepareSystemConfigSetGasLimit(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemConfigABI, 'setGasLimit'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'setGasLimit',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemConfigABI, 'setGasLimit'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"setResourceConfig\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function usePrepareSystemConfigSetResourceConfig(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemConfigABI, 'setResourceConfig'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'setResourceConfig',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemConfigABI, 'setResourceConfig'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"setUnsafeBlockSigner\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function usePrepareSystemConfigSetUnsafeBlockSigner(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof systemConfigABI,\n      'setUnsafeBlockSigner'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'setUnsafeBlockSigner',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemConfigABI, 'setUnsafeBlockSigner'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemConfigABI}__ and `functionName` set to `\"transferOwnership\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function usePrepareSystemConfigTransferOwnership(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemConfigABI, 'transferOwnership'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    functionName: 'transferOwnership',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemConfigABI, 'transferOwnership'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link systemConfigABI}__.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof systemConfigABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    ...config,\n  } as UseContractEventConfig<typeof systemConfigABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link systemConfigABI}__ and `eventName` set to `\"ConfigUpdate\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigConfigUpdateEvent(\n  config: Omit<\n    UseContractEventConfig<typeof systemConfigABI, 'ConfigUpdate'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    eventName: 'ConfigUpdate',\n    ...config,\n  } as UseContractEventConfig<typeof systemConfigABI, 'ConfigUpdate'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link systemConfigABI}__ and `eventName` set to `\"Initialized\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigInitializedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof systemConfigABI, 'Initialized'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    eventName: 'Initialized',\n    ...config,\n  } as UseContractEventConfig<typeof systemConfigABI, 'Initialized'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link systemConfigABI}__ and `eventName` set to `\"OwnershipTransferred\"`.\n *\n * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x229047fed2591dbec1eF1118d64F7aF3dB9EB290)\n * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xAe851f927Ee40dE99aaBb7461C00f9622ab91d60)\n */\nexport function useSystemConfigOwnershipTransferredEvent(\n  config: Omit<\n    UseContractEventConfig<typeof systemConfigABI, 'OwnershipTransferred'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof systemConfigAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: systemConfigABI,\n    address: systemConfigAddress[chainId as keyof typeof systemConfigAddress],\n    eventName: 'OwnershipTransferred',\n    ...config,\n  } as UseContractEventConfig<typeof systemConfigABI, 'OwnershipTransferred'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemDictatorABI}__.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof systemDictatorABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return useContractRead({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    ...config,\n  } as UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"EXIT_1_NO_RETURN_STEP\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorExit_1NoReturnStep<\n  TFunctionName extends 'EXIT_1_NO_RETURN_STEP',\n  TSelectData = ReadContractResult<typeof systemDictatorABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return useContractRead({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'EXIT_1_NO_RETURN_STEP',\n    ...config,\n  } as UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"PROXY_TRANSFER_STEP\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorProxyTransferStep<\n  TFunctionName extends 'PROXY_TRANSFER_STEP',\n  TSelectData = ReadContractResult<typeof systemDictatorABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return useContractRead({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'PROXY_TRANSFER_STEP',\n    ...config,\n  } as UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"config\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorConfig<\n  TFunctionName extends 'config',\n  TSelectData = ReadContractResult<typeof systemDictatorABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return useContractRead({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'config',\n    ...config,\n  } as UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"currentStep\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorCurrentStep<\n  TFunctionName extends 'currentStep',\n  TSelectData = ReadContractResult<typeof systemDictatorABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return useContractRead({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'currentStep',\n    ...config,\n  } as UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"dynamicConfigSet\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorDynamicConfigSet<\n  TFunctionName extends 'dynamicConfigSet',\n  TSelectData = ReadContractResult<typeof systemDictatorABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return useContractRead({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'dynamicConfigSet',\n    ...config,\n  } as UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"exited\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorExited<\n  TFunctionName extends 'exited',\n  TSelectData = ReadContractResult<typeof systemDictatorABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return useContractRead({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'exited',\n    ...config,\n  } as UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"finalized\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorFinalized<\n  TFunctionName extends 'finalized',\n  TSelectData = ReadContractResult<typeof systemDictatorABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return useContractRead({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'finalized',\n    ...config,\n  } as UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"l2OutputOracleDynamicConfig\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorL2OutputOracleDynamicConfig<\n  TFunctionName extends 'l2OutputOracleDynamicConfig',\n  TSelectData = ReadContractResult<typeof systemDictatorABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return useContractRead({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'l2OutputOracleDynamicConfig',\n    ...config,\n  } as UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"oldL1CrossDomainMessenger\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorOldL1CrossDomainMessenger<\n  TFunctionName extends 'oldL1CrossDomainMessenger',\n  TSelectData = ReadContractResult<typeof systemDictatorABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return useContractRead({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'oldL1CrossDomainMessenger',\n    ...config,\n  } as UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"optimismPortalDynamicConfig\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorOptimismPortalDynamicConfig<\n  TFunctionName extends 'optimismPortalDynamicConfig',\n  TSelectData = ReadContractResult<typeof systemDictatorABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return useContractRead({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'optimismPortalDynamicConfig',\n    ...config,\n  } as UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"owner\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorOwner<\n  TFunctionName extends 'owner',\n  TSelectData = ReadContractResult<typeof systemDictatorABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return useContractRead({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'owner',\n    ...config,\n  } as UseContractReadConfig<typeof systemDictatorABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorABI}__.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<typeof systemDictatorABI, TFunctionName, TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorABI, TFunctionName, TMode>({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"exit1\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorExit1<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorABI,\n          'exit1'\n        >['request']['abi'],\n        'exit1',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'exit1' }\n    : UseContractWriteConfig<typeof systemDictatorABI, 'exit1', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'exit1'\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorABI, 'exit1', TMode>({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'exit1',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"finalize\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorFinalize<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorABI,\n          'finalize'\n        >['request']['abi'],\n        'finalize',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'finalize' }\n    : UseContractWriteConfig<typeof systemDictatorABI, 'finalize', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'finalize'\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorABI, 'finalize', TMode>({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'finalize',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"initialize\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorInitialize<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorABI,\n          'initialize'\n        >['request']['abi'],\n        'initialize',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'initialize' }\n    : UseContractWriteConfig<typeof systemDictatorABI, 'initialize', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'initialize'\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorABI, 'initialize', TMode>({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'initialize',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"phase1\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorPhase1<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorABI,\n          'phase1'\n        >['request']['abi'],\n        'phase1',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'phase1' }\n    : UseContractWriteConfig<typeof systemDictatorABI, 'phase1', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'phase1'\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorABI, 'phase1', TMode>({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'phase1',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"phase2\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorPhase2<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorABI,\n          'phase2'\n        >['request']['abi'],\n        'phase2',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'phase2' }\n    : UseContractWriteConfig<typeof systemDictatorABI, 'phase2', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'phase2'\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorABI, 'phase2', TMode>({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'phase2',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"renounceOwnership\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorRenounceOwnership<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorABI,\n          'renounceOwnership'\n        >['request']['abi'],\n        'renounceOwnership',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'renounceOwnership'\n      }\n    : UseContractWriteConfig<\n        typeof systemDictatorABI,\n        'renounceOwnership',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'renounceOwnership'\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorABI, 'renounceOwnership', TMode>(\n    {\n      abi: systemDictatorABI,\n      address: systemDictatorAddress[1],\n      functionName: 'renounceOwnership',\n      ...config,\n    } as any\n  )\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"step1\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorStep1<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorABI,\n          'step1'\n        >['request']['abi'],\n        'step1',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'step1' }\n    : UseContractWriteConfig<typeof systemDictatorABI, 'step1', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'step1'\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorABI, 'step1', TMode>({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'step1',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"step2\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorStep2<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorABI,\n          'step2'\n        >['request']['abi'],\n        'step2',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'step2' }\n    : UseContractWriteConfig<typeof systemDictatorABI, 'step2', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'step2'\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorABI, 'step2', TMode>({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'step2',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"step3\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorStep3<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorABI,\n          'step3'\n        >['request']['abi'],\n        'step3',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'step3' }\n    : UseContractWriteConfig<typeof systemDictatorABI, 'step3', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'step3'\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorABI, 'step3', TMode>({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'step3',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"step4\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorStep4<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorABI,\n          'step4'\n        >['request']['abi'],\n        'step4',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'step4' }\n    : UseContractWriteConfig<typeof systemDictatorABI, 'step4', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'step4'\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorABI, 'step4', TMode>({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'step4',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"step5\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorStep5<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorABI,\n          'step5'\n        >['request']['abi'],\n        'step5',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'step5' }\n    : UseContractWriteConfig<typeof systemDictatorABI, 'step5', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'step5'\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorABI, 'step5', TMode>({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'step5',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"transferOwnership\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorTransferOwnership<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorABI,\n          'transferOwnership'\n        >['request']['abi'],\n        'transferOwnership',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'transferOwnership'\n      }\n    : UseContractWriteConfig<\n        typeof systemDictatorABI,\n        'transferOwnership',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'transferOwnership'\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorABI, 'transferOwnership', TMode>(\n    {\n      abi: systemDictatorABI,\n      address: systemDictatorAddress[1],\n      functionName: 'transferOwnership',\n      ...config,\n    } as any\n  )\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"updateDynamicConfig\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorUpdateDynamicConfig<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorABI,\n          'updateDynamicConfig'\n        >['request']['abi'],\n        'updateDynamicConfig',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'updateDynamicConfig'\n      }\n    : UseContractWriteConfig<\n        typeof systemDictatorABI,\n        'updateDynamicConfig',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'updateDynamicConfig'\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof systemDictatorABI,\n    'updateDynamicConfig',\n    TMode\n  >({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'updateDynamicConfig',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorABI}__.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function usePrepareSystemDictatorWrite<TFunctionName extends string>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemDictatorABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"exit1\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function usePrepareSystemDictatorExit1(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemDictatorABI, 'exit1'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'exit1',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorABI, 'exit1'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"finalize\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function usePrepareSystemDictatorFinalize(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemDictatorABI, 'finalize'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'finalize',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorABI, 'finalize'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"initialize\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function usePrepareSystemDictatorInitialize(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemDictatorABI, 'initialize'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'initialize',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorABI, 'initialize'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"phase1\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function usePrepareSystemDictatorPhase1(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemDictatorABI, 'phase1'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'phase1',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorABI, 'phase1'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"phase2\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function usePrepareSystemDictatorPhase2(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemDictatorABI, 'phase2'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'phase2',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorABI, 'phase2'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"renounceOwnership\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function usePrepareSystemDictatorRenounceOwnership(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof systemDictatorABI,\n      'renounceOwnership'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'renounceOwnership',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorABI, 'renounceOwnership'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"step1\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function usePrepareSystemDictatorStep1(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemDictatorABI, 'step1'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'step1',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorABI, 'step1'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"step2\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function usePrepareSystemDictatorStep2(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemDictatorABI, 'step2'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'step2',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorABI, 'step2'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"step3\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function usePrepareSystemDictatorStep3(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemDictatorABI, 'step3'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'step3',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorABI, 'step3'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"step4\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function usePrepareSystemDictatorStep4(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemDictatorABI, 'step4'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'step4',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorABI, 'step4'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"step5\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function usePrepareSystemDictatorStep5(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemDictatorABI, 'step5'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'step5',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorABI, 'step5'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"transferOwnership\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function usePrepareSystemDictatorTransferOwnership(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof systemDictatorABI,\n      'transferOwnership'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'transferOwnership',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorABI, 'transferOwnership'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorABI}__ and `functionName` set to `\"updateDynamicConfig\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function usePrepareSystemDictatorUpdateDynamicConfig(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof systemDictatorABI,\n      'updateDynamicConfig'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    functionName: 'updateDynamicConfig',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorABI, 'updateDynamicConfig'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link systemDictatorABI}__.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof systemDictatorABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    ...config,\n  } as UseContractEventConfig<typeof systemDictatorABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link systemDictatorABI}__ and `eventName` set to `\"Initialized\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorInitializedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof systemDictatorABI, 'Initialized'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    eventName: 'Initialized',\n    ...config,\n  } as UseContractEventConfig<typeof systemDictatorABI, 'Initialized'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link systemDictatorABI}__ and `eventName` set to `\"OwnershipTransferred\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xB4453CEb33d2e67FA244A24acf2E50CEF31F53cB)\n */\nexport function useSystemDictatorOwnershipTransferredEvent(\n  config: Omit<\n    UseContractEventConfig<typeof systemDictatorABI, 'OwnershipTransferred'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof systemDictatorAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: systemDictatorABI,\n    address: systemDictatorAddress[1],\n    eventName: 'OwnershipTransferred',\n    ...config,\n  } as UseContractEventConfig<typeof systemDictatorABI, 'OwnershipTransferred'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemDictatorGoerliABI}__.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<\n    typeof systemDictatorGoerliABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof systemDictatorGoerliABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return useContractRead({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    ...config,\n  } as UseContractReadConfig<typeof systemDictatorGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"EXIT_1_NO_RETURN_STEP\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliExit_1NoReturnStep<\n  TFunctionName extends 'EXIT_1_NO_RETURN_STEP',\n  TSelectData = ReadContractResult<\n    typeof systemDictatorGoerliABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof systemDictatorGoerliABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return useContractRead({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'EXIT_1_NO_RETURN_STEP',\n    ...config,\n  } as UseContractReadConfig<typeof systemDictatorGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"PROXY_TRANSFER_STEP\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliProxyTransferStep<\n  TFunctionName extends 'PROXY_TRANSFER_STEP',\n  TSelectData = ReadContractResult<\n    typeof systemDictatorGoerliABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof systemDictatorGoerliABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return useContractRead({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'PROXY_TRANSFER_STEP',\n    ...config,\n  } as UseContractReadConfig<typeof systemDictatorGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"config\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliConfig<\n  TFunctionName extends 'config',\n  TSelectData = ReadContractResult<\n    typeof systemDictatorGoerliABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof systemDictatorGoerliABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return useContractRead({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'config',\n    ...config,\n  } as UseContractReadConfig<typeof systemDictatorGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"currentStep\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliCurrentStep<\n  TFunctionName extends 'currentStep',\n  TSelectData = ReadContractResult<\n    typeof systemDictatorGoerliABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof systemDictatorGoerliABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return useContractRead({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'currentStep',\n    ...config,\n  } as UseContractReadConfig<typeof systemDictatorGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"dynamicConfigSet\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliDynamicConfigSet<\n  TFunctionName extends 'dynamicConfigSet',\n  TSelectData = ReadContractResult<\n    typeof systemDictatorGoerliABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof systemDictatorGoerliABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return useContractRead({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'dynamicConfigSet',\n    ...config,\n  } as UseContractReadConfig<typeof systemDictatorGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"finalized\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliFinalized<\n  TFunctionName extends 'finalized',\n  TSelectData = ReadContractResult<\n    typeof systemDictatorGoerliABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof systemDictatorGoerliABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return useContractRead({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'finalized',\n    ...config,\n  } as UseContractReadConfig<typeof systemDictatorGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"l2OutputOracleDynamicConfig\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliL2OutputOracleDynamicConfig<\n  TFunctionName extends 'l2OutputOracleDynamicConfig',\n  TSelectData = ReadContractResult<\n    typeof systemDictatorGoerliABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof systemDictatorGoerliABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return useContractRead({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'l2OutputOracleDynamicConfig',\n    ...config,\n  } as UseContractReadConfig<typeof systemDictatorGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"oldL1CrossDomainMessenger\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliOldL1CrossDomainMessenger<\n  TFunctionName extends 'oldL1CrossDomainMessenger',\n  TSelectData = ReadContractResult<\n    typeof systemDictatorGoerliABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof systemDictatorGoerliABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return useContractRead({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'oldL1CrossDomainMessenger',\n    ...config,\n  } as UseContractReadConfig<typeof systemDictatorGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"owner\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliOwner<\n  TFunctionName extends 'owner',\n  TSelectData = ReadContractResult<\n    typeof systemDictatorGoerliABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof systemDictatorGoerliABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return useContractRead({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'owner',\n    ...config,\n  } as UseContractReadConfig<typeof systemDictatorGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorGoerliABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<\n        typeof systemDictatorGoerliABI,\n        TFunctionName,\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorGoerliABI, TFunctionName, TMode>(\n    {\n      abi: systemDictatorGoerliABI,\n      address: systemDictatorGoerliAddress[5],\n      ...config,\n    } as any\n  )\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"exit1\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliExit1<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorGoerliABI,\n          'exit1'\n        >['request']['abi'],\n        'exit1',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'exit1' }\n    : UseContractWriteConfig<typeof systemDictatorGoerliABI, 'exit1', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'exit1'\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorGoerliABI, 'exit1', TMode>({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'exit1',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"finalize\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliFinalize<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorGoerliABI,\n          'finalize'\n        >['request']['abi'],\n        'finalize',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'finalize' }\n    : UseContractWriteConfig<\n        typeof systemDictatorGoerliABI,\n        'finalize',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'finalize'\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorGoerliABI, 'finalize', TMode>({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'finalize',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"initialize\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliInitialize<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorGoerliABI,\n          'initialize'\n        >['request']['abi'],\n        'initialize',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'initialize' }\n    : UseContractWriteConfig<\n        typeof systemDictatorGoerliABI,\n        'initialize',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'initialize'\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorGoerliABI, 'initialize', TMode>({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'initialize',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"renounceOwnership\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliRenounceOwnership<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorGoerliABI,\n          'renounceOwnership'\n        >['request']['abi'],\n        'renounceOwnership',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'renounceOwnership'\n      }\n    : UseContractWriteConfig<\n        typeof systemDictatorGoerliABI,\n        'renounceOwnership',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'renounceOwnership'\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof systemDictatorGoerliABI,\n    'renounceOwnership',\n    TMode\n  >({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'renounceOwnership',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"step1\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliStep1<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorGoerliABI,\n          'step1'\n        >['request']['abi'],\n        'step1',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'step1' }\n    : UseContractWriteConfig<typeof systemDictatorGoerliABI, 'step1', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'step1'\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorGoerliABI, 'step1', TMode>({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'step1',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"step2\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliStep2<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorGoerliABI,\n          'step2'\n        >['request']['abi'],\n        'step2',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'step2' }\n    : UseContractWriteConfig<typeof systemDictatorGoerliABI, 'step2', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'step2'\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorGoerliABI, 'step2', TMode>({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'step2',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"step3\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliStep3<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorGoerliABI,\n          'step3'\n        >['request']['abi'],\n        'step3',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'step3' }\n    : UseContractWriteConfig<typeof systemDictatorGoerliABI, 'step3', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'step3'\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorGoerliABI, 'step3', TMode>({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'step3',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"step4\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliStep4<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorGoerliABI,\n          'step4'\n        >['request']['abi'],\n        'step4',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'step4' }\n    : UseContractWriteConfig<typeof systemDictatorGoerliABI, 'step4', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'step4'\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorGoerliABI, 'step4', TMode>({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'step4',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"step5\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliStep5<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorGoerliABI,\n          'step5'\n        >['request']['abi'],\n        'step5',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'step5' }\n    : UseContractWriteConfig<typeof systemDictatorGoerliABI, 'step5', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'step5'\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorGoerliABI, 'step5', TMode>({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'step5',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"step6\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliStep6<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorGoerliABI,\n          'step6'\n        >['request']['abi'],\n        'step6',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'step6' }\n    : UseContractWriteConfig<typeof systemDictatorGoerliABI, 'step6', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'step6'\n      } = {} as any\n) {\n  return useContractWrite<typeof systemDictatorGoerliABI, 'step6', TMode>({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'step6',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"transferOwnership\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliTransferOwnership<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorGoerliABI,\n          'transferOwnership'\n        >['request']['abi'],\n        'transferOwnership',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'transferOwnership'\n      }\n    : UseContractWriteConfig<\n        typeof systemDictatorGoerliABI,\n        'transferOwnership',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'transferOwnership'\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof systemDictatorGoerliABI,\n    'transferOwnership',\n    TMode\n  >({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'transferOwnership',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"updateL2OutputOracleDynamicConfig\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliUpdateL2OutputOracleDynamicConfig<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof systemDictatorGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof systemDictatorGoerliABI,\n          'updateL2OutputOracleDynamicConfig'\n        >['request']['abi'],\n        'updateL2OutputOracleDynamicConfig',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'updateL2OutputOracleDynamicConfig'\n      }\n    : UseContractWriteConfig<\n        typeof systemDictatorGoerliABI,\n        'updateL2OutputOracleDynamicConfig',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'updateL2OutputOracleDynamicConfig'\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof systemDictatorGoerliABI,\n    'updateL2OutputOracleDynamicConfig',\n    TMode\n  >({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'updateL2OutputOracleDynamicConfig',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function usePrepareSystemDictatorGoerliWrite<\n  TFunctionName extends string\n>(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof systemDictatorGoerliABI,\n      TFunctionName\n    >,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorGoerliABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"exit1\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function usePrepareSystemDictatorGoerliExit1(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemDictatorGoerliABI, 'exit1'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'exit1',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorGoerliABI, 'exit1'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"finalize\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function usePrepareSystemDictatorGoerliFinalize(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemDictatorGoerliABI, 'finalize'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'finalize',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorGoerliABI, 'finalize'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"initialize\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function usePrepareSystemDictatorGoerliInitialize(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemDictatorGoerliABI, 'initialize'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'initialize',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorGoerliABI, 'initialize'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"renounceOwnership\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function usePrepareSystemDictatorGoerliRenounceOwnership(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof systemDictatorGoerliABI,\n      'renounceOwnership'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'renounceOwnership',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorGoerliABI, 'renounceOwnership'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"step1\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function usePrepareSystemDictatorGoerliStep1(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemDictatorGoerliABI, 'step1'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'step1',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorGoerliABI, 'step1'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"step2\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function usePrepareSystemDictatorGoerliStep2(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemDictatorGoerliABI, 'step2'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'step2',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorGoerliABI, 'step2'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"step3\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function usePrepareSystemDictatorGoerliStep3(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemDictatorGoerliABI, 'step3'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'step3',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorGoerliABI, 'step3'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"step4\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function usePrepareSystemDictatorGoerliStep4(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemDictatorGoerliABI, 'step4'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'step4',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorGoerliABI, 'step4'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"step5\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function usePrepareSystemDictatorGoerliStep5(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemDictatorGoerliABI, 'step5'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'step5',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorGoerliABI, 'step5'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"step6\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function usePrepareSystemDictatorGoerliStep6(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof systemDictatorGoerliABI, 'step6'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'step6',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorGoerliABI, 'step6'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"transferOwnership\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function usePrepareSystemDictatorGoerliTransferOwnership(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof systemDictatorGoerliABI,\n      'transferOwnership'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'transferOwnership',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorGoerliABI, 'transferOwnership'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `functionName` set to `\"updateL2OutputOracleDynamicConfig\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function usePrepareSystemDictatorGoerliUpdateL2OutputOracleDynamicConfig(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof systemDictatorGoerliABI,\n      'updateL2OutputOracleDynamicConfig'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    functionName: 'updateL2OutputOracleDynamicConfig',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof systemDictatorGoerliABI, 'updateL2OutputOracleDynamicConfig'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link systemDictatorGoerliABI}__.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof systemDictatorGoerliABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    ...config,\n  } as UseContractEventConfig<typeof systemDictatorGoerliABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `eventName` set to `\"Initialized\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliInitializedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof systemDictatorGoerliABI, 'Initialized'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    eventName: 'Initialized',\n    ...config,\n  } as UseContractEventConfig<typeof systemDictatorGoerliABI, 'Initialized'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link systemDictatorGoerliABI}__ and `eventName` set to `\"OwnershipTransferred\"`.\n *\n * [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1f0613A44c9a8ECE7B3A2e0CdBdF0F5B47A50971)\n */\nexport function useSystemDictatorGoerliOwnershipTransferredEvent(\n  config: Omit<\n    UseContractEventConfig<\n      typeof systemDictatorGoerliABI,\n      'OwnershipTransferred'\n    >,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof systemDictatorGoerliAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: systemDictatorGoerliABI,\n    address: systemDictatorGoerliAddress[5],\n    eventName: 'OwnershipTransferred',\n    ...config,\n  } as UseContractEventConfig<typeof systemDictatorGoerliABI, 'OwnershipTransferred'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link teleportrWithdrawerABI}__.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function useTeleportrWithdrawerRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof teleportrWithdrawerABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof teleportrWithdrawerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof teleportrWithdrawerAddress } = {} as any\n) {\n  return useContractRead({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    ...config,\n  } as UseContractReadConfig<typeof teleportrWithdrawerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"data\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function useTeleportrWithdrawerData<\n  TFunctionName extends 'data',\n  TSelectData = ReadContractResult<typeof teleportrWithdrawerABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof teleportrWithdrawerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof teleportrWithdrawerAddress } = {} as any\n) {\n  return useContractRead({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    functionName: 'data',\n    ...config,\n  } as UseContractReadConfig<typeof teleportrWithdrawerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"owner\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function useTeleportrWithdrawerOwner<\n  TFunctionName extends 'owner',\n  TSelectData = ReadContractResult<typeof teleportrWithdrawerABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof teleportrWithdrawerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof teleportrWithdrawerAddress } = {} as any\n) {\n  return useContractRead({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    functionName: 'owner',\n    ...config,\n  } as UseContractReadConfig<typeof teleportrWithdrawerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"recipient\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function useTeleportrWithdrawerRecipient<\n  TFunctionName extends 'recipient',\n  TSelectData = ReadContractResult<typeof teleportrWithdrawerABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof teleportrWithdrawerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof teleportrWithdrawerAddress } = {} as any\n) {\n  return useContractRead({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    functionName: 'recipient',\n    ...config,\n  } as UseContractReadConfig<typeof teleportrWithdrawerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"teleportr\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function useTeleportrWithdrawerTeleportr<\n  TFunctionName extends 'teleportr',\n  TSelectData = ReadContractResult<typeof teleportrWithdrawerABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof teleportrWithdrawerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof teleportrWithdrawerAddress } = {} as any\n) {\n  return useContractRead({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    functionName: 'teleportr',\n    ...config,\n  } as UseContractReadConfig<typeof teleportrWithdrawerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link teleportrWithdrawerABI}__.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function useTeleportrWithdrawerWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof teleportrWithdrawerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof teleportrWithdrawerABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<\n        typeof teleportrWithdrawerABI,\n        TFunctionName,\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  return useContractWrite<typeof teleportrWithdrawerABI, TFunctionName, TMode>({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"CALL\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function useTeleportrWithdrawerCall<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof teleportrWithdrawerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof teleportrWithdrawerABI,\n          'CALL'\n        >['request']['abi'],\n        'CALL',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'CALL' }\n    : UseContractWriteConfig<typeof teleportrWithdrawerABI, 'CALL', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'CALL'\n      } = {} as any\n) {\n  return useContractWrite<typeof teleportrWithdrawerABI, 'CALL', TMode>({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    functionName: 'CALL',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"DELEGATECALL\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function useTeleportrWithdrawerDelegatecall<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof teleportrWithdrawerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof teleportrWithdrawerABI,\n          'DELEGATECALL'\n        >['request']['abi'],\n        'DELEGATECALL',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'DELEGATECALL'\n      }\n    : UseContractWriteConfig<\n        typeof teleportrWithdrawerABI,\n        'DELEGATECALL',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'DELEGATECALL'\n      } = {} as any\n) {\n  return useContractWrite<typeof teleportrWithdrawerABI, 'DELEGATECALL', TMode>(\n    {\n      abi: teleportrWithdrawerABI,\n      address: teleportrWithdrawerAddress[1],\n      functionName: 'DELEGATECALL',\n      ...config,\n    } as any\n  )\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"setData\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function useTeleportrWithdrawerSetData<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof teleportrWithdrawerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof teleportrWithdrawerABI,\n          'setData'\n        >['request']['abi'],\n        'setData',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'setData' }\n    : UseContractWriteConfig<\n        typeof teleportrWithdrawerABI,\n        'setData',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'setData'\n      } = {} as any\n) {\n  return useContractWrite<typeof teleportrWithdrawerABI, 'setData', TMode>({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    functionName: 'setData',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"setOwner\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function useTeleportrWithdrawerSetOwner<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof teleportrWithdrawerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof teleportrWithdrawerABI,\n          'setOwner'\n        >['request']['abi'],\n        'setOwner',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'setOwner' }\n    : UseContractWriteConfig<\n        typeof teleportrWithdrawerABI,\n        'setOwner',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'setOwner'\n      } = {} as any\n) {\n  return useContractWrite<typeof teleportrWithdrawerABI, 'setOwner', TMode>({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    functionName: 'setOwner',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"setRecipient\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function useTeleportrWithdrawerSetRecipient<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof teleportrWithdrawerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof teleportrWithdrawerABI,\n          'setRecipient'\n        >['request']['abi'],\n        'setRecipient',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'setRecipient'\n      }\n    : UseContractWriteConfig<\n        typeof teleportrWithdrawerABI,\n        'setRecipient',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'setRecipient'\n      } = {} as any\n) {\n  return useContractWrite<typeof teleportrWithdrawerABI, 'setRecipient', TMode>(\n    {\n      abi: teleportrWithdrawerABI,\n      address: teleportrWithdrawerAddress[1],\n      functionName: 'setRecipient',\n      ...config,\n    } as any\n  )\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"setTeleportr\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function useTeleportrWithdrawerSetTeleportr<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof teleportrWithdrawerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof teleportrWithdrawerABI,\n          'setTeleportr'\n        >['request']['abi'],\n        'setTeleportr',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'setTeleportr'\n      }\n    : UseContractWriteConfig<\n        typeof teleportrWithdrawerABI,\n        'setTeleportr',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'setTeleportr'\n      } = {} as any\n) {\n  return useContractWrite<typeof teleportrWithdrawerABI, 'setTeleportr', TMode>(\n    {\n      abi: teleportrWithdrawerABI,\n      address: teleportrWithdrawerAddress[1],\n      functionName: 'setTeleportr',\n      ...config,\n    } as any\n  )\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"withdrawERC20\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function useTeleportrWithdrawerWithdrawErc20<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof teleportrWithdrawerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof teleportrWithdrawerABI,\n          'withdrawERC20'\n        >['request']['abi'],\n        'withdrawERC20',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'withdrawERC20'\n      }\n    : UseContractWriteConfig<\n        typeof teleportrWithdrawerABI,\n        'withdrawERC20',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'withdrawERC20'\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof teleportrWithdrawerABI,\n    'withdrawERC20',\n    TMode\n  >({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    functionName: 'withdrawERC20',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"withdrawERC721\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function useTeleportrWithdrawerWithdrawErc721<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof teleportrWithdrawerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof teleportrWithdrawerABI,\n          'withdrawERC721'\n        >['request']['abi'],\n        'withdrawERC721',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'withdrawERC721'\n      }\n    : UseContractWriteConfig<\n        typeof teleportrWithdrawerABI,\n        'withdrawERC721',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'withdrawERC721'\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof teleportrWithdrawerABI,\n    'withdrawERC721',\n    TMode\n  >({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    functionName: 'withdrawERC721',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"withdrawETH\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function useTeleportrWithdrawerWithdrawEth<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof teleportrWithdrawerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof teleportrWithdrawerABI,\n          'withdrawETH'\n        >['request']['abi'],\n        'withdrawETH',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'withdrawETH'\n      }\n    : UseContractWriteConfig<\n        typeof teleportrWithdrawerABI,\n        'withdrawETH',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'withdrawETH'\n      } = {} as any\n) {\n  return useContractWrite<typeof teleportrWithdrawerABI, 'withdrawETH', TMode>({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    functionName: 'withdrawETH',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"withdrawFromTeleportr\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function useTeleportrWithdrawerWithdrawFromTeleportr<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof teleportrWithdrawerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof teleportrWithdrawerABI,\n          'withdrawFromTeleportr'\n        >['request']['abi'],\n        'withdrawFromTeleportr',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'withdrawFromTeleportr'\n      }\n    : UseContractWriteConfig<\n        typeof teleportrWithdrawerABI,\n        'withdrawFromTeleportr',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'withdrawFromTeleportr'\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof teleportrWithdrawerABI,\n    'withdrawFromTeleportr',\n    TMode\n  >({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    functionName: 'withdrawFromTeleportr',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link teleportrWithdrawerABI}__.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function usePrepareTeleportrWithdrawerWrite<\n  TFunctionName extends string\n>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof teleportrWithdrawerABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof teleportrWithdrawerAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof teleportrWithdrawerABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"CALL\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function usePrepareTeleportrWithdrawerCall(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof teleportrWithdrawerABI, 'CALL'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof teleportrWithdrawerAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    functionName: 'CALL',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof teleportrWithdrawerABI, 'CALL'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"DELEGATECALL\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function usePrepareTeleportrWithdrawerDelegatecall(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof teleportrWithdrawerABI,\n      'DELEGATECALL'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof teleportrWithdrawerAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    functionName: 'DELEGATECALL',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof teleportrWithdrawerABI, 'DELEGATECALL'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"setData\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function usePrepareTeleportrWithdrawerSetData(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof teleportrWithdrawerABI, 'setData'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof teleportrWithdrawerAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    functionName: 'setData',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof teleportrWithdrawerABI, 'setData'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"setOwner\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function usePrepareTeleportrWithdrawerSetOwner(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof teleportrWithdrawerABI, 'setOwner'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof teleportrWithdrawerAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    functionName: 'setOwner',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof teleportrWithdrawerABI, 'setOwner'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"setRecipient\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function usePrepareTeleportrWithdrawerSetRecipient(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof teleportrWithdrawerABI,\n      'setRecipient'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof teleportrWithdrawerAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    functionName: 'setRecipient',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof teleportrWithdrawerABI, 'setRecipient'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"setTeleportr\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function usePrepareTeleportrWithdrawerSetTeleportr(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof teleportrWithdrawerABI,\n      'setTeleportr'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof teleportrWithdrawerAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    functionName: 'setTeleportr',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof teleportrWithdrawerABI, 'setTeleportr'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"withdrawERC20\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function usePrepareTeleportrWithdrawerWithdrawErc20(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof teleportrWithdrawerABI,\n      'withdrawERC20'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof teleportrWithdrawerAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    functionName: 'withdrawERC20',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof teleportrWithdrawerABI, 'withdrawERC20'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"withdrawERC721\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function usePrepareTeleportrWithdrawerWithdrawErc721(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof teleportrWithdrawerABI,\n      'withdrawERC721'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof teleportrWithdrawerAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    functionName: 'withdrawERC721',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof teleportrWithdrawerABI, 'withdrawERC721'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"withdrawETH\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function usePrepareTeleportrWithdrawerWithdrawEth(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof teleportrWithdrawerABI, 'withdrawETH'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof teleportrWithdrawerAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    functionName: 'withdrawETH',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof teleportrWithdrawerABI, 'withdrawETH'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `functionName` set to `\"withdrawFromTeleportr\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function usePrepareTeleportrWithdrawerWithdrawFromTeleportr(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof teleportrWithdrawerABI,\n      'withdrawFromTeleportr'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof teleportrWithdrawerAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    functionName: 'withdrawFromTeleportr',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof teleportrWithdrawerABI, 'withdrawFromTeleportr'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link teleportrWithdrawerABI}__.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function useTeleportrWithdrawerEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof teleportrWithdrawerABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof teleportrWithdrawerAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    ...config,\n  } as UseContractEventConfig<typeof teleportrWithdrawerABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `eventName` set to `\"OwnerUpdated\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function useTeleportrWithdrawerOwnerUpdatedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof teleportrWithdrawerABI, 'OwnerUpdated'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof teleportrWithdrawerAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    eventName: 'OwnerUpdated',\n    ...config,\n  } as UseContractEventConfig<typeof teleportrWithdrawerABI, 'OwnerUpdated'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `eventName` set to `\"ReceivedETH\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function useTeleportrWithdrawerReceivedEthEvent(\n  config: Omit<\n    UseContractEventConfig<typeof teleportrWithdrawerABI, 'ReceivedETH'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof teleportrWithdrawerAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    eventName: 'ReceivedETH',\n    ...config,\n  } as UseContractEventConfig<typeof teleportrWithdrawerABI, 'ReceivedETH'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `eventName` set to `\"WithdrewERC20\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function useTeleportrWithdrawerWithdrewErc20Event(\n  config: Omit<\n    UseContractEventConfig<typeof teleportrWithdrawerABI, 'WithdrewERC20'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof teleportrWithdrawerAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    eventName: 'WithdrewERC20',\n    ...config,\n  } as UseContractEventConfig<typeof teleportrWithdrawerABI, 'WithdrewERC20'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `eventName` set to `\"WithdrewERC721\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function useTeleportrWithdrawerWithdrewErc721Event(\n  config: Omit<\n    UseContractEventConfig<typeof teleportrWithdrawerABI, 'WithdrewERC721'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof teleportrWithdrawerAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    eventName: 'WithdrewERC721',\n    ...config,\n  } as UseContractEventConfig<typeof teleportrWithdrawerABI, 'WithdrewERC721'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link teleportrWithdrawerABI}__ and `eventName` set to `\"WithdrewETH\"`.\n *\n * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x78A25524D90E3D0596558fb43789bD800a5c3007)\n */\nexport function useTeleportrWithdrawerWithdrewEthEvent(\n  config: Omit<\n    UseContractEventConfig<typeof teleportrWithdrawerABI, 'WithdrewETH'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof teleportrWithdrawerAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: teleportrWithdrawerABI,\n    address: teleportrWithdrawerAddress[1],\n    eventName: 'WithdrewETH',\n    ...config,\n  } as UseContractEventConfig<typeof teleportrWithdrawerABI, 'WithdrewETH'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link attestationStationABI}__.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n */\nexport function useAttestationStationRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof attestationStationABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof attestationStationABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof attestationStationAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: attestationStationABI,\n    address:\n      attestationStationAddress[\n        chainId as keyof typeof attestationStationAddress\n      ],\n    ...config,\n  } as UseContractReadConfig<typeof attestationStationABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link attestationStationABI}__ and `functionName` set to `\"attestations\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n */\nexport function useAttestationStationAttestations<\n  TFunctionName extends 'attestations',\n  TSelectData = ReadContractResult<typeof attestationStationABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof attestationStationABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof attestationStationAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: attestationStationABI,\n    address:\n      attestationStationAddress[\n        chainId as keyof typeof attestationStationAddress\n      ],\n    functionName: 'attestations',\n    ...config,\n  } as UseContractReadConfig<typeof attestationStationABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link attestationStationABI}__ and `functionName` set to `\"version\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n */\nexport function useAttestationStationVersion<\n  TFunctionName extends 'version',\n  TSelectData = ReadContractResult<typeof attestationStationABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof attestationStationABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof attestationStationAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: attestationStationABI,\n    address:\n      attestationStationAddress[\n        chainId as keyof typeof attestationStationAddress\n      ],\n    functionName: 'version',\n    ...config,\n  } as UseContractReadConfig<typeof attestationStationABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link attestationStationABI}__.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n */\nexport function useAttestationStationWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof attestationStationAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof attestationStationABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<\n        typeof attestationStationABI,\n        TFunctionName,\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof attestationStationABI, TFunctionName, TMode>({\n    abi: attestationStationABI,\n    address:\n      attestationStationAddress[\n        chainId as keyof typeof attestationStationAddress\n      ],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link attestationStationABI}__ and `functionName` set to `\"attest\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n */\nexport function useAttestationStationAttest<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof attestationStationAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof attestationStationABI,\n          'attest'\n        >['request']['abi'],\n        'attest',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'attest' }\n    : UseContractWriteConfig<typeof attestationStationABI, 'attest', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'attest'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof attestationStationABI, 'attest', TMode>({\n    abi: attestationStationABI,\n    address:\n      attestationStationAddress[\n        chainId as keyof typeof attestationStationAddress\n      ],\n    functionName: 'attest',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link attestationStationABI}__.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n */\nexport function usePrepareAttestationStationWrite<TFunctionName extends string>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof attestationStationABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof attestationStationAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: attestationStationABI,\n    address:\n      attestationStationAddress[\n        chainId as keyof typeof attestationStationAddress\n      ],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof attestationStationABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link attestationStationABI}__ and `functionName` set to `\"attest\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n */\nexport function usePrepareAttestationStationAttest(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof attestationStationABI, 'attest'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof attestationStationAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: attestationStationABI,\n    address:\n      attestationStationAddress[\n        chainId as keyof typeof attestationStationAddress\n      ],\n    functionName: 'attest',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof attestationStationABI, 'attest'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link attestationStationABI}__.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n */\nexport function useAttestationStationEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof attestationStationABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof attestationStationAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: attestationStationABI,\n    address:\n      attestationStationAddress[\n        chainId as keyof typeof attestationStationAddress\n      ],\n    ...config,\n  } as UseContractEventConfig<typeof attestationStationABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link attestationStationABI}__ and `eventName` set to `\"AttestationCreated\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77)\n */\nexport function useAttestationStationAttestationCreatedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof attestationStationABI, 'AttestationCreated'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof attestationStationAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: attestationStationABI,\n    address:\n      attestationStationAddress[\n        chainId as keyof typeof attestationStationAddress\n      ],\n    eventName: 'AttestationCreated',\n    ...config,\n  } as UseContractEventConfig<typeof attestationStationABI, 'AttestationCreated'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2Erc721BridgeABI}__.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000014)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000014)\n */\nexport function useL2Erc721BridgeRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof l2Erc721BridgeABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l2Erc721BridgeABI, TFunctionName, TSelectData>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l2Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l2Erc721BridgeABI,\n    address:\n      l2Erc721BridgeAddress[chainId as keyof typeof l2Erc721BridgeAddress],\n    ...config,\n  } as UseContractReadConfig<typeof l2Erc721BridgeABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2Erc721BridgeABI}__ and `functionName` set to `\"messenger\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000014)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000014)\n */\nexport function useL2Erc721BridgeMessenger<\n  TFunctionName extends 'messenger',\n  TSelectData = ReadContractResult<typeof l2Erc721BridgeABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l2Erc721BridgeABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l2Erc721BridgeABI,\n    address:\n      l2Erc721BridgeAddress[chainId as keyof typeof l2Erc721BridgeAddress],\n    functionName: 'messenger',\n    ...config,\n  } as UseContractReadConfig<typeof l2Erc721BridgeABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2Erc721BridgeABI}__ and `functionName` set to `\"otherBridge\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000014)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000014)\n */\nexport function useL2Erc721BridgeOtherBridge<\n  TFunctionName extends 'otherBridge',\n  TSelectData = ReadContractResult<typeof l2Erc721BridgeABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l2Erc721BridgeABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l2Erc721BridgeABI,\n    address:\n      l2Erc721BridgeAddress[chainId as keyof typeof l2Erc721BridgeAddress],\n    functionName: 'otherBridge',\n    ...config,\n  } as UseContractReadConfig<typeof l2Erc721BridgeABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2Erc721BridgeABI}__ and `functionName` set to `\"version\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000014)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000014)\n */\nexport function useL2Erc721BridgeVersion<\n  TFunctionName extends 'version',\n  TSelectData = ReadContractResult<typeof l2Erc721BridgeABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l2Erc721BridgeABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: l2Erc721BridgeABI,\n    address:\n      l2Erc721BridgeAddress[chainId as keyof typeof l2Erc721BridgeAddress],\n    functionName: 'version',\n    ...config,\n  } as UseContractReadConfig<typeof l2Erc721BridgeABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2Erc721BridgeABI}__.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000014)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000014)\n */\nexport function useL2Erc721BridgeWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2Erc721BridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2Erc721BridgeABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<typeof l2Erc721BridgeABI, TFunctionName, TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof l2Erc721BridgeABI, TFunctionName, TMode>({\n    abi: l2Erc721BridgeABI,\n    address:\n      l2Erc721BridgeAddress[chainId as keyof typeof l2Erc721BridgeAddress],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2Erc721BridgeABI}__ and `functionName` set to `\"bridgeERC721\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000014)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000014)\n */\nexport function useL2Erc721BridgeBridgeErc721<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2Erc721BridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2Erc721BridgeABI,\n          'bridgeERC721'\n        >['request']['abi'],\n        'bridgeERC721',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'bridgeERC721'\n      }\n    : UseContractWriteConfig<\n        typeof l2Erc721BridgeABI,\n        'bridgeERC721',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'bridgeERC721'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof l2Erc721BridgeABI, 'bridgeERC721', TMode>({\n    abi: l2Erc721BridgeABI,\n    address:\n      l2Erc721BridgeAddress[chainId as keyof typeof l2Erc721BridgeAddress],\n    functionName: 'bridgeERC721',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2Erc721BridgeABI}__ and `functionName` set to `\"bridgeERC721To\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000014)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000014)\n */\nexport function useL2Erc721BridgeBridgeErc721To<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2Erc721BridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2Erc721BridgeABI,\n          'bridgeERC721To'\n        >['request']['abi'],\n        'bridgeERC721To',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'bridgeERC721To'\n      }\n    : UseContractWriteConfig<\n        typeof l2Erc721BridgeABI,\n        'bridgeERC721To',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'bridgeERC721To'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof l2Erc721BridgeABI, 'bridgeERC721To', TMode>({\n    abi: l2Erc721BridgeABI,\n    address:\n      l2Erc721BridgeAddress[chainId as keyof typeof l2Erc721BridgeAddress],\n    functionName: 'bridgeERC721To',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2Erc721BridgeABI}__ and `functionName` set to `\"finalizeBridgeERC721\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000014)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000014)\n */\nexport function useL2Erc721BridgeFinalizeBridgeErc721<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2Erc721BridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2Erc721BridgeABI,\n          'finalizeBridgeERC721'\n        >['request']['abi'],\n        'finalizeBridgeERC721',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'finalizeBridgeERC721'\n      }\n    : UseContractWriteConfig<\n        typeof l2Erc721BridgeABI,\n        'finalizeBridgeERC721',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'finalizeBridgeERC721'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<\n    typeof l2Erc721BridgeABI,\n    'finalizeBridgeERC721',\n    TMode\n  >({\n    abi: l2Erc721BridgeABI,\n    address:\n      l2Erc721BridgeAddress[chainId as keyof typeof l2Erc721BridgeAddress],\n    functionName: 'finalizeBridgeERC721',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2Erc721BridgeABI}__.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000014)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000014)\n */\nexport function usePrepareL2Erc721BridgeWrite<TFunctionName extends string>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l2Erc721BridgeABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l2Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l2Erc721BridgeABI,\n    address:\n      l2Erc721BridgeAddress[chainId as keyof typeof l2Erc721BridgeAddress],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2Erc721BridgeABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2Erc721BridgeABI}__ and `functionName` set to `\"bridgeERC721\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000014)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000014)\n */\nexport function usePrepareL2Erc721BridgeBridgeErc721(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l2Erc721BridgeABI, 'bridgeERC721'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l2Erc721BridgeABI,\n    address:\n      l2Erc721BridgeAddress[chainId as keyof typeof l2Erc721BridgeAddress],\n    functionName: 'bridgeERC721',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2Erc721BridgeABI, 'bridgeERC721'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2Erc721BridgeABI}__ and `functionName` set to `\"bridgeERC721To\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000014)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000014)\n */\nexport function usePrepareL2Erc721BridgeBridgeErc721To(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l2Erc721BridgeABI, 'bridgeERC721To'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l2Erc721BridgeABI,\n    address:\n      l2Erc721BridgeAddress[chainId as keyof typeof l2Erc721BridgeAddress],\n    functionName: 'bridgeERC721To',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2Erc721BridgeABI, 'bridgeERC721To'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2Erc721BridgeABI}__ and `functionName` set to `\"finalizeBridgeERC721\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000014)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000014)\n */\nexport function usePrepareL2Erc721BridgeFinalizeBridgeErc721(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof l2Erc721BridgeABI,\n      'finalizeBridgeERC721'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: l2Erc721BridgeABI,\n    address:\n      l2Erc721BridgeAddress[chainId as keyof typeof l2Erc721BridgeAddress],\n    functionName: 'finalizeBridgeERC721',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2Erc721BridgeABI, 'finalizeBridgeERC721'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2Erc721BridgeABI}__.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000014)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000014)\n */\nexport function useL2Erc721BridgeEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof l2Erc721BridgeABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l2Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l2Erc721BridgeABI,\n    address:\n      l2Erc721BridgeAddress[chainId as keyof typeof l2Erc721BridgeAddress],\n    ...config,\n  } as UseContractEventConfig<typeof l2Erc721BridgeABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2Erc721BridgeABI}__ and `eventName` set to `\"ERC721BridgeFinalized\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000014)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000014)\n */\nexport function useL2Erc721BridgeErc721BridgeFinalizedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l2Erc721BridgeABI, 'ERC721BridgeFinalized'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l2Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l2Erc721BridgeABI,\n    address:\n      l2Erc721BridgeAddress[chainId as keyof typeof l2Erc721BridgeAddress],\n    eventName: 'ERC721BridgeFinalized',\n    ...config,\n  } as UseContractEventConfig<typeof l2Erc721BridgeABI, 'ERC721BridgeFinalized'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2Erc721BridgeABI}__ and `eventName` set to `\"ERC721BridgeInitiated\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000014)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000014)\n */\nexport function useL2Erc721BridgeErc721BridgeInitiatedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l2Erc721BridgeABI, 'ERC721BridgeInitiated'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l2Erc721BridgeAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: l2Erc721BridgeABI,\n    address:\n      l2Erc721BridgeAddress[chainId as keyof typeof l2Erc721BridgeAddress],\n    eventName: 'ERC721BridgeInitiated',\n    ...config,\n  } as UseContractEventConfig<typeof l2Erc721BridgeABI, 'ERC721BridgeInitiated'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link mintManagerABI}__.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x5C4e7Ba1E219E47948e6e3F55019A647bA501005)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76)\n */\nexport function useMintManagerRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof mintManagerABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof mintManagerABI, TFunctionName, TSelectData>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof mintManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: mintManagerABI,\n    address: mintManagerAddress[chainId as keyof typeof mintManagerAddress],\n    ...config,\n  } as UseContractReadConfig<typeof mintManagerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link mintManagerABI}__ and `functionName` set to `\"DENOMINATOR\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x5C4e7Ba1E219E47948e6e3F55019A647bA501005)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76)\n */\nexport function useMintManagerDenominator<\n  TFunctionName extends 'DENOMINATOR',\n  TSelectData = ReadContractResult<typeof mintManagerABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof mintManagerABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof mintManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: mintManagerABI,\n    address: mintManagerAddress[chainId as keyof typeof mintManagerAddress],\n    functionName: 'DENOMINATOR',\n    ...config,\n  } as UseContractReadConfig<typeof mintManagerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link mintManagerABI}__ and `functionName` set to `\"MINT_CAP\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x5C4e7Ba1E219E47948e6e3F55019A647bA501005)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76)\n */\nexport function useMintManagerMintCap<\n  TFunctionName extends 'MINT_CAP',\n  TSelectData = ReadContractResult<typeof mintManagerABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof mintManagerABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof mintManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: mintManagerABI,\n    address: mintManagerAddress[chainId as keyof typeof mintManagerAddress],\n    functionName: 'MINT_CAP',\n    ...config,\n  } as UseContractReadConfig<typeof mintManagerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link mintManagerABI}__ and `functionName` set to `\"MINT_PERIOD\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x5C4e7Ba1E219E47948e6e3F55019A647bA501005)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76)\n */\nexport function useMintManagerMintPeriod<\n  TFunctionName extends 'MINT_PERIOD',\n  TSelectData = ReadContractResult<typeof mintManagerABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof mintManagerABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof mintManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: mintManagerABI,\n    address: mintManagerAddress[chainId as keyof typeof mintManagerAddress],\n    functionName: 'MINT_PERIOD',\n    ...config,\n  } as UseContractReadConfig<typeof mintManagerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link mintManagerABI}__ and `functionName` set to `\"governanceToken\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x5C4e7Ba1E219E47948e6e3F55019A647bA501005)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76)\n */\nexport function useMintManagerGovernanceToken<\n  TFunctionName extends 'governanceToken',\n  TSelectData = ReadContractResult<typeof mintManagerABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof mintManagerABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof mintManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: mintManagerABI,\n    address: mintManagerAddress[chainId as keyof typeof mintManagerAddress],\n    functionName: 'governanceToken',\n    ...config,\n  } as UseContractReadConfig<typeof mintManagerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link mintManagerABI}__ and `functionName` set to `\"mintPermittedAfter\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x5C4e7Ba1E219E47948e6e3F55019A647bA501005)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76)\n */\nexport function useMintManagerMintPermittedAfter<\n  TFunctionName extends 'mintPermittedAfter',\n  TSelectData = ReadContractResult<typeof mintManagerABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof mintManagerABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof mintManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: mintManagerABI,\n    address: mintManagerAddress[chainId as keyof typeof mintManagerAddress],\n    functionName: 'mintPermittedAfter',\n    ...config,\n  } as UseContractReadConfig<typeof mintManagerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link mintManagerABI}__ and `functionName` set to `\"owner\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x5C4e7Ba1E219E47948e6e3F55019A647bA501005)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76)\n */\nexport function useMintManagerOwner<\n  TFunctionName extends 'owner',\n  TSelectData = ReadContractResult<typeof mintManagerABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof mintManagerABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof mintManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: mintManagerABI,\n    address: mintManagerAddress[chainId as keyof typeof mintManagerAddress],\n    functionName: 'owner',\n    ...config,\n  } as UseContractReadConfig<typeof mintManagerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mintManagerABI}__.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x5C4e7Ba1E219E47948e6e3F55019A647bA501005)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76)\n */\nexport function useMintManagerWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof mintManagerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof mintManagerABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<typeof mintManagerABI, TFunctionName, TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof mintManagerABI, TFunctionName, TMode>({\n    abi: mintManagerABI,\n    address: mintManagerAddress[chainId as keyof typeof mintManagerAddress],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mintManagerABI}__ and `functionName` set to `\"mint\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x5C4e7Ba1E219E47948e6e3F55019A647bA501005)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76)\n */\nexport function useMintManagerMint<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof mintManagerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof mintManagerABI,\n          'mint'\n        >['request']['abi'],\n        'mint',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'mint' }\n    : UseContractWriteConfig<typeof mintManagerABI, 'mint', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'mint'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof mintManagerABI, 'mint', TMode>({\n    abi: mintManagerABI,\n    address: mintManagerAddress[chainId as keyof typeof mintManagerAddress],\n    functionName: 'mint',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mintManagerABI}__ and `functionName` set to `\"renounceOwnership\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x5C4e7Ba1E219E47948e6e3F55019A647bA501005)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76)\n */\nexport function useMintManagerRenounceOwnership<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof mintManagerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof mintManagerABI,\n          'renounceOwnership'\n        >['request']['abi'],\n        'renounceOwnership',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'renounceOwnership'\n      }\n    : UseContractWriteConfig<\n        typeof mintManagerABI,\n        'renounceOwnership',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'renounceOwnership'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof mintManagerABI, 'renounceOwnership', TMode>({\n    abi: mintManagerABI,\n    address: mintManagerAddress[chainId as keyof typeof mintManagerAddress],\n    functionName: 'renounceOwnership',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mintManagerABI}__ and `functionName` set to `\"transferOwnership\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x5C4e7Ba1E219E47948e6e3F55019A647bA501005)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76)\n */\nexport function useMintManagerTransferOwnership<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof mintManagerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof mintManagerABI,\n          'transferOwnership'\n        >['request']['abi'],\n        'transferOwnership',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'transferOwnership'\n      }\n    : UseContractWriteConfig<\n        typeof mintManagerABI,\n        'transferOwnership',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'transferOwnership'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof mintManagerABI, 'transferOwnership', TMode>({\n    abi: mintManagerABI,\n    address: mintManagerAddress[chainId as keyof typeof mintManagerAddress],\n    functionName: 'transferOwnership',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mintManagerABI}__ and `functionName` set to `\"upgrade\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x5C4e7Ba1E219E47948e6e3F55019A647bA501005)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76)\n */\nexport function useMintManagerUpgrade<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof mintManagerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof mintManagerABI,\n          'upgrade'\n        >['request']['abi'],\n        'upgrade',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'upgrade' }\n    : UseContractWriteConfig<typeof mintManagerABI, 'upgrade', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'upgrade'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof mintManagerABI, 'upgrade', TMode>({\n    abi: mintManagerABI,\n    address: mintManagerAddress[chainId as keyof typeof mintManagerAddress],\n    functionName: 'upgrade',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mintManagerABI}__.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x5C4e7Ba1E219E47948e6e3F55019A647bA501005)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76)\n */\nexport function usePrepareMintManagerWrite<TFunctionName extends string>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof mintManagerABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof mintManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: mintManagerABI,\n    address: mintManagerAddress[chainId as keyof typeof mintManagerAddress],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof mintManagerABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mintManagerABI}__ and `functionName` set to `\"mint\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x5C4e7Ba1E219E47948e6e3F55019A647bA501005)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76)\n */\nexport function usePrepareMintManagerMint(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof mintManagerABI, 'mint'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof mintManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: mintManagerABI,\n    address: mintManagerAddress[chainId as keyof typeof mintManagerAddress],\n    functionName: 'mint',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof mintManagerABI, 'mint'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mintManagerABI}__ and `functionName` set to `\"renounceOwnership\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x5C4e7Ba1E219E47948e6e3F55019A647bA501005)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76)\n */\nexport function usePrepareMintManagerRenounceOwnership(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof mintManagerABI, 'renounceOwnership'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof mintManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: mintManagerABI,\n    address: mintManagerAddress[chainId as keyof typeof mintManagerAddress],\n    functionName: 'renounceOwnership',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof mintManagerABI, 'renounceOwnership'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mintManagerABI}__ and `functionName` set to `\"transferOwnership\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x5C4e7Ba1E219E47948e6e3F55019A647bA501005)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76)\n */\nexport function usePrepareMintManagerTransferOwnership(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof mintManagerABI, 'transferOwnership'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof mintManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: mintManagerABI,\n    address: mintManagerAddress[chainId as keyof typeof mintManagerAddress],\n    functionName: 'transferOwnership',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof mintManagerABI, 'transferOwnership'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mintManagerABI}__ and `functionName` set to `\"upgrade\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x5C4e7Ba1E219E47948e6e3F55019A647bA501005)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76)\n */\nexport function usePrepareMintManagerUpgrade(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof mintManagerABI, 'upgrade'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof mintManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: mintManagerABI,\n    address: mintManagerAddress[chainId as keyof typeof mintManagerAddress],\n    functionName: 'upgrade',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof mintManagerABI, 'upgrade'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mintManagerABI}__.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x5C4e7Ba1E219E47948e6e3F55019A647bA501005)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76)\n */\nexport function useMintManagerEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof mintManagerABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof mintManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: mintManagerABI,\n    address: mintManagerAddress[chainId as keyof typeof mintManagerAddress],\n    ...config,\n  } as UseContractEventConfig<typeof mintManagerABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mintManagerABI}__ and `eventName` set to `\"OwnershipTransferred\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x5C4e7Ba1E219E47948e6e3F55019A647bA501005)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x038a8825A3C3B0c08d52Cc76E5E361953Cf6Dc76)\n */\nexport function useMintManagerOwnershipTransferredEvent(\n  config: Omit<\n    UseContractEventConfig<typeof mintManagerABI, 'OwnershipTransferred'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof mintManagerAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: mintManagerABI,\n    address: mintManagerAddress[chainId as keyof typeof mintManagerAddress],\n    eventName: 'OwnershipTransferred',\n    ...config,\n  } as UseContractEventConfig<typeof mintManagerABI, 'OwnershipTransferred'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismMintableErc721FactoryABI}__.\n *\n * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000017)\n */\nexport function useOptimismMintableErc721FactoryRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<\n    typeof optimismMintableErc721FactoryABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimismMintableErc721FactoryABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address'\n  > & {\n    chainId?: keyof typeof optimismMintableErc721FactoryAddress\n  } = {} as any\n) {\n  return useContractRead({\n    abi: optimismMintableErc721FactoryABI,\n    address: optimismMintableErc721FactoryAddress[10],\n    ...config,\n  } as UseContractReadConfig<typeof optimismMintableErc721FactoryABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismMintableErc721FactoryABI}__ and `functionName` set to `\"bridge\"`.\n *\n * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000017)\n */\nexport function useOptimismMintableErc721FactoryBridge<\n  TFunctionName extends 'bridge',\n  TSelectData = ReadContractResult<\n    typeof optimismMintableErc721FactoryABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimismMintableErc721FactoryABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & {\n    chainId?: keyof typeof optimismMintableErc721FactoryAddress\n  } = {} as any\n) {\n  return useContractRead({\n    abi: optimismMintableErc721FactoryABI,\n    address: optimismMintableErc721FactoryAddress[10],\n    functionName: 'bridge',\n    ...config,\n  } as UseContractReadConfig<typeof optimismMintableErc721FactoryABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismMintableErc721FactoryABI}__ and `functionName` set to `\"isOptimismMintableERC721\"`.\n *\n * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000017)\n */\nexport function useOptimismMintableErc721FactoryIsOptimismMintableErc721<\n  TFunctionName extends 'isOptimismMintableERC721',\n  TSelectData = ReadContractResult<\n    typeof optimismMintableErc721FactoryABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimismMintableErc721FactoryABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & {\n    chainId?: keyof typeof optimismMintableErc721FactoryAddress\n  } = {} as any\n) {\n  return useContractRead({\n    abi: optimismMintableErc721FactoryABI,\n    address: optimismMintableErc721FactoryAddress[10],\n    functionName: 'isOptimismMintableERC721',\n    ...config,\n  } as UseContractReadConfig<typeof optimismMintableErc721FactoryABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismMintableErc721FactoryABI}__ and `functionName` set to `\"remoteChainId\"`.\n *\n * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000017)\n */\nexport function useOptimismMintableErc721FactoryRemoteChainId<\n  TFunctionName extends 'remoteChainId',\n  TSelectData = ReadContractResult<\n    typeof optimismMintableErc721FactoryABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimismMintableErc721FactoryABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & {\n    chainId?: keyof typeof optimismMintableErc721FactoryAddress\n  } = {} as any\n) {\n  return useContractRead({\n    abi: optimismMintableErc721FactoryABI,\n    address: optimismMintableErc721FactoryAddress[10],\n    functionName: 'remoteChainId',\n    ...config,\n  } as UseContractReadConfig<typeof optimismMintableErc721FactoryABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismMintableErc721FactoryABI}__ and `functionName` set to `\"version\"`.\n *\n * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000017)\n */\nexport function useOptimismMintableErc721FactoryVersion<\n  TFunctionName extends 'version',\n  TSelectData = ReadContractResult<\n    typeof optimismMintableErc721FactoryABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimismMintableErc721FactoryABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & {\n    chainId?: keyof typeof optimismMintableErc721FactoryAddress\n  } = {} as any\n) {\n  return useContractRead({\n    abi: optimismMintableErc721FactoryABI,\n    address: optimismMintableErc721FactoryAddress[10],\n    functionName: 'version',\n    ...config,\n  } as UseContractReadConfig<typeof optimismMintableErc721FactoryABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimismMintableErc721FactoryABI}__.\n *\n * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000017)\n */\nexport function useOptimismMintableErc721FactoryWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimismMintableErc721FactoryAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimismMintableErc721FactoryABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<\n        typeof optimismMintableErc721FactoryABI,\n        TFunctionName,\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof optimismMintableErc721FactoryABI,\n    TFunctionName,\n    TMode\n  >({\n    abi: optimismMintableErc721FactoryABI,\n    address: optimismMintableErc721FactoryAddress[10],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimismMintableErc721FactoryABI}__ and `functionName` set to `\"createOptimismMintableERC721\"`.\n *\n * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000017)\n */\nexport function useOptimismMintableErc721FactoryCreateOptimismMintableErc721<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimismMintableErc721FactoryAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimismMintableErc721FactoryABI,\n          'createOptimismMintableERC721'\n        >['request']['abi'],\n        'createOptimismMintableERC721',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'createOptimismMintableERC721'\n      }\n    : UseContractWriteConfig<\n        typeof optimismMintableErc721FactoryABI,\n        'createOptimismMintableERC721',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'createOptimismMintableERC721'\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof optimismMintableErc721FactoryABI,\n    'createOptimismMintableERC721',\n    TMode\n  >({\n    abi: optimismMintableErc721FactoryABI,\n    address: optimismMintableErc721FactoryAddress[10],\n    functionName: 'createOptimismMintableERC721',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimismMintableErc721FactoryABI}__.\n *\n * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000017)\n */\nexport function usePrepareOptimismMintableErc721FactoryWrite<\n  TFunctionName extends string\n>(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof optimismMintableErc721FactoryABI,\n      TFunctionName\n    >,\n    'abi' | 'address'\n  > & {\n    chainId?: keyof typeof optimismMintableErc721FactoryAddress\n  } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: optimismMintableErc721FactoryABI,\n    address: optimismMintableErc721FactoryAddress[10],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimismMintableErc721FactoryABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimismMintableErc721FactoryABI}__ and `functionName` set to `\"createOptimismMintableERC721\"`.\n *\n * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000017)\n */\nexport function usePrepareOptimismMintableErc721FactoryCreateOptimismMintableErc721(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof optimismMintableErc721FactoryABI,\n      'createOptimismMintableERC721'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & {\n    chainId?: keyof typeof optimismMintableErc721FactoryAddress\n  } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: optimismMintableErc721FactoryABI,\n    address: optimismMintableErc721FactoryAddress[10],\n    functionName: 'createOptimismMintableERC721',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimismMintableErc721FactoryABI, 'createOptimismMintableERC721'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link optimismMintableErc721FactoryABI}__.\n *\n * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000017)\n */\nexport function useOptimismMintableErc721FactoryEvent<\n  TEventName extends string\n>(\n  config: Omit<\n    UseContractEventConfig<typeof optimismMintableErc721FactoryABI, TEventName>,\n    'abi' | 'address'\n  > & {\n    chainId?: keyof typeof optimismMintableErc721FactoryAddress\n  } = {} as any\n) {\n  return useContractEvent({\n    abi: optimismMintableErc721FactoryABI,\n    address: optimismMintableErc721FactoryAddress[10],\n    ...config,\n  } as UseContractEventConfig<typeof optimismMintableErc721FactoryABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link optimismMintableErc721FactoryABI}__ and `eventName` set to `\"OptimismMintableERC721Created\"`.\n *\n * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x4200000000000000000000000000000000000017)\n */\nexport function useOptimismMintableErc721FactoryOptimismMintableErc721CreatedEvent(\n  config: Omit<\n    UseContractEventConfig<\n      typeof optimismMintableErc721FactoryABI,\n      'OptimismMintableERC721Created'\n    >,\n    'abi' | 'address' | 'eventName'\n  > & {\n    chainId?: keyof typeof optimismMintableErc721FactoryAddress\n  } = {} as any\n) {\n  return useContractEvent({\n    abi: optimismMintableErc721FactoryABI,\n    address: optimismMintableErc721FactoryAddress[10],\n    eventName: 'OptimismMintableERC721Created',\n    ...config,\n  } as UseContractEventConfig<typeof optimismMintableErc721FactoryABI, 'OptimismMintableERC721Created'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismMintableErc721FactoryOptimismGoerliABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000017)\n */\nexport function useOptimismMintableErc721FactoryOptimismGoerliRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<\n    typeof optimismMintableErc721FactoryOptimismGoerliABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimismMintableErc721FactoryOptimismGoerliABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address'\n  > & {\n    chainId?: keyof typeof optimismMintableErc721FactoryOptimismGoerliAddress\n  } = {} as any\n) {\n  return useContractRead({\n    abi: optimismMintableErc721FactoryOptimismGoerliABI,\n    address: optimismMintableErc721FactoryOptimismGoerliAddress[420],\n    ...config,\n  } as UseContractReadConfig<typeof optimismMintableErc721FactoryOptimismGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismMintableErc721FactoryOptimismGoerliABI}__ and `functionName` set to `\"BRIDGE\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000017)\n */\nexport function useOptimismMintableErc721FactoryOptimismGoerliBridge<\n  TFunctionName extends 'BRIDGE',\n  TSelectData = ReadContractResult<\n    typeof optimismMintableErc721FactoryOptimismGoerliABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimismMintableErc721FactoryOptimismGoerliABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & {\n    chainId?: keyof typeof optimismMintableErc721FactoryOptimismGoerliAddress\n  } = {} as any\n) {\n  return useContractRead({\n    abi: optimismMintableErc721FactoryOptimismGoerliABI,\n    address: optimismMintableErc721FactoryOptimismGoerliAddress[420],\n    functionName: 'BRIDGE',\n    ...config,\n  } as UseContractReadConfig<typeof optimismMintableErc721FactoryOptimismGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismMintableErc721FactoryOptimismGoerliABI}__ and `functionName` set to `\"REMOTE_CHAIN_ID\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000017)\n */\nexport function useOptimismMintableErc721FactoryOptimismGoerliRemoteChainId<\n  TFunctionName extends 'REMOTE_CHAIN_ID',\n  TSelectData = ReadContractResult<\n    typeof optimismMintableErc721FactoryOptimismGoerliABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimismMintableErc721FactoryOptimismGoerliABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & {\n    chainId?: keyof typeof optimismMintableErc721FactoryOptimismGoerliAddress\n  } = {} as any\n) {\n  return useContractRead({\n    abi: optimismMintableErc721FactoryOptimismGoerliABI,\n    address: optimismMintableErc721FactoryOptimismGoerliAddress[420],\n    functionName: 'REMOTE_CHAIN_ID',\n    ...config,\n  } as UseContractReadConfig<typeof optimismMintableErc721FactoryOptimismGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismMintableErc721FactoryOptimismGoerliABI}__ and `functionName` set to `\"isOptimismMintableERC721\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000017)\n */\nexport function useOptimismMintableErc721FactoryOptimismGoerliIsOptimismMintableErc721<\n  TFunctionName extends 'isOptimismMintableERC721',\n  TSelectData = ReadContractResult<\n    typeof optimismMintableErc721FactoryOptimismGoerliABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimismMintableErc721FactoryOptimismGoerliABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & {\n    chainId?: keyof typeof optimismMintableErc721FactoryOptimismGoerliAddress\n  } = {} as any\n) {\n  return useContractRead({\n    abi: optimismMintableErc721FactoryOptimismGoerliABI,\n    address: optimismMintableErc721FactoryOptimismGoerliAddress[420],\n    functionName: 'isOptimismMintableERC721',\n    ...config,\n  } as UseContractReadConfig<typeof optimismMintableErc721FactoryOptimismGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimismMintableErc721FactoryOptimismGoerliABI}__ and `functionName` set to `\"version\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000017)\n */\nexport function useOptimismMintableErc721FactoryOptimismGoerliVersion<\n  TFunctionName extends 'version',\n  TSelectData = ReadContractResult<\n    typeof optimismMintableErc721FactoryOptimismGoerliABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimismMintableErc721FactoryOptimismGoerliABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & {\n    chainId?: keyof typeof optimismMintableErc721FactoryOptimismGoerliAddress\n  } = {} as any\n) {\n  return useContractRead({\n    abi: optimismMintableErc721FactoryOptimismGoerliABI,\n    address: optimismMintableErc721FactoryOptimismGoerliAddress[420],\n    functionName: 'version',\n    ...config,\n  } as UseContractReadConfig<typeof optimismMintableErc721FactoryOptimismGoerliABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimismMintableErc721FactoryOptimismGoerliABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000017)\n */\nexport function useOptimismMintableErc721FactoryOptimismGoerliWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimismMintableErc721FactoryOptimismGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimismMintableErc721FactoryOptimismGoerliABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<\n        typeof optimismMintableErc721FactoryOptimismGoerliABI,\n        TFunctionName,\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof optimismMintableErc721FactoryOptimismGoerliABI,\n    TFunctionName,\n    TMode\n  >({\n    abi: optimismMintableErc721FactoryOptimismGoerliABI,\n    address: optimismMintableErc721FactoryOptimismGoerliAddress[420],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimismMintableErc721FactoryOptimismGoerliABI}__ and `functionName` set to `\"createOptimismMintableERC721\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000017)\n */\nexport function useOptimismMintableErc721FactoryOptimismGoerliCreateOptimismMintableErc721<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimismMintableErc721FactoryOptimismGoerliAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimismMintableErc721FactoryOptimismGoerliABI,\n          'createOptimismMintableERC721'\n        >['request']['abi'],\n        'createOptimismMintableERC721',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'createOptimismMintableERC721'\n      }\n    : UseContractWriteConfig<\n        typeof optimismMintableErc721FactoryOptimismGoerliABI,\n        'createOptimismMintableERC721',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'createOptimismMintableERC721'\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof optimismMintableErc721FactoryOptimismGoerliABI,\n    'createOptimismMintableERC721',\n    TMode\n  >({\n    abi: optimismMintableErc721FactoryOptimismGoerliABI,\n    address: optimismMintableErc721FactoryOptimismGoerliAddress[420],\n    functionName: 'createOptimismMintableERC721',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimismMintableErc721FactoryOptimismGoerliABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000017)\n */\nexport function usePrepareOptimismMintableErc721FactoryOptimismGoerliWrite<\n  TFunctionName extends string\n>(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof optimismMintableErc721FactoryOptimismGoerliABI,\n      TFunctionName\n    >,\n    'abi' | 'address'\n  > & {\n    chainId?: keyof typeof optimismMintableErc721FactoryOptimismGoerliAddress\n  } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: optimismMintableErc721FactoryOptimismGoerliABI,\n    address: optimismMintableErc721FactoryOptimismGoerliAddress[420],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimismMintableErc721FactoryOptimismGoerliABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimismMintableErc721FactoryOptimismGoerliABI}__ and `functionName` set to `\"createOptimismMintableERC721\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000017)\n */\nexport function usePrepareOptimismMintableErc721FactoryOptimismGoerliCreateOptimismMintableErc721(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof optimismMintableErc721FactoryOptimismGoerliABI,\n      'createOptimismMintableERC721'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & {\n    chainId?: keyof typeof optimismMintableErc721FactoryOptimismGoerliAddress\n  } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: optimismMintableErc721FactoryOptimismGoerliABI,\n    address: optimismMintableErc721FactoryOptimismGoerliAddress[420],\n    functionName: 'createOptimismMintableERC721',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimismMintableErc721FactoryOptimismGoerliABI, 'createOptimismMintableERC721'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link optimismMintableErc721FactoryOptimismGoerliABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000017)\n */\nexport function useOptimismMintableErc721FactoryOptimismGoerliEvent<\n  TEventName extends string\n>(\n  config: Omit<\n    UseContractEventConfig<\n      typeof optimismMintableErc721FactoryOptimismGoerliABI,\n      TEventName\n    >,\n    'abi' | 'address'\n  > & {\n    chainId?: keyof typeof optimismMintableErc721FactoryOptimismGoerliAddress\n  } = {} as any\n) {\n  return useContractEvent({\n    abi: optimismMintableErc721FactoryOptimismGoerliABI,\n    address: optimismMintableErc721FactoryOptimismGoerliAddress[420],\n    ...config,\n  } as UseContractEventConfig<typeof optimismMintableErc721FactoryOptimismGoerliABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link optimismMintableErc721FactoryOptimismGoerliABI}__ and `eventName` set to `\"OptimismMintableERC721Created\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000017)\n */\nexport function useOptimismMintableErc721FactoryOptimismGoerliOptimismMintableErc721CreatedEvent(\n  config: Omit<\n    UseContractEventConfig<\n      typeof optimismMintableErc721FactoryOptimismGoerliABI,\n      'OptimismMintableERC721Created'\n    >,\n    'abi' | 'address' | 'eventName'\n  > & {\n    chainId?: keyof typeof optimismMintableErc721FactoryOptimismGoerliAddress\n  } = {} as any\n) {\n  return useContractEvent({\n    abi: optimismMintableErc721FactoryOptimismGoerliABI,\n    address: optimismMintableErc721FactoryOptimismGoerliAddress[420],\n    eventName: 'OptimismMintableERC721Created',\n    ...config,\n  } as UseContractEventConfig<typeof optimismMintableErc721FactoryOptimismGoerliABI, 'OptimismMintableERC721Created'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistABI}__.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof optimistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    ...config,\n  } as UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"ATTESTATION_STATION\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistAttestationStation<\n  TFunctionName extends 'ATTESTATION_STATION',\n  TSelectData = ReadContractResult<typeof optimistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'ATTESTATION_STATION',\n    ...config,\n  } as UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"BASE_URI_ATTESTATION_KEY\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistBaseUriAttestationKey<\n  TFunctionName extends 'BASE_URI_ATTESTATION_KEY',\n  TSelectData = ReadContractResult<typeof optimistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'BASE_URI_ATTESTATION_KEY',\n    ...config,\n  } as UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"BASE_URI_ATTESTOR\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistBaseUriAttestor<\n  TFunctionName extends 'BASE_URI_ATTESTOR',\n  TSelectData = ReadContractResult<typeof optimistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'BASE_URI_ATTESTOR',\n    ...config,\n  } as UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"OPTIMIST_ALLOWLIST\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistOptimistAllowlist<\n  TFunctionName extends 'OPTIMIST_ALLOWLIST',\n  TSelectData = ReadContractResult<typeof optimistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'OPTIMIST_ALLOWLIST',\n    ...config,\n  } as UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"approve\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistApprove<\n  TFunctionName extends 'approve',\n  TSelectData = ReadContractResult<typeof optimistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'approve',\n    ...config,\n  } as UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"balanceOf\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistBalanceOf<\n  TFunctionName extends 'balanceOf',\n  TSelectData = ReadContractResult<typeof optimistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'balanceOf',\n    ...config,\n  } as UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"baseURI\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistBaseUri<\n  TFunctionName extends 'baseURI',\n  TSelectData = ReadContractResult<typeof optimistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'baseURI',\n    ...config,\n  } as UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"getApproved\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistGetApproved<\n  TFunctionName extends 'getApproved',\n  TSelectData = ReadContractResult<typeof optimistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'getApproved',\n    ...config,\n  } as UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"isApprovedForAll\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistIsApprovedForAll<\n  TFunctionName extends 'isApprovedForAll',\n  TSelectData = ReadContractResult<typeof optimistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'isApprovedForAll',\n    ...config,\n  } as UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"isOnAllowList\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistIsOnAllowList<\n  TFunctionName extends 'isOnAllowList',\n  TSelectData = ReadContractResult<typeof optimistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'isOnAllowList',\n    ...config,\n  } as UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"name\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistName<\n  TFunctionName extends 'name',\n  TSelectData = ReadContractResult<typeof optimistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'name',\n    ...config,\n  } as UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"ownerOf\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistOwnerOf<\n  TFunctionName extends 'ownerOf',\n  TSelectData = ReadContractResult<typeof optimistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'ownerOf',\n    ...config,\n  } as UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"supportsInterface\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistSupportsInterface<\n  TFunctionName extends 'supportsInterface',\n  TSelectData = ReadContractResult<typeof optimistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'supportsInterface',\n    ...config,\n  } as UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"symbol\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistSymbol<\n  TFunctionName extends 'symbol',\n  TSelectData = ReadContractResult<typeof optimistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'symbol',\n    ...config,\n  } as UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"tokenIdOfAddress\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistTokenIdOfAddress<\n  TFunctionName extends 'tokenIdOfAddress',\n  TSelectData = ReadContractResult<typeof optimistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'tokenIdOfAddress',\n    ...config,\n  } as UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"tokenURI\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistTokenUri<\n  TFunctionName extends 'tokenURI',\n  TSelectData = ReadContractResult<typeof optimistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'tokenURI',\n    ...config,\n  } as UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"version\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistVersion<\n  TFunctionName extends 'version',\n  TSelectData = ReadContractResult<typeof optimistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'version',\n    ...config,\n  } as UseContractReadConfig<typeof optimistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimistABI}__.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimistAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimistABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<typeof optimistABI, TFunctionName, TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof optimistABI, TFunctionName, TMode>({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"burn\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistBurn<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimistAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimistABI,\n          'burn'\n        >['request']['abi'],\n        'burn',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'burn' }\n    : UseContractWriteConfig<typeof optimistABI, 'burn', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'burn'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof optimistABI, 'burn', TMode>({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'burn',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"initialize\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistInitialize<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimistAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimistABI,\n          'initialize'\n        >['request']['abi'],\n        'initialize',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'initialize' }\n    : UseContractWriteConfig<typeof optimistABI, 'initialize', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'initialize'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof optimistABI, 'initialize', TMode>({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'initialize',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"mint\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistMint<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimistAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimistABI,\n          'mint'\n        >['request']['abi'],\n        'mint',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'mint' }\n    : UseContractWriteConfig<typeof optimistABI, 'mint', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'mint'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof optimistABI, 'mint', TMode>({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'mint',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"safeTransferFrom\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistSafeTransferFrom<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimistAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimistABI,\n          'safeTransferFrom'\n        >['request']['abi'],\n        'safeTransferFrom',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'safeTransferFrom'\n      }\n    : UseContractWriteConfig<typeof optimistABI, 'safeTransferFrom', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'safeTransferFrom'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof optimistABI, 'safeTransferFrom', TMode>({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'safeTransferFrom',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"setApprovalForAll\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistSetApprovalForAll<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimistAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimistABI,\n          'setApprovalForAll'\n        >['request']['abi'],\n        'setApprovalForAll',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'setApprovalForAll'\n      }\n    : UseContractWriteConfig<typeof optimistABI, 'setApprovalForAll', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'setApprovalForAll'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof optimistABI, 'setApprovalForAll', TMode>({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'setApprovalForAll',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"transferFrom\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistTransferFrom<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimistAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimistABI,\n          'transferFrom'\n        >['request']['abi'],\n        'transferFrom',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'transferFrom'\n      }\n    : UseContractWriteConfig<typeof optimistABI, 'transferFrom', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'transferFrom'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof optimistABI, 'transferFrom', TMode>({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'transferFrom',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimistABI}__.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function usePrepareOptimistWrite<TFunctionName extends string>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof optimistABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimistABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"burn\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function usePrepareOptimistBurn(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof optimistABI, 'burn'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'burn',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimistABI, 'burn'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"initialize\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function usePrepareOptimistInitialize(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof optimistABI, 'initialize'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'initialize',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimistABI, 'initialize'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"mint\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function usePrepareOptimistMint(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof optimistABI, 'mint'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'mint',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimistABI, 'mint'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"safeTransferFrom\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function usePrepareOptimistSafeTransferFrom(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof optimistABI, 'safeTransferFrom'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'safeTransferFrom',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimistABI, 'safeTransferFrom'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"setApprovalForAll\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function usePrepareOptimistSetApprovalForAll(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof optimistABI, 'setApprovalForAll'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'setApprovalForAll',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimistABI, 'setApprovalForAll'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimistABI}__ and `functionName` set to `\"transferFrom\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function usePrepareOptimistTransferFrom(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof optimistABI, 'transferFrom'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    functionName: 'transferFrom',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimistABI, 'transferFrom'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link optimistABI}__.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof optimistABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    ...config,\n  } as UseContractEventConfig<typeof optimistABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link optimistABI}__ and `eventName` set to `\"Approval\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistApprovalEvent(\n  config: Omit<\n    UseContractEventConfig<typeof optimistABI, 'Approval'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    eventName: 'Approval',\n    ...config,\n  } as UseContractEventConfig<typeof optimistABI, 'Approval'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link optimistABI}__ and `eventName` set to `\"ApprovalForAll\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistApprovalForAllEvent(\n  config: Omit<\n    UseContractEventConfig<typeof optimistABI, 'ApprovalForAll'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    eventName: 'ApprovalForAll',\n    ...config,\n  } as UseContractEventConfig<typeof optimistABI, 'ApprovalForAll'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link optimistABI}__ and `eventName` set to `\"Initialized\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistInitializedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof optimistABI, 'Initialized'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    eventName: 'Initialized',\n    ...config,\n  } as UseContractEventConfig<typeof optimistABI, 'Initialized'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link optimistABI}__ and `eventName` set to `\"Transfer\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x2335022c740d17c2837f9C884Bfe4fFdbf0A95D5)\n */\nexport function useOptimistTransferEvent(\n  config: Omit<\n    UseContractEventConfig<typeof optimistABI, 'Transfer'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof optimistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: optimistABI,\n    address: optimistAddress[chainId as keyof typeof optimistAddress],\n    eventName: 'Transfer',\n    ...config,\n  } as UseContractEventConfig<typeof optimistABI, 'Transfer'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistAllowlistABI}__.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n */\nexport function useOptimistAllowlistRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof optimistAllowlistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimistAllowlistABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof optimistAllowlistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistAllowlistABI,\n    address:\n      optimistAllowlistAddress[\n        chainId as keyof typeof optimistAllowlistAddress\n      ],\n    ...config,\n  } as UseContractReadConfig<typeof optimistAllowlistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistAllowlistABI}__ and `functionName` set to `\"ALLOWLIST_ATTESTOR\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n */\nexport function useOptimistAllowlistAllowlistAttestor<\n  TFunctionName extends 'ALLOWLIST_ATTESTOR',\n  TSelectData = ReadContractResult<typeof optimistAllowlistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimistAllowlistABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAllowlistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistAllowlistABI,\n    address:\n      optimistAllowlistAddress[\n        chainId as keyof typeof optimistAllowlistAddress\n      ],\n    functionName: 'ALLOWLIST_ATTESTOR',\n    ...config,\n  } as UseContractReadConfig<typeof optimistAllowlistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistAllowlistABI}__ and `functionName` set to `\"ATTESTATION_STATION\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n */\nexport function useOptimistAllowlistAttestationStation<\n  TFunctionName extends 'ATTESTATION_STATION',\n  TSelectData = ReadContractResult<typeof optimistAllowlistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimistAllowlistABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAllowlistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistAllowlistABI,\n    address:\n      optimistAllowlistAddress[\n        chainId as keyof typeof optimistAllowlistAddress\n      ],\n    functionName: 'ATTESTATION_STATION',\n    ...config,\n  } as UseContractReadConfig<typeof optimistAllowlistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistAllowlistABI}__ and `functionName` set to `\"COINBASE_QUEST_ATTESTOR\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n */\nexport function useOptimistAllowlistCoinbaseQuestAttestor<\n  TFunctionName extends 'COINBASE_QUEST_ATTESTOR',\n  TSelectData = ReadContractResult<typeof optimistAllowlistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimistAllowlistABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAllowlistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistAllowlistABI,\n    address:\n      optimistAllowlistAddress[\n        chainId as keyof typeof optimistAllowlistAddress\n      ],\n    functionName: 'COINBASE_QUEST_ATTESTOR',\n    ...config,\n  } as UseContractReadConfig<typeof optimistAllowlistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistAllowlistABI}__ and `functionName` set to `\"COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n */\nexport function useOptimistAllowlistCoinbaseQuestEligibleAttestationKey<\n  TFunctionName extends 'COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY',\n  TSelectData = ReadContractResult<typeof optimistAllowlistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimistAllowlistABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAllowlistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistAllowlistABI,\n    address:\n      optimistAllowlistAddress[\n        chainId as keyof typeof optimistAllowlistAddress\n      ],\n    functionName: 'COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY',\n    ...config,\n  } as UseContractReadConfig<typeof optimistAllowlistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistAllowlistABI}__ and `functionName` set to `\"OPTIMIST_CAN_MINT_ATTESTATION_KEY\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n */\nexport function useOptimistAllowlistOptimistCanMintAttestationKey<\n  TFunctionName extends 'OPTIMIST_CAN_MINT_ATTESTATION_KEY',\n  TSelectData = ReadContractResult<typeof optimistAllowlistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimistAllowlistABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAllowlistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistAllowlistABI,\n    address:\n      optimistAllowlistAddress[\n        chainId as keyof typeof optimistAllowlistAddress\n      ],\n    functionName: 'OPTIMIST_CAN_MINT_ATTESTATION_KEY',\n    ...config,\n  } as UseContractReadConfig<typeof optimistAllowlistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistAllowlistABI}__ and `functionName` set to `\"OPTIMIST_INVITER\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n */\nexport function useOptimistAllowlistOptimistInviter<\n  TFunctionName extends 'OPTIMIST_INVITER',\n  TSelectData = ReadContractResult<typeof optimistAllowlistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimistAllowlistABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAllowlistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistAllowlistABI,\n    address:\n      optimistAllowlistAddress[\n        chainId as keyof typeof optimistAllowlistAddress\n      ],\n    functionName: 'OPTIMIST_INVITER',\n    ...config,\n  } as UseContractReadConfig<typeof optimistAllowlistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistAllowlistABI}__ and `functionName` set to `\"isAllowedToMint\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n */\nexport function useOptimistAllowlistIsAllowedToMint<\n  TFunctionName extends 'isAllowedToMint',\n  TSelectData = ReadContractResult<typeof optimistAllowlistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimistAllowlistABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAllowlistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistAllowlistABI,\n    address:\n      optimistAllowlistAddress[\n        chainId as keyof typeof optimistAllowlistAddress\n      ],\n    functionName: 'isAllowedToMint',\n    ...config,\n  } as UseContractReadConfig<typeof optimistAllowlistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistAllowlistABI}__ and `functionName` set to `\"version\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x482b1945D58f2E9Db0CEbe13c7fcFc6876b41180)\n */\nexport function useOptimistAllowlistVersion<\n  TFunctionName extends 'version',\n  TSelectData = ReadContractResult<typeof optimistAllowlistABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimistAllowlistABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistAllowlistAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistAllowlistABI,\n    address:\n      optimistAllowlistAddress[\n        chainId as keyof typeof optimistAllowlistAddress\n      ],\n    functionName: 'version',\n    ...config,\n  } as UseContractReadConfig<typeof optimistAllowlistABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistInviterABI}__.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function useOptimistInviterRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof optimistInviterABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimistInviterABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof optimistInviterAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    ...config,\n  } as UseContractReadConfig<typeof optimistInviterABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistInviterABI}__ and `functionName` set to `\"ATTESTATION_STATION\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function useOptimistInviterAttestationStation<\n  TFunctionName extends 'ATTESTATION_STATION',\n  TSelectData = ReadContractResult<typeof optimistInviterABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimistInviterABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistInviterAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    functionName: 'ATTESTATION_STATION',\n    ...config,\n  } as UseContractReadConfig<typeof optimistInviterABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistInviterABI}__ and `functionName` set to `\"CAN_INVITE_ATTESTATION_KEY\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function useOptimistInviterCanInviteAttestationKey<\n  TFunctionName extends 'CAN_INVITE_ATTESTATION_KEY',\n  TSelectData = ReadContractResult<typeof optimistInviterABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimistInviterABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistInviterAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    functionName: 'CAN_INVITE_ATTESTATION_KEY',\n    ...config,\n  } as UseContractReadConfig<typeof optimistInviterABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistInviterABI}__ and `functionName` set to `\"CLAIMABLE_INVITE_TYPEHASH\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function useOptimistInviterClaimableInviteTypehash<\n  TFunctionName extends 'CLAIMABLE_INVITE_TYPEHASH',\n  TSelectData = ReadContractResult<typeof optimistInviterABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimistInviterABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistInviterAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    functionName: 'CLAIMABLE_INVITE_TYPEHASH',\n    ...config,\n  } as UseContractReadConfig<typeof optimistInviterABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistInviterABI}__ and `functionName` set to `\"EIP712_VERSION\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function useOptimistInviterEip712Version<\n  TFunctionName extends 'EIP712_VERSION',\n  TSelectData = ReadContractResult<typeof optimistInviterABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimistInviterABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistInviterAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    functionName: 'EIP712_VERSION',\n    ...config,\n  } as UseContractReadConfig<typeof optimistInviterABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistInviterABI}__ and `functionName` set to `\"INVITE_GRANTER\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function useOptimistInviterInviteGranter<\n  TFunctionName extends 'INVITE_GRANTER',\n  TSelectData = ReadContractResult<typeof optimistInviterABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimistInviterABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistInviterAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    functionName: 'INVITE_GRANTER',\n    ...config,\n  } as UseContractReadConfig<typeof optimistInviterABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistInviterABI}__ and `functionName` set to `\"MIN_COMMITMENT_PERIOD\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function useOptimistInviterMinCommitmentPeriod<\n  TFunctionName extends 'MIN_COMMITMENT_PERIOD',\n  TSelectData = ReadContractResult<typeof optimistInviterABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimistInviterABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistInviterAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    functionName: 'MIN_COMMITMENT_PERIOD',\n    ...config,\n  } as UseContractReadConfig<typeof optimistInviterABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistInviterABI}__ and `functionName` set to `\"commitmentTimestamps\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function useOptimistInviterCommitmentTimestamps<\n  TFunctionName extends 'commitmentTimestamps',\n  TSelectData = ReadContractResult<typeof optimistInviterABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimistInviterABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistInviterAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    functionName: 'commitmentTimestamps',\n    ...config,\n  } as UseContractReadConfig<typeof optimistInviterABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistInviterABI}__ and `functionName` set to `\"inviteCounts\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function useOptimistInviterInviteCounts<\n  TFunctionName extends 'inviteCounts',\n  TSelectData = ReadContractResult<typeof optimistInviterABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimistInviterABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistInviterAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    functionName: 'inviteCounts',\n    ...config,\n  } as UseContractReadConfig<typeof optimistInviterABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistInviterABI}__ and `functionName` set to `\"usedNonces\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function useOptimistInviterUsedNonces<\n  TFunctionName extends 'usedNonces',\n  TSelectData = ReadContractResult<typeof optimistInviterABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimistInviterABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistInviterAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    functionName: 'usedNonces',\n    ...config,\n  } as UseContractReadConfig<typeof optimistInviterABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link optimistInviterABI}__ and `functionName` set to `\"version\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function useOptimistInviterVersion<\n  TFunctionName extends 'version',\n  TSelectData = ReadContractResult<typeof optimistInviterABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof optimistInviterABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistInviterAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractRead({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    functionName: 'version',\n    ...config,\n  } as UseContractReadConfig<typeof optimistInviterABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimistInviterABI}__.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function useOptimistInviterWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimistInviterAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimistInviterABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<\n        typeof optimistInviterABI,\n        TFunctionName,\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof optimistInviterABI, TFunctionName, TMode>({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimistInviterABI}__ and `functionName` set to `\"claimInvite\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function useOptimistInviterClaimInvite<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimistInviterAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimistInviterABI,\n          'claimInvite'\n        >['request']['abi'],\n        'claimInvite',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'claimInvite'\n      }\n    : UseContractWriteConfig<\n        typeof optimistInviterABI,\n        'claimInvite',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'claimInvite'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof optimistInviterABI, 'claimInvite', TMode>({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    functionName: 'claimInvite',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimistInviterABI}__ and `functionName` set to `\"commitInvite\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function useOptimistInviterCommitInvite<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimistInviterAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimistInviterABI,\n          'commitInvite'\n        >['request']['abi'],\n        'commitInvite',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'commitInvite'\n      }\n    : UseContractWriteConfig<\n        typeof optimistInviterABI,\n        'commitInvite',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'commitInvite'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof optimistInviterABI, 'commitInvite', TMode>({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    functionName: 'commitInvite',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimistInviterABI}__ and `functionName` set to `\"initialize\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function useOptimistInviterInitialize<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimistInviterAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimistInviterABI,\n          'initialize'\n        >['request']['abi'],\n        'initialize',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'initialize' }\n    : UseContractWriteConfig<typeof optimistInviterABI, 'initialize', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'initialize'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof optimistInviterABI, 'initialize', TMode>({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    functionName: 'initialize',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link optimistInviterABI}__ and `functionName` set to `\"setInviteCounts\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function useOptimistInviterSetInviteCounts<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof optimistInviterAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof optimistInviterABI,\n          'setInviteCounts'\n        >['request']['abi'],\n        'setInviteCounts',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'setInviteCounts'\n      }\n    : UseContractWriteConfig<\n        typeof optimistInviterABI,\n        'setInviteCounts',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'setInviteCounts'\n      } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractWrite<typeof optimistInviterABI, 'setInviteCounts', TMode>({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    functionName: 'setInviteCounts',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimistInviterABI}__.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function usePrepareOptimistInviterWrite<TFunctionName extends string>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof optimistInviterABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof optimistInviterAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimistInviterABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimistInviterABI}__ and `functionName` set to `\"claimInvite\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function usePrepareOptimistInviterClaimInvite(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof optimistInviterABI, 'claimInvite'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistInviterAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    functionName: 'claimInvite',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimistInviterABI, 'claimInvite'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimistInviterABI}__ and `functionName` set to `\"commitInvite\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function usePrepareOptimistInviterCommitInvite(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof optimistInviterABI, 'commitInvite'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistInviterAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    functionName: 'commitInvite',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimistInviterABI, 'commitInvite'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimistInviterABI}__ and `functionName` set to `\"initialize\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function usePrepareOptimistInviterInitialize(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof optimistInviterABI, 'initialize'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistInviterAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    functionName: 'initialize',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimistInviterABI, 'initialize'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link optimistInviterABI}__ and `functionName` set to `\"setInviteCounts\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function usePrepareOptimistInviterSetInviteCounts(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof optimistInviterABI, 'setInviteCounts'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof optimistInviterAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return usePrepareContractWrite({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    functionName: 'setInviteCounts',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof optimistInviterABI, 'setInviteCounts'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link optimistInviterABI}__.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function useOptimistInviterEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof optimistInviterABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof optimistInviterAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    ...config,\n  } as UseContractEventConfig<typeof optimistInviterABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link optimistInviterABI}__ and `eventName` set to `\"Initialized\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function useOptimistInviterInitializedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof optimistInviterABI, 'Initialized'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof optimistInviterAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    eventName: 'Initialized',\n    ...config,\n  } as UseContractEventConfig<typeof optimistInviterABI, 'Initialized'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link optimistInviterABI}__ and `eventName` set to `\"InviteClaimed\"`.\n *\n * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x073031A1E1b8F5458Ed41Ce56331F5fd7e1de929)\n */\nexport function useOptimistInviterInviteClaimedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof optimistInviterABI, 'InviteClaimed'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof optimistInviterAddress } = {} as any\n) {\n  const { chain } = useNetwork()\n  const chainId = config.chainId ?? chain?.id\n  return useContractEvent({\n    abi: optimistInviterABI,\n    address:\n      optimistInviterAddress[chainId as keyof typeof optimistInviterAddress],\n    eventName: 'InviteClaimed',\n    ...config,\n  } as UseContractEventConfig<typeof optimistInviterABI, 'InviteClaimed'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link baseFeeVaultABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000019)\n */\nexport function useBaseFeeVaultRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof baseFeeVaultABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof baseFeeVaultABI, TFunctionName, TSelectData>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof baseFeeVaultAddress } = {} as any\n) {\n  return useContractRead({\n    abi: baseFeeVaultABI,\n    address: baseFeeVaultAddress[420],\n    ...config,\n  } as UseContractReadConfig<typeof baseFeeVaultABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link baseFeeVaultABI}__ and `functionName` set to `\"MIN_WITHDRAWAL_AMOUNT\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000019)\n */\nexport function useBaseFeeVaultMinWithdrawalAmount<\n  TFunctionName extends 'MIN_WITHDRAWAL_AMOUNT',\n  TSelectData = ReadContractResult<typeof baseFeeVaultABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof baseFeeVaultABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof baseFeeVaultAddress } = {} as any\n) {\n  return useContractRead({\n    abi: baseFeeVaultABI,\n    address: baseFeeVaultAddress[420],\n    functionName: 'MIN_WITHDRAWAL_AMOUNT',\n    ...config,\n  } as UseContractReadConfig<typeof baseFeeVaultABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link baseFeeVaultABI}__ and `functionName` set to `\"RECIPIENT\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000019)\n */\nexport function useBaseFeeVaultRecipient<\n  TFunctionName extends 'RECIPIENT',\n  TSelectData = ReadContractResult<typeof baseFeeVaultABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof baseFeeVaultABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof baseFeeVaultAddress } = {} as any\n) {\n  return useContractRead({\n    abi: baseFeeVaultABI,\n    address: baseFeeVaultAddress[420],\n    functionName: 'RECIPIENT',\n    ...config,\n  } as UseContractReadConfig<typeof baseFeeVaultABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link baseFeeVaultABI}__ and `functionName` set to `\"totalProcessed\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000019)\n */\nexport function useBaseFeeVaultTotalProcessed<\n  TFunctionName extends 'totalProcessed',\n  TSelectData = ReadContractResult<typeof baseFeeVaultABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof baseFeeVaultABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof baseFeeVaultAddress } = {} as any\n) {\n  return useContractRead({\n    abi: baseFeeVaultABI,\n    address: baseFeeVaultAddress[420],\n    functionName: 'totalProcessed',\n    ...config,\n  } as UseContractReadConfig<typeof baseFeeVaultABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link baseFeeVaultABI}__ and `functionName` set to `\"version\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000019)\n */\nexport function useBaseFeeVaultVersion<\n  TFunctionName extends 'version',\n  TSelectData = ReadContractResult<typeof baseFeeVaultABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof baseFeeVaultABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof baseFeeVaultAddress } = {} as any\n) {\n  return useContractRead({\n    abi: baseFeeVaultABI,\n    address: baseFeeVaultAddress[420],\n    functionName: 'version',\n    ...config,\n  } as UseContractReadConfig<typeof baseFeeVaultABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link baseFeeVaultABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000019)\n */\nexport function useBaseFeeVaultWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof baseFeeVaultAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof baseFeeVaultABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<typeof baseFeeVaultABI, TFunctionName, TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  return useContractWrite<typeof baseFeeVaultABI, TFunctionName, TMode>({\n    abi: baseFeeVaultABI,\n    address: baseFeeVaultAddress[420],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link baseFeeVaultABI}__ and `functionName` set to `\"withdraw\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000019)\n */\nexport function useBaseFeeVaultWithdraw<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof baseFeeVaultAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof baseFeeVaultABI,\n          'withdraw'\n        >['request']['abi'],\n        'withdraw',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'withdraw' }\n    : UseContractWriteConfig<typeof baseFeeVaultABI, 'withdraw', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'withdraw'\n      } = {} as any\n) {\n  return useContractWrite<typeof baseFeeVaultABI, 'withdraw', TMode>({\n    abi: baseFeeVaultABI,\n    address: baseFeeVaultAddress[420],\n    functionName: 'withdraw',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link baseFeeVaultABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000019)\n */\nexport function usePrepareBaseFeeVaultWrite<TFunctionName extends string>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof baseFeeVaultABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof baseFeeVaultAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: baseFeeVaultABI,\n    address: baseFeeVaultAddress[420],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof baseFeeVaultABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link baseFeeVaultABI}__ and `functionName` set to `\"withdraw\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000019)\n */\nexport function usePrepareBaseFeeVaultWithdraw(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof baseFeeVaultABI, 'withdraw'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof baseFeeVaultAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: baseFeeVaultABI,\n    address: baseFeeVaultAddress[420],\n    functionName: 'withdraw',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof baseFeeVaultABI, 'withdraw'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link baseFeeVaultABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000019)\n */\nexport function useBaseFeeVaultEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof baseFeeVaultABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof baseFeeVaultAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: baseFeeVaultABI,\n    address: baseFeeVaultAddress[420],\n    ...config,\n  } as UseContractEventConfig<typeof baseFeeVaultABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link baseFeeVaultABI}__ and `eventName` set to `\"Withdrawal\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000019)\n */\nexport function useBaseFeeVaultWithdrawalEvent(\n  config: Omit<\n    UseContractEventConfig<typeof baseFeeVaultABI, 'Withdrawal'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof baseFeeVaultAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: baseFeeVaultABI,\n    address: baseFeeVaultAddress[420],\n    eventName: 'Withdrawal',\n    ...config,\n  } as UseContractEventConfig<typeof baseFeeVaultABI, 'Withdrawal'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link gasPriceOracleABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000000F)\n */\nexport function useGasPriceOracleRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof gasPriceOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof gasPriceOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof gasPriceOracleAddress } = {} as any\n) {\n  return useContractRead({\n    abi: gasPriceOracleABI,\n    address: gasPriceOracleAddress[420],\n    ...config,\n  } as UseContractReadConfig<typeof gasPriceOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link gasPriceOracleABI}__ and `functionName` set to `\"baseFee\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000000F)\n */\nexport function useGasPriceOracleBaseFee<\n  TFunctionName extends 'baseFee',\n  TSelectData = ReadContractResult<typeof gasPriceOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof gasPriceOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof gasPriceOracleAddress } = {} as any\n) {\n  return useContractRead({\n    abi: gasPriceOracleABI,\n    address: gasPriceOracleAddress[420],\n    functionName: 'baseFee',\n    ...config,\n  } as UseContractReadConfig<typeof gasPriceOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link gasPriceOracleABI}__ and `functionName` set to `\"decimals\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000000F)\n */\nexport function useGasPriceOracleDecimals<\n  TFunctionName extends 'decimals',\n  TSelectData = ReadContractResult<typeof gasPriceOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof gasPriceOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof gasPriceOracleAddress } = {} as any\n) {\n  return useContractRead({\n    abi: gasPriceOracleABI,\n    address: gasPriceOracleAddress[420],\n    functionName: 'decimals',\n    ...config,\n  } as UseContractReadConfig<typeof gasPriceOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link gasPriceOracleABI}__ and `functionName` set to `\"gasPrice\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000000F)\n */\nexport function useGasPriceOracleGasPrice<\n  TFunctionName extends 'gasPrice',\n  TSelectData = ReadContractResult<typeof gasPriceOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof gasPriceOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof gasPriceOracleAddress } = {} as any\n) {\n  return useContractRead({\n    abi: gasPriceOracleABI,\n    address: gasPriceOracleAddress[420],\n    functionName: 'gasPrice',\n    ...config,\n  } as UseContractReadConfig<typeof gasPriceOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link gasPriceOracleABI}__ and `functionName` set to `\"getL1Fee\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000000F)\n */\nexport function useGasPriceOracleGetL1Fee<\n  TFunctionName extends 'getL1Fee',\n  TSelectData = ReadContractResult<typeof gasPriceOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof gasPriceOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof gasPriceOracleAddress } = {} as any\n) {\n  return useContractRead({\n    abi: gasPriceOracleABI,\n    address: gasPriceOracleAddress[420],\n    functionName: 'getL1Fee',\n    ...config,\n  } as UseContractReadConfig<typeof gasPriceOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link gasPriceOracleABI}__ and `functionName` set to `\"getL1GasUsed\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000000F)\n */\nexport function useGasPriceOracleGetL1GasUsed<\n  TFunctionName extends 'getL1GasUsed',\n  TSelectData = ReadContractResult<typeof gasPriceOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof gasPriceOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof gasPriceOracleAddress } = {} as any\n) {\n  return useContractRead({\n    abi: gasPriceOracleABI,\n    address: gasPriceOracleAddress[420],\n    functionName: 'getL1GasUsed',\n    ...config,\n  } as UseContractReadConfig<typeof gasPriceOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link gasPriceOracleABI}__ and `functionName` set to `\"l1BaseFee\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000000F)\n */\nexport function useGasPriceOracleL1BaseFee<\n  TFunctionName extends 'l1BaseFee',\n  TSelectData = ReadContractResult<typeof gasPriceOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof gasPriceOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof gasPriceOracleAddress } = {} as any\n) {\n  return useContractRead({\n    abi: gasPriceOracleABI,\n    address: gasPriceOracleAddress[420],\n    functionName: 'l1BaseFee',\n    ...config,\n  } as UseContractReadConfig<typeof gasPriceOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link gasPriceOracleABI}__ and `functionName` set to `\"overhead\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000000F)\n */\nexport function useGasPriceOracleOverhead<\n  TFunctionName extends 'overhead',\n  TSelectData = ReadContractResult<typeof gasPriceOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof gasPriceOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof gasPriceOracleAddress } = {} as any\n) {\n  return useContractRead({\n    abi: gasPriceOracleABI,\n    address: gasPriceOracleAddress[420],\n    functionName: 'overhead',\n    ...config,\n  } as UseContractReadConfig<typeof gasPriceOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link gasPriceOracleABI}__ and `functionName` set to `\"scalar\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000000F)\n */\nexport function useGasPriceOracleScalar<\n  TFunctionName extends 'scalar',\n  TSelectData = ReadContractResult<typeof gasPriceOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof gasPriceOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof gasPriceOracleAddress } = {} as any\n) {\n  return useContractRead({\n    abi: gasPriceOracleABI,\n    address: gasPriceOracleAddress[420],\n    functionName: 'scalar',\n    ...config,\n  } as UseContractReadConfig<typeof gasPriceOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link gasPriceOracleABI}__ and `functionName` set to `\"version\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000000F)\n */\nexport function useGasPriceOracleVersion<\n  TFunctionName extends 'version',\n  TSelectData = ReadContractResult<typeof gasPriceOracleABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof gasPriceOracleABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof gasPriceOracleAddress } = {} as any\n) {\n  return useContractRead({\n    abi: gasPriceOracleABI,\n    address: gasPriceOracleAddress[420],\n    functionName: 'version',\n    ...config,\n  } as UseContractReadConfig<typeof gasPriceOracleABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1BlockABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000015)\n */\nexport function useL1BlockRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof l1BlockABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l1BlockABI, TFunctionName, TSelectData>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l1BlockAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l1BlockABI,\n    address: l1BlockAddress[420],\n    ...config,\n  } as UseContractReadConfig<typeof l1BlockABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1BlockABI}__ and `functionName` set to `\"DEPOSITOR_ACCOUNT\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000015)\n */\nexport function useL1BlockDepositorAccount<\n  TFunctionName extends 'DEPOSITOR_ACCOUNT',\n  TSelectData = ReadContractResult<typeof l1BlockABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l1BlockABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1BlockAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l1BlockABI,\n    address: l1BlockAddress[420],\n    functionName: 'DEPOSITOR_ACCOUNT',\n    ...config,\n  } as UseContractReadConfig<typeof l1BlockABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1BlockABI}__ and `functionName` set to `\"basefee\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000015)\n */\nexport function useL1BlockBasefee<\n  TFunctionName extends 'basefee',\n  TSelectData = ReadContractResult<typeof l1BlockABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l1BlockABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1BlockAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l1BlockABI,\n    address: l1BlockAddress[420],\n    functionName: 'basefee',\n    ...config,\n  } as UseContractReadConfig<typeof l1BlockABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1BlockABI}__ and `functionName` set to `\"batcherHash\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000015)\n */\nexport function useL1BlockBatcherHash<\n  TFunctionName extends 'batcherHash',\n  TSelectData = ReadContractResult<typeof l1BlockABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l1BlockABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1BlockAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l1BlockABI,\n    address: l1BlockAddress[420],\n    functionName: 'batcherHash',\n    ...config,\n  } as UseContractReadConfig<typeof l1BlockABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1BlockABI}__ and `functionName` set to `\"hash\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000015)\n */\nexport function useL1BlockHash<\n  TFunctionName extends 'hash',\n  TSelectData = ReadContractResult<typeof l1BlockABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l1BlockABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1BlockAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l1BlockABI,\n    address: l1BlockAddress[420],\n    functionName: 'hash',\n    ...config,\n  } as UseContractReadConfig<typeof l1BlockABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1BlockABI}__ and `functionName` set to `\"l1FeeOverhead\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000015)\n */\nexport function useL1BlockL1FeeOverhead<\n  TFunctionName extends 'l1FeeOverhead',\n  TSelectData = ReadContractResult<typeof l1BlockABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l1BlockABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1BlockAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l1BlockABI,\n    address: l1BlockAddress[420],\n    functionName: 'l1FeeOverhead',\n    ...config,\n  } as UseContractReadConfig<typeof l1BlockABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1BlockABI}__ and `functionName` set to `\"l1FeeScalar\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000015)\n */\nexport function useL1BlockL1FeeScalar<\n  TFunctionName extends 'l1FeeScalar',\n  TSelectData = ReadContractResult<typeof l1BlockABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l1BlockABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1BlockAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l1BlockABI,\n    address: l1BlockAddress[420],\n    functionName: 'l1FeeScalar',\n    ...config,\n  } as UseContractReadConfig<typeof l1BlockABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1BlockABI}__ and `functionName` set to `\"number\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000015)\n */\nexport function useL1BlockNumber<\n  TFunctionName extends 'number',\n  TSelectData = ReadContractResult<typeof l1BlockABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l1BlockABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1BlockAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l1BlockABI,\n    address: l1BlockAddress[420],\n    functionName: 'number',\n    ...config,\n  } as UseContractReadConfig<typeof l1BlockABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1BlockABI}__ and `functionName` set to `\"sequenceNumber\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000015)\n */\nexport function useL1BlockSequenceNumber<\n  TFunctionName extends 'sequenceNumber',\n  TSelectData = ReadContractResult<typeof l1BlockABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l1BlockABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1BlockAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l1BlockABI,\n    address: l1BlockAddress[420],\n    functionName: 'sequenceNumber',\n    ...config,\n  } as UseContractReadConfig<typeof l1BlockABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1BlockABI}__ and `functionName` set to `\"timestamp\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000015)\n */\nexport function useL1BlockTimestamp<\n  TFunctionName extends 'timestamp',\n  TSelectData = ReadContractResult<typeof l1BlockABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l1BlockABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1BlockAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l1BlockABI,\n    address: l1BlockAddress[420],\n    functionName: 'timestamp',\n    ...config,\n  } as UseContractReadConfig<typeof l1BlockABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1BlockABI}__ and `functionName` set to `\"version\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000015)\n */\nexport function useL1BlockVersion<\n  TFunctionName extends 'version',\n  TSelectData = ReadContractResult<typeof l1BlockABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l1BlockABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1BlockAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l1BlockABI,\n    address: l1BlockAddress[420],\n    functionName: 'version',\n    ...config,\n  } as UseContractReadConfig<typeof l1BlockABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1BlockABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000015)\n */\nexport function useL1BlockWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1BlockAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<typeof l1BlockABI, string>['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<typeof l1BlockABI, TFunctionName, TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  return useContractWrite<typeof l1BlockABI, TFunctionName, TMode>({\n    abi: l1BlockABI,\n    address: l1BlockAddress[420],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1BlockABI}__ and `functionName` set to `\"setL1BlockValues\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000015)\n */\nexport function useL1BlockSetL1BlockValues<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1BlockAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1BlockABI,\n          'setL1BlockValues'\n        >['request']['abi'],\n        'setL1BlockValues',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'setL1BlockValues'\n      }\n    : UseContractWriteConfig<typeof l1BlockABI, 'setL1BlockValues', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'setL1BlockValues'\n      } = {} as any\n) {\n  return useContractWrite<typeof l1BlockABI, 'setL1BlockValues', TMode>({\n    abi: l1BlockABI,\n    address: l1BlockAddress[420],\n    functionName: 'setL1BlockValues',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1BlockABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000015)\n */\nexport function usePrepareL1BlockWrite<TFunctionName extends string>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l1BlockABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l1BlockAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: l1BlockABI,\n    address: l1BlockAddress[420],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1BlockABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1BlockABI}__ and `functionName` set to `\"setL1BlockValues\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000015)\n */\nexport function usePrepareL1BlockSetL1BlockValues(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l1BlockABI, 'setL1BlockValues'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1BlockAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: l1BlockABI,\n    address: l1BlockAddress[420],\n    functionName: 'setL1BlockValues',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1BlockABI, 'setL1BlockValues'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1FeeVaultABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000001a)\n */\nexport function useL1FeeVaultRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof l1FeeVaultABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l1FeeVaultABI, TFunctionName, TSelectData>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l1FeeVaultAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l1FeeVaultABI,\n    address: l1FeeVaultAddress[420],\n    ...config,\n  } as UseContractReadConfig<typeof l1FeeVaultABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1FeeVaultABI}__ and `functionName` set to `\"MIN_WITHDRAWAL_AMOUNT\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000001a)\n */\nexport function useL1FeeVaultMinWithdrawalAmount<\n  TFunctionName extends 'MIN_WITHDRAWAL_AMOUNT',\n  TSelectData = ReadContractResult<typeof l1FeeVaultABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l1FeeVaultABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1FeeVaultAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l1FeeVaultABI,\n    address: l1FeeVaultAddress[420],\n    functionName: 'MIN_WITHDRAWAL_AMOUNT',\n    ...config,\n  } as UseContractReadConfig<typeof l1FeeVaultABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1FeeVaultABI}__ and `functionName` set to `\"RECIPIENT\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000001a)\n */\nexport function useL1FeeVaultRecipient<\n  TFunctionName extends 'RECIPIENT',\n  TSelectData = ReadContractResult<typeof l1FeeVaultABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l1FeeVaultABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1FeeVaultAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l1FeeVaultABI,\n    address: l1FeeVaultAddress[420],\n    functionName: 'RECIPIENT',\n    ...config,\n  } as UseContractReadConfig<typeof l1FeeVaultABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1FeeVaultABI}__ and `functionName` set to `\"totalProcessed\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000001a)\n */\nexport function useL1FeeVaultTotalProcessed<\n  TFunctionName extends 'totalProcessed',\n  TSelectData = ReadContractResult<typeof l1FeeVaultABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l1FeeVaultABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1FeeVaultAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l1FeeVaultABI,\n    address: l1FeeVaultAddress[420],\n    functionName: 'totalProcessed',\n    ...config,\n  } as UseContractReadConfig<typeof l1FeeVaultABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l1FeeVaultABI}__ and `functionName` set to `\"version\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000001a)\n */\nexport function useL1FeeVaultVersion<\n  TFunctionName extends 'version',\n  TSelectData = ReadContractResult<typeof l1FeeVaultABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<typeof l1FeeVaultABI, TFunctionName, TSelectData>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1FeeVaultAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l1FeeVaultABI,\n    address: l1FeeVaultAddress[420],\n    functionName: 'version',\n    ...config,\n  } as UseContractReadConfig<typeof l1FeeVaultABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1FeeVaultABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000001a)\n */\nexport function useL1FeeVaultWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1FeeVaultAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1FeeVaultABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<typeof l1FeeVaultABI, TFunctionName, TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  return useContractWrite<typeof l1FeeVaultABI, TFunctionName, TMode>({\n    abi: l1FeeVaultABI,\n    address: l1FeeVaultAddress[420],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l1FeeVaultABI}__ and `functionName` set to `\"withdraw\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000001a)\n */\nexport function useL1FeeVaultWithdraw<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l1FeeVaultAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l1FeeVaultABI,\n          'withdraw'\n        >['request']['abi'],\n        'withdraw',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'withdraw' }\n    : UseContractWriteConfig<typeof l1FeeVaultABI, 'withdraw', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'withdraw'\n      } = {} as any\n) {\n  return useContractWrite<typeof l1FeeVaultABI, 'withdraw', TMode>({\n    abi: l1FeeVaultABI,\n    address: l1FeeVaultAddress[420],\n    functionName: 'withdraw',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1FeeVaultABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000001a)\n */\nexport function usePrepareL1FeeVaultWrite<TFunctionName extends string>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l1FeeVaultABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l1FeeVaultAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: l1FeeVaultABI,\n    address: l1FeeVaultAddress[420],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1FeeVaultABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l1FeeVaultABI}__ and `functionName` set to `\"withdraw\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000001a)\n */\nexport function usePrepareL1FeeVaultWithdraw(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l1FeeVaultABI, 'withdraw'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l1FeeVaultAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: l1FeeVaultABI,\n    address: l1FeeVaultAddress[420],\n    functionName: 'withdraw',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l1FeeVaultABI, 'withdraw'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l1FeeVaultABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000001a)\n */\nexport function useL1FeeVaultEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof l1FeeVaultABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l1FeeVaultAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: l1FeeVaultABI,\n    address: l1FeeVaultAddress[420],\n    ...config,\n  } as UseContractEventConfig<typeof l1FeeVaultABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l1FeeVaultABI}__ and `eventName` set to `\"Withdrawal\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x420000000000000000000000000000000000001a)\n */\nexport function useL1FeeVaultWithdrawalEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l1FeeVaultABI, 'Withdrawal'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l1FeeVaultAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: l1FeeVaultABI,\n    address: l1FeeVaultAddress[420],\n    eventName: 'Withdrawal',\n    ...config,\n  } as UseContractEventConfig<typeof l1FeeVaultABI, 'Withdrawal'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<\n    typeof l2CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    ...config,\n  } as UseContractReadConfig<typeof l2CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `functionName` set to `\"MESSAGE_VERSION\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerMessageVersion<\n  TFunctionName extends 'MESSAGE_VERSION',\n  TSelectData = ReadContractResult<\n    typeof l2CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    functionName: 'MESSAGE_VERSION',\n    ...config,\n  } as UseContractReadConfig<typeof l2CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `functionName` set to `\"MIN_GAS_CALLDATA_OVERHEAD\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerMinGasCalldataOverhead<\n  TFunctionName extends 'MIN_GAS_CALLDATA_OVERHEAD',\n  TSelectData = ReadContractResult<\n    typeof l2CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    functionName: 'MIN_GAS_CALLDATA_OVERHEAD',\n    ...config,\n  } as UseContractReadConfig<typeof l2CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `functionName` set to `\"MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerMinGasDynamicOverheadDenominator<\n  TFunctionName extends 'MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR',\n  TSelectData = ReadContractResult<\n    typeof l2CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    functionName: 'MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR',\n    ...config,\n  } as UseContractReadConfig<typeof l2CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `functionName` set to `\"MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerMinGasDynamicOverheadNumerator<\n  TFunctionName extends 'MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR',\n  TSelectData = ReadContractResult<\n    typeof l2CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    functionName: 'MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR',\n    ...config,\n  } as UseContractReadConfig<typeof l2CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `functionName` set to `\"OTHER_MESSENGER\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerOtherMessenger<\n  TFunctionName extends 'OTHER_MESSENGER',\n  TSelectData = ReadContractResult<\n    typeof l2CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    functionName: 'OTHER_MESSENGER',\n    ...config,\n  } as UseContractReadConfig<typeof l2CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `functionName` set to `\"RELAY_CALL_OVERHEAD\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerRelayCallOverhead<\n  TFunctionName extends 'RELAY_CALL_OVERHEAD',\n  TSelectData = ReadContractResult<\n    typeof l2CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    functionName: 'RELAY_CALL_OVERHEAD',\n    ...config,\n  } as UseContractReadConfig<typeof l2CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `functionName` set to `\"RELAY_CONSTANT_OVERHEAD\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerRelayConstantOverhead<\n  TFunctionName extends 'RELAY_CONSTANT_OVERHEAD',\n  TSelectData = ReadContractResult<\n    typeof l2CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    functionName: 'RELAY_CONSTANT_OVERHEAD',\n    ...config,\n  } as UseContractReadConfig<typeof l2CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `functionName` set to `\"RELAY_GAS_CHECK_BUFFER\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerRelayGasCheckBuffer<\n  TFunctionName extends 'RELAY_GAS_CHECK_BUFFER',\n  TSelectData = ReadContractResult<\n    typeof l2CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    functionName: 'RELAY_GAS_CHECK_BUFFER',\n    ...config,\n  } as UseContractReadConfig<typeof l2CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `functionName` set to `\"RELAY_RESERVED_GAS\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerRelayReservedGas<\n  TFunctionName extends 'RELAY_RESERVED_GAS',\n  TSelectData = ReadContractResult<\n    typeof l2CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    functionName: 'RELAY_RESERVED_GAS',\n    ...config,\n  } as UseContractReadConfig<typeof l2CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `functionName` set to `\"baseGas\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerBaseGas<\n  TFunctionName extends 'baseGas',\n  TSelectData = ReadContractResult<\n    typeof l2CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    functionName: 'baseGas',\n    ...config,\n  } as UseContractReadConfig<typeof l2CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `functionName` set to `\"failedMessages\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerFailedMessages<\n  TFunctionName extends 'failedMessages',\n  TSelectData = ReadContractResult<\n    typeof l2CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    functionName: 'failedMessages',\n    ...config,\n  } as UseContractReadConfig<typeof l2CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `functionName` set to `\"l1CrossDomainMessenger\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerL1CrossDomainMessenger<\n  TFunctionName extends 'l1CrossDomainMessenger',\n  TSelectData = ReadContractResult<\n    typeof l2CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    functionName: 'l1CrossDomainMessenger',\n    ...config,\n  } as UseContractReadConfig<typeof l2CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `functionName` set to `\"messageNonce\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerMessageNonce<\n  TFunctionName extends 'messageNonce',\n  TSelectData = ReadContractResult<\n    typeof l2CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    functionName: 'messageNonce',\n    ...config,\n  } as UseContractReadConfig<typeof l2CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `functionName` set to `\"successfulMessages\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerSuccessfulMessages<\n  TFunctionName extends 'successfulMessages',\n  TSelectData = ReadContractResult<\n    typeof l2CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    functionName: 'successfulMessages',\n    ...config,\n  } as UseContractReadConfig<typeof l2CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `functionName` set to `\"version\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerVersion<\n  TFunctionName extends 'version',\n  TSelectData = ReadContractResult<\n    typeof l2CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    functionName: 'version',\n    ...config,\n  } as UseContractReadConfig<typeof l2CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `functionName` set to `\"xDomainMessageSender\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerXDomainMessageSender<\n  TFunctionName extends 'xDomainMessageSender',\n  TSelectData = ReadContractResult<\n    typeof l2CrossDomainMessengerABI,\n    TFunctionName\n  >\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2CrossDomainMessengerABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    functionName: 'xDomainMessageSender',\n    ...config,\n  } as UseContractReadConfig<typeof l2CrossDomainMessengerABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2CrossDomainMessengerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2CrossDomainMessengerABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<\n        typeof l2CrossDomainMessengerABI,\n        TFunctionName,\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof l2CrossDomainMessengerABI,\n    TFunctionName,\n    TMode\n  >({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `functionName` set to `\"initialize\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerInitialize<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2CrossDomainMessengerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2CrossDomainMessengerABI,\n          'initialize'\n        >['request']['abi'],\n        'initialize',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'initialize' }\n    : UseContractWriteConfig<\n        typeof l2CrossDomainMessengerABI,\n        'initialize',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'initialize'\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof l2CrossDomainMessengerABI,\n    'initialize',\n    TMode\n  >({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    functionName: 'initialize',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `functionName` set to `\"relayMessage\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerRelayMessage<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2CrossDomainMessengerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2CrossDomainMessengerABI,\n          'relayMessage'\n        >['request']['abi'],\n        'relayMessage',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'relayMessage'\n      }\n    : UseContractWriteConfig<\n        typeof l2CrossDomainMessengerABI,\n        'relayMessage',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'relayMessage'\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof l2CrossDomainMessengerABI,\n    'relayMessage',\n    TMode\n  >({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    functionName: 'relayMessage',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `functionName` set to `\"sendMessage\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerSendMessage<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2CrossDomainMessengerAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2CrossDomainMessengerABI,\n          'sendMessage'\n        >['request']['abi'],\n        'sendMessage',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'sendMessage'\n      }\n    : UseContractWriteConfig<\n        typeof l2CrossDomainMessengerABI,\n        'sendMessage',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'sendMessage'\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof l2CrossDomainMessengerABI,\n    'sendMessage',\n    TMode\n  >({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    functionName: 'sendMessage',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function usePrepareL2CrossDomainMessengerWrite<\n  TFunctionName extends string\n>(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof l2CrossDomainMessengerABI,\n      TFunctionName\n    >,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2CrossDomainMessengerABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `functionName` set to `\"initialize\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function usePrepareL2CrossDomainMessengerInitialize(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof l2CrossDomainMessengerABI,\n      'initialize'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    functionName: 'initialize',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2CrossDomainMessengerABI, 'initialize'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `functionName` set to `\"relayMessage\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function usePrepareL2CrossDomainMessengerRelayMessage(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof l2CrossDomainMessengerABI,\n      'relayMessage'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    functionName: 'relayMessage',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2CrossDomainMessengerABI, 'relayMessage'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `functionName` set to `\"sendMessage\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function usePrepareL2CrossDomainMessengerSendMessage(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof l2CrossDomainMessengerABI,\n      'sendMessage'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    functionName: 'sendMessage',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2CrossDomainMessengerABI, 'sendMessage'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof l2CrossDomainMessengerABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    ...config,\n  } as UseContractEventConfig<typeof l2CrossDomainMessengerABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `eventName` set to `\"FailedRelayedMessage\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerFailedRelayedMessageEvent(\n  config: Omit<\n    UseContractEventConfig<\n      typeof l2CrossDomainMessengerABI,\n      'FailedRelayedMessage'\n    >,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    eventName: 'FailedRelayedMessage',\n    ...config,\n  } as UseContractEventConfig<typeof l2CrossDomainMessengerABI, 'FailedRelayedMessage'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `eventName` set to `\"Initialized\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerInitializedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l2CrossDomainMessengerABI, 'Initialized'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    eventName: 'Initialized',\n    ...config,\n  } as UseContractEventConfig<typeof l2CrossDomainMessengerABI, 'Initialized'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `eventName` set to `\"RelayedMessage\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerRelayedMessageEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l2CrossDomainMessengerABI, 'RelayedMessage'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    eventName: 'RelayedMessage',\n    ...config,\n  } as UseContractEventConfig<typeof l2CrossDomainMessengerABI, 'RelayedMessage'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `eventName` set to `\"SentMessage\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerSentMessageEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l2CrossDomainMessengerABI, 'SentMessage'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    eventName: 'SentMessage',\n    ...config,\n  } as UseContractEventConfig<typeof l2CrossDomainMessengerABI, 'SentMessage'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2CrossDomainMessengerABI}__ and `eventName` set to `\"SentMessageExtension1\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000007)\n */\nexport function useL2CrossDomainMessengerSentMessageExtension1Event(\n  config: Omit<\n    UseContractEventConfig<\n      typeof l2CrossDomainMessengerABI,\n      'SentMessageExtension1'\n    >,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l2CrossDomainMessengerAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: l2CrossDomainMessengerABI,\n    address: l2CrossDomainMessengerAddress[420],\n    eventName: 'SentMessageExtension1',\n    ...config,\n  } as UseContractEventConfig<typeof l2CrossDomainMessengerABI, 'SentMessageExtension1'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2StandardBridgeABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function useL2StandardBridgeRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof l2StandardBridgeABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2StandardBridgeABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l2StandardBridgeAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    ...config,\n  } as UseContractReadConfig<typeof l2StandardBridgeABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `functionName` set to `\"deposits\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function useL2StandardBridgeDeposits<\n  TFunctionName extends 'deposits',\n  TSelectData = ReadContractResult<typeof l2StandardBridgeABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2StandardBridgeABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2StandardBridgeAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    functionName: 'deposits',\n    ...config,\n  } as UseContractReadConfig<typeof l2StandardBridgeABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `functionName` set to `\"l1TokenBridge\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function useL2StandardBridgeL1TokenBridge<\n  TFunctionName extends 'l1TokenBridge',\n  TSelectData = ReadContractResult<typeof l2StandardBridgeABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2StandardBridgeABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2StandardBridgeAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    functionName: 'l1TokenBridge',\n    ...config,\n  } as UseContractReadConfig<typeof l2StandardBridgeABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `functionName` set to `\"messenger\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function useL2StandardBridgeMessenger<\n  TFunctionName extends 'messenger',\n  TSelectData = ReadContractResult<typeof l2StandardBridgeABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2StandardBridgeABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2StandardBridgeAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    functionName: 'messenger',\n    ...config,\n  } as UseContractReadConfig<typeof l2StandardBridgeABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `functionName` set to `\"version\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function useL2StandardBridgeVersion<\n  TFunctionName extends 'version',\n  TSelectData = ReadContractResult<typeof l2StandardBridgeABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2StandardBridgeABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2StandardBridgeAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    functionName: 'version',\n    ...config,\n  } as UseContractReadConfig<typeof l2StandardBridgeABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2StandardBridgeABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function useL2StandardBridgeWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2StandardBridgeABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<\n        typeof l2StandardBridgeABI,\n        TFunctionName,\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  return useContractWrite<typeof l2StandardBridgeABI, TFunctionName, TMode>({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `functionName` set to `\"bridgeERC20\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function useL2StandardBridgeBridgeErc20<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2StandardBridgeABI,\n          'bridgeERC20'\n        >['request']['abi'],\n        'bridgeERC20',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'bridgeERC20'\n      }\n    : UseContractWriteConfig<\n        typeof l2StandardBridgeABI,\n        'bridgeERC20',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'bridgeERC20'\n      } = {} as any\n) {\n  return useContractWrite<typeof l2StandardBridgeABI, 'bridgeERC20', TMode>({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    functionName: 'bridgeERC20',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `functionName` set to `\"bridgeERC20To\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function useL2StandardBridgeBridgeErc20To<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2StandardBridgeABI,\n          'bridgeERC20To'\n        >['request']['abi'],\n        'bridgeERC20To',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'bridgeERC20To'\n      }\n    : UseContractWriteConfig<\n        typeof l2StandardBridgeABI,\n        'bridgeERC20To',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'bridgeERC20To'\n      } = {} as any\n) {\n  return useContractWrite<typeof l2StandardBridgeABI, 'bridgeERC20To', TMode>({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    functionName: 'bridgeERC20To',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `functionName` set to `\"bridgeETH\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function useL2StandardBridgeBridgeEth<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2StandardBridgeABI,\n          'bridgeETH'\n        >['request']['abi'],\n        'bridgeETH',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'bridgeETH' }\n    : UseContractWriteConfig<typeof l2StandardBridgeABI, 'bridgeETH', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'bridgeETH'\n      } = {} as any\n) {\n  return useContractWrite<typeof l2StandardBridgeABI, 'bridgeETH', TMode>({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    functionName: 'bridgeETH',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `functionName` set to `\"bridgeETHTo\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function useL2StandardBridgeBridgeEthTo<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2StandardBridgeABI,\n          'bridgeETHTo'\n        >['request']['abi'],\n        'bridgeETHTo',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'bridgeETHTo'\n      }\n    : UseContractWriteConfig<\n        typeof l2StandardBridgeABI,\n        'bridgeETHTo',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'bridgeETHTo'\n      } = {} as any\n) {\n  return useContractWrite<typeof l2StandardBridgeABI, 'bridgeETHTo', TMode>({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    functionName: 'bridgeETHTo',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `functionName` set to `\"finalizeBridgeERC20\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function useL2StandardBridgeFinalizeBridgeErc20<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2StandardBridgeABI,\n          'finalizeBridgeERC20'\n        >['request']['abi'],\n        'finalizeBridgeERC20',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'finalizeBridgeERC20'\n      }\n    : UseContractWriteConfig<\n        typeof l2StandardBridgeABI,\n        'finalizeBridgeERC20',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'finalizeBridgeERC20'\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof l2StandardBridgeABI,\n    'finalizeBridgeERC20',\n    TMode\n  >({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    functionName: 'finalizeBridgeERC20',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `functionName` set to `\"finalizeBridgeETH\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function useL2StandardBridgeFinalizeBridgeEth<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2StandardBridgeABI,\n          'finalizeBridgeETH'\n        >['request']['abi'],\n        'finalizeBridgeETH',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'finalizeBridgeETH'\n      }\n    : UseContractWriteConfig<\n        typeof l2StandardBridgeABI,\n        'finalizeBridgeETH',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'finalizeBridgeETH'\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof l2StandardBridgeABI,\n    'finalizeBridgeETH',\n    TMode\n  >({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    functionName: 'finalizeBridgeETH',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `functionName` set to `\"finalizeDeposit\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function useL2StandardBridgeFinalizeDeposit<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2StandardBridgeABI,\n          'finalizeDeposit'\n        >['request']['abi'],\n        'finalizeDeposit',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'finalizeDeposit'\n      }\n    : UseContractWriteConfig<\n        typeof l2StandardBridgeABI,\n        'finalizeDeposit',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'finalizeDeposit'\n      } = {} as any\n) {\n  return useContractWrite<typeof l2StandardBridgeABI, 'finalizeDeposit', TMode>(\n    {\n      abi: l2StandardBridgeABI,\n      address: l2StandardBridgeAddress[420],\n      functionName: 'finalizeDeposit',\n      ...config,\n    } as any\n  )\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `functionName` set to `\"withdraw\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function useL2StandardBridgeWithdraw<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2StandardBridgeABI,\n          'withdraw'\n        >['request']['abi'],\n        'withdraw',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'withdraw' }\n    : UseContractWriteConfig<typeof l2StandardBridgeABI, 'withdraw', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'withdraw'\n      } = {} as any\n) {\n  return useContractWrite<typeof l2StandardBridgeABI, 'withdraw', TMode>({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    functionName: 'withdraw',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `functionName` set to `\"withdrawTo\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function useL2StandardBridgeWithdrawTo<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2StandardBridgeAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2StandardBridgeABI,\n          'withdrawTo'\n        >['request']['abi'],\n        'withdrawTo',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'withdrawTo' }\n    : UseContractWriteConfig<\n        typeof l2StandardBridgeABI,\n        'withdrawTo',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'withdrawTo'\n      } = {} as any\n) {\n  return useContractWrite<typeof l2StandardBridgeABI, 'withdrawTo', TMode>({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    functionName: 'withdrawTo',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2StandardBridgeABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function usePrepareL2StandardBridgeWrite<TFunctionName extends string>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l2StandardBridgeABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l2StandardBridgeAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2StandardBridgeABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `functionName` set to `\"bridgeERC20\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function usePrepareL2StandardBridgeBridgeErc20(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l2StandardBridgeABI, 'bridgeERC20'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2StandardBridgeAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    functionName: 'bridgeERC20',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2StandardBridgeABI, 'bridgeERC20'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `functionName` set to `\"bridgeERC20To\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function usePrepareL2StandardBridgeBridgeErc20To(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l2StandardBridgeABI, 'bridgeERC20To'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2StandardBridgeAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    functionName: 'bridgeERC20To',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2StandardBridgeABI, 'bridgeERC20To'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `functionName` set to `\"bridgeETH\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function usePrepareL2StandardBridgeBridgeEth(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l2StandardBridgeABI, 'bridgeETH'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2StandardBridgeAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    functionName: 'bridgeETH',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2StandardBridgeABI, 'bridgeETH'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `functionName` set to `\"bridgeETHTo\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function usePrepareL2StandardBridgeBridgeEthTo(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l2StandardBridgeABI, 'bridgeETHTo'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2StandardBridgeAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    functionName: 'bridgeETHTo',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2StandardBridgeABI, 'bridgeETHTo'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `functionName` set to `\"finalizeBridgeERC20\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function usePrepareL2StandardBridgeFinalizeBridgeErc20(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof l2StandardBridgeABI,\n      'finalizeBridgeERC20'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2StandardBridgeAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    functionName: 'finalizeBridgeERC20',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2StandardBridgeABI, 'finalizeBridgeERC20'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `functionName` set to `\"finalizeBridgeETH\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function usePrepareL2StandardBridgeFinalizeBridgeEth(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof l2StandardBridgeABI,\n      'finalizeBridgeETH'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2StandardBridgeAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    functionName: 'finalizeBridgeETH',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2StandardBridgeABI, 'finalizeBridgeETH'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `functionName` set to `\"finalizeDeposit\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function usePrepareL2StandardBridgeFinalizeDeposit(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof l2StandardBridgeABI,\n      'finalizeDeposit'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2StandardBridgeAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    functionName: 'finalizeDeposit',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2StandardBridgeABI, 'finalizeDeposit'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `functionName` set to `\"withdraw\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function usePrepareL2StandardBridgeWithdraw(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l2StandardBridgeABI, 'withdraw'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2StandardBridgeAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    functionName: 'withdraw',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2StandardBridgeABI, 'withdraw'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `functionName` set to `\"withdrawTo\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function usePrepareL2StandardBridgeWithdrawTo(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l2StandardBridgeABI, 'withdrawTo'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2StandardBridgeAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    functionName: 'withdrawTo',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2StandardBridgeABI, 'withdrawTo'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2StandardBridgeABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function useL2StandardBridgeEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof l2StandardBridgeABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l2StandardBridgeAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    ...config,\n  } as UseContractEventConfig<typeof l2StandardBridgeABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `eventName` set to `\"DepositFinalized\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function useL2StandardBridgeDepositFinalizedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l2StandardBridgeABI, 'DepositFinalized'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l2StandardBridgeAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    eventName: 'DepositFinalized',\n    ...config,\n  } as UseContractEventConfig<typeof l2StandardBridgeABI, 'DepositFinalized'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `eventName` set to `\"ERC20BridgeFinalized\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function useL2StandardBridgeErc20BridgeFinalizedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l2StandardBridgeABI, 'ERC20BridgeFinalized'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l2StandardBridgeAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    eventName: 'ERC20BridgeFinalized',\n    ...config,\n  } as UseContractEventConfig<typeof l2StandardBridgeABI, 'ERC20BridgeFinalized'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `eventName` set to `\"ERC20BridgeInitiated\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function useL2StandardBridgeErc20BridgeInitiatedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l2StandardBridgeABI, 'ERC20BridgeInitiated'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l2StandardBridgeAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    eventName: 'ERC20BridgeInitiated',\n    ...config,\n  } as UseContractEventConfig<typeof l2StandardBridgeABI, 'ERC20BridgeInitiated'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `eventName` set to `\"ETHBridgeFinalized\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function useL2StandardBridgeEthBridgeFinalizedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l2StandardBridgeABI, 'ETHBridgeFinalized'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l2StandardBridgeAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    eventName: 'ETHBridgeFinalized',\n    ...config,\n  } as UseContractEventConfig<typeof l2StandardBridgeABI, 'ETHBridgeFinalized'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `eventName` set to `\"ETHBridgeInitiated\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function useL2StandardBridgeEthBridgeInitiatedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l2StandardBridgeABI, 'ETHBridgeInitiated'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l2StandardBridgeAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    eventName: 'ETHBridgeInitiated',\n    ...config,\n  } as UseContractEventConfig<typeof l2StandardBridgeABI, 'ETHBridgeInitiated'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2StandardBridgeABI}__ and `eventName` set to `\"WithdrawalInitiated\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000010)\n */\nexport function useL2StandardBridgeWithdrawalInitiatedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l2StandardBridgeABI, 'WithdrawalInitiated'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l2StandardBridgeAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: l2StandardBridgeABI,\n    address: l2StandardBridgeAddress[420],\n    eventName: 'WithdrawalInitiated',\n    ...config,\n  } as UseContractEventConfig<typeof l2StandardBridgeABI, 'WithdrawalInitiated'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2ToL1MessagePasserABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000016)\n */\nexport function useL2ToL1MessagePasserRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof l2ToL1MessagePasserABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2ToL1MessagePasserABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l2ToL1MessagePasserAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2ToL1MessagePasserABI,\n    address: l2ToL1MessagePasserAddress[420],\n    ...config,\n  } as UseContractReadConfig<typeof l2ToL1MessagePasserABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2ToL1MessagePasserABI}__ and `functionName` set to `\"MESSAGE_VERSION\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000016)\n */\nexport function useL2ToL1MessagePasserMessageVersion<\n  TFunctionName extends 'MESSAGE_VERSION',\n  TSelectData = ReadContractResult<typeof l2ToL1MessagePasserABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2ToL1MessagePasserABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2ToL1MessagePasserAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2ToL1MessagePasserABI,\n    address: l2ToL1MessagePasserAddress[420],\n    functionName: 'MESSAGE_VERSION',\n    ...config,\n  } as UseContractReadConfig<typeof l2ToL1MessagePasserABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2ToL1MessagePasserABI}__ and `functionName` set to `\"messageNonce\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000016)\n */\nexport function useL2ToL1MessagePasserMessageNonce<\n  TFunctionName extends 'messageNonce',\n  TSelectData = ReadContractResult<typeof l2ToL1MessagePasserABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2ToL1MessagePasserABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2ToL1MessagePasserAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2ToL1MessagePasserABI,\n    address: l2ToL1MessagePasserAddress[420],\n    functionName: 'messageNonce',\n    ...config,\n  } as UseContractReadConfig<typeof l2ToL1MessagePasserABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2ToL1MessagePasserABI}__ and `functionName` set to `\"sentMessages\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000016)\n */\nexport function useL2ToL1MessagePasserSentMessages<\n  TFunctionName extends 'sentMessages',\n  TSelectData = ReadContractResult<typeof l2ToL1MessagePasserABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2ToL1MessagePasserABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2ToL1MessagePasserAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2ToL1MessagePasserABI,\n    address: l2ToL1MessagePasserAddress[420],\n    functionName: 'sentMessages',\n    ...config,\n  } as UseContractReadConfig<typeof l2ToL1MessagePasserABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link l2ToL1MessagePasserABI}__ and `functionName` set to `\"version\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000016)\n */\nexport function useL2ToL1MessagePasserVersion<\n  TFunctionName extends 'version',\n  TSelectData = ReadContractResult<typeof l2ToL1MessagePasserABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof l2ToL1MessagePasserABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2ToL1MessagePasserAddress } = {} as any\n) {\n  return useContractRead({\n    abi: l2ToL1MessagePasserABI,\n    address: l2ToL1MessagePasserAddress[420],\n    functionName: 'version',\n    ...config,\n  } as UseContractReadConfig<typeof l2ToL1MessagePasserABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2ToL1MessagePasserABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000016)\n */\nexport function useL2ToL1MessagePasserWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2ToL1MessagePasserAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2ToL1MessagePasserABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<\n        typeof l2ToL1MessagePasserABI,\n        TFunctionName,\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  return useContractWrite<typeof l2ToL1MessagePasserABI, TFunctionName, TMode>({\n    abi: l2ToL1MessagePasserABI,\n    address: l2ToL1MessagePasserAddress[420],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2ToL1MessagePasserABI}__ and `functionName` set to `\"burn\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000016)\n */\nexport function useL2ToL1MessagePasserBurn<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2ToL1MessagePasserAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2ToL1MessagePasserABI,\n          'burn'\n        >['request']['abi'],\n        'burn',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'burn' }\n    : UseContractWriteConfig<typeof l2ToL1MessagePasserABI, 'burn', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'burn'\n      } = {} as any\n) {\n  return useContractWrite<typeof l2ToL1MessagePasserABI, 'burn', TMode>({\n    abi: l2ToL1MessagePasserABI,\n    address: l2ToL1MessagePasserAddress[420],\n    functionName: 'burn',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link l2ToL1MessagePasserABI}__ and `functionName` set to `\"initiateWithdrawal\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000016)\n */\nexport function useL2ToL1MessagePasserInitiateWithdrawal<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof l2ToL1MessagePasserAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof l2ToL1MessagePasserABI,\n          'initiateWithdrawal'\n        >['request']['abi'],\n        'initiateWithdrawal',\n        TMode\n      > & {\n        address?: Address\n        chainId?: TChainId\n        functionName?: 'initiateWithdrawal'\n      }\n    : UseContractWriteConfig<\n        typeof l2ToL1MessagePasserABI,\n        'initiateWithdrawal',\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'initiateWithdrawal'\n      } = {} as any\n) {\n  return useContractWrite<\n    typeof l2ToL1MessagePasserABI,\n    'initiateWithdrawal',\n    TMode\n  >({\n    abi: l2ToL1MessagePasserABI,\n    address: l2ToL1MessagePasserAddress[420],\n    functionName: 'initiateWithdrawal',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2ToL1MessagePasserABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000016)\n */\nexport function usePrepareL2ToL1MessagePasserWrite<\n  TFunctionName extends string\n>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l2ToL1MessagePasserABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l2ToL1MessagePasserAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: l2ToL1MessagePasserABI,\n    address: l2ToL1MessagePasserAddress[420],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2ToL1MessagePasserABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2ToL1MessagePasserABI}__ and `functionName` set to `\"burn\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000016)\n */\nexport function usePrepareL2ToL1MessagePasserBurn(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof l2ToL1MessagePasserABI, 'burn'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2ToL1MessagePasserAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: l2ToL1MessagePasserABI,\n    address: l2ToL1MessagePasserAddress[420],\n    functionName: 'burn',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2ToL1MessagePasserABI, 'burn'>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link l2ToL1MessagePasserABI}__ and `functionName` set to `\"initiateWithdrawal\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000016)\n */\nexport function usePrepareL2ToL1MessagePasserInitiateWithdrawal(\n  config: Omit<\n    UsePrepareContractWriteConfig<\n      typeof l2ToL1MessagePasserABI,\n      'initiateWithdrawal'\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof l2ToL1MessagePasserAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: l2ToL1MessagePasserABI,\n    address: l2ToL1MessagePasserAddress[420],\n    functionName: 'initiateWithdrawal',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof l2ToL1MessagePasserABI, 'initiateWithdrawal'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2ToL1MessagePasserABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000016)\n */\nexport function useL2ToL1MessagePasserEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof l2ToL1MessagePasserABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof l2ToL1MessagePasserAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: l2ToL1MessagePasserABI,\n    address: l2ToL1MessagePasserAddress[420],\n    ...config,\n  } as UseContractEventConfig<typeof l2ToL1MessagePasserABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2ToL1MessagePasserABI}__ and `eventName` set to `\"MessagePassed\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000016)\n */\nexport function useL2ToL1MessagePasserMessagePassedEvent(\n  config: Omit<\n    UseContractEventConfig<typeof l2ToL1MessagePasserABI, 'MessagePassed'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l2ToL1MessagePasserAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: l2ToL1MessagePasserABI,\n    address: l2ToL1MessagePasserAddress[420],\n    eventName: 'MessagePassed',\n    ...config,\n  } as UseContractEventConfig<typeof l2ToL1MessagePasserABI, 'MessagePassed'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link l2ToL1MessagePasserABI}__ and `eventName` set to `\"WithdrawerBalanceBurnt\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000016)\n */\nexport function useL2ToL1MessagePasserWithdrawerBalanceBurntEvent(\n  config: Omit<\n    UseContractEventConfig<\n      typeof l2ToL1MessagePasserABI,\n      'WithdrawerBalanceBurnt'\n    >,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof l2ToL1MessagePasserAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: l2ToL1MessagePasserABI,\n    address: l2ToL1MessagePasserAddress[420],\n    eventName: 'WithdrawerBalanceBurnt',\n    ...config,\n  } as UseContractEventConfig<typeof l2ToL1MessagePasserABI, 'WithdrawerBalanceBurnt'>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link sequencerFeeVaultABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000011)\n */\nexport function useSequencerFeeVaultRead<\n  TFunctionName extends string,\n  TSelectData = ReadContractResult<typeof sequencerFeeVaultABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof sequencerFeeVaultABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof sequencerFeeVaultAddress } = {} as any\n) {\n  return useContractRead({\n    abi: sequencerFeeVaultABI,\n    address: sequencerFeeVaultAddress[420],\n    ...config,\n  } as UseContractReadConfig<typeof sequencerFeeVaultABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link sequencerFeeVaultABI}__ and `functionName` set to `\"MIN_WITHDRAWAL_AMOUNT\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000011)\n */\nexport function useSequencerFeeVaultMinWithdrawalAmount<\n  TFunctionName extends 'MIN_WITHDRAWAL_AMOUNT',\n  TSelectData = ReadContractResult<typeof sequencerFeeVaultABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof sequencerFeeVaultABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof sequencerFeeVaultAddress } = {} as any\n) {\n  return useContractRead({\n    abi: sequencerFeeVaultABI,\n    address: sequencerFeeVaultAddress[420],\n    functionName: 'MIN_WITHDRAWAL_AMOUNT',\n    ...config,\n  } as UseContractReadConfig<typeof sequencerFeeVaultABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link sequencerFeeVaultABI}__ and `functionName` set to `\"RECIPIENT\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000011)\n */\nexport function useSequencerFeeVaultRecipient<\n  TFunctionName extends 'RECIPIENT',\n  TSelectData = ReadContractResult<typeof sequencerFeeVaultABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof sequencerFeeVaultABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof sequencerFeeVaultAddress } = {} as any\n) {\n  return useContractRead({\n    abi: sequencerFeeVaultABI,\n    address: sequencerFeeVaultAddress[420],\n    functionName: 'RECIPIENT',\n    ...config,\n  } as UseContractReadConfig<typeof sequencerFeeVaultABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link sequencerFeeVaultABI}__ and `functionName` set to `\"l1FeeWallet\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000011)\n */\nexport function useSequencerFeeVaultL1FeeWallet<\n  TFunctionName extends 'l1FeeWallet',\n  TSelectData = ReadContractResult<typeof sequencerFeeVaultABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof sequencerFeeVaultABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof sequencerFeeVaultAddress } = {} as any\n) {\n  return useContractRead({\n    abi: sequencerFeeVaultABI,\n    address: sequencerFeeVaultAddress[420],\n    functionName: 'l1FeeWallet',\n    ...config,\n  } as UseContractReadConfig<typeof sequencerFeeVaultABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link sequencerFeeVaultABI}__ and `functionName` set to `\"totalProcessed\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000011)\n */\nexport function useSequencerFeeVaultTotalProcessed<\n  TFunctionName extends 'totalProcessed',\n  TSelectData = ReadContractResult<typeof sequencerFeeVaultABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof sequencerFeeVaultABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof sequencerFeeVaultAddress } = {} as any\n) {\n  return useContractRead({\n    abi: sequencerFeeVaultABI,\n    address: sequencerFeeVaultAddress[420],\n    functionName: 'totalProcessed',\n    ...config,\n  } as UseContractReadConfig<typeof sequencerFeeVaultABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link sequencerFeeVaultABI}__ and `functionName` set to `\"version\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000011)\n */\nexport function useSequencerFeeVaultVersion<\n  TFunctionName extends 'version',\n  TSelectData = ReadContractResult<typeof sequencerFeeVaultABI, TFunctionName>\n>(\n  config: Omit<\n    UseContractReadConfig<\n      typeof sequencerFeeVaultABI,\n      TFunctionName,\n      TSelectData\n    >,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof sequencerFeeVaultAddress } = {} as any\n) {\n  return useContractRead({\n    abi: sequencerFeeVaultABI,\n    address: sequencerFeeVaultAddress[420],\n    functionName: 'version',\n    ...config,\n  } as UseContractReadConfig<typeof sequencerFeeVaultABI, TFunctionName, TSelectData>)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link sequencerFeeVaultABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000011)\n */\nexport function useSequencerFeeVaultWrite<\n  TFunctionName extends string,\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof sequencerFeeVaultAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof sequencerFeeVaultABI,\n          string\n        >['request']['abi'],\n        TFunctionName,\n        TMode\n      > & { address?: Address; chainId?: TChainId }\n    : UseContractWriteConfig<\n        typeof sequencerFeeVaultABI,\n        TFunctionName,\n        TMode\n      > & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n      } = {} as any\n) {\n  return useContractWrite<typeof sequencerFeeVaultABI, TFunctionName, TMode>({\n    abi: sequencerFeeVaultABI,\n    address: sequencerFeeVaultAddress[420],\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link sequencerFeeVaultABI}__ and `functionName` set to `\"withdraw\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000011)\n */\nexport function useSequencerFeeVaultWithdraw<\n  TMode extends WriteContractMode = undefined,\n  TChainId extends number = keyof typeof sequencerFeeVaultAddress\n>(\n  config: TMode extends 'prepared'\n    ? UseContractWriteConfig<\n        PrepareWriteContractResult<\n          typeof sequencerFeeVaultABI,\n          'withdraw'\n        >['request']['abi'],\n        'withdraw',\n        TMode\n      > & { address?: Address; chainId?: TChainId; functionName?: 'withdraw' }\n    : UseContractWriteConfig<typeof sequencerFeeVaultABI, 'withdraw', TMode> & {\n        abi?: never\n        address?: never\n        chainId?: TChainId\n        functionName?: 'withdraw'\n      } = {} as any\n) {\n  return useContractWrite<typeof sequencerFeeVaultABI, 'withdraw', TMode>({\n    abi: sequencerFeeVaultABI,\n    address: sequencerFeeVaultAddress[420],\n    functionName: 'withdraw',\n    ...config,\n  } as any)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link sequencerFeeVaultABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000011)\n */\nexport function usePrepareSequencerFeeVaultWrite<TFunctionName extends string>(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof sequencerFeeVaultABI, TFunctionName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof sequencerFeeVaultAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: sequencerFeeVaultABI,\n    address: sequencerFeeVaultAddress[420],\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof sequencerFeeVaultABI, TFunctionName>)\n}\n\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link sequencerFeeVaultABI}__ and `functionName` set to `\"withdraw\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000011)\n */\nexport function usePrepareSequencerFeeVaultWithdraw(\n  config: Omit<\n    UsePrepareContractWriteConfig<typeof sequencerFeeVaultABI, 'withdraw'>,\n    'abi' | 'address' | 'functionName'\n  > & { chainId?: keyof typeof sequencerFeeVaultAddress } = {} as any\n) {\n  return usePrepareContractWrite({\n    abi: sequencerFeeVaultABI,\n    address: sequencerFeeVaultAddress[420],\n    functionName: 'withdraw',\n    ...config,\n  } as UsePrepareContractWriteConfig<typeof sequencerFeeVaultABI, 'withdraw'>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link sequencerFeeVaultABI}__.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000011)\n */\nexport function useSequencerFeeVaultEvent<TEventName extends string>(\n  config: Omit<\n    UseContractEventConfig<typeof sequencerFeeVaultABI, TEventName>,\n    'abi' | 'address'\n  > & { chainId?: keyof typeof sequencerFeeVaultAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: sequencerFeeVaultABI,\n    address: sequencerFeeVaultAddress[420],\n    ...config,\n  } as UseContractEventConfig<typeof sequencerFeeVaultABI, TEventName>)\n}\n\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link sequencerFeeVaultABI}__ and `eventName` set to `\"Withdrawal\"`.\n *\n * [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0x4200000000000000000000000000000000000011)\n */\nexport function useSequencerFeeVaultWithdrawalEvent(\n  config: Omit<\n    UseContractEventConfig<typeof sequencerFeeVaultABI, 'Withdrawal'>,\n    'abi' | 'address' | 'eventName'\n  > & { chainId?: keyof typeof sequencerFeeVaultAddress } = {} as any\n) {\n  return useContractEvent({\n    abi: sequencerFeeVaultABI,\n    address: sequencerFeeVaultAddress[420],\n    eventName: 'Withdrawal',\n    ...config,\n  } as UseContractEventConfig<typeof sequencerFeeVaultABI, 'Withdrawal'>)\n}\n"],"mappings":";AACA;AAAA,EACE;AAAA,EACA;AAAA,EAEA;AAAA,EAGA;AAAA,EAEA;AAAA,OAEK;AAiBA,IAAM,oBAAoB;AAAA,EAC/B;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,UAAU,SAAS,KAAK;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,IAClE,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS;AAAA,MACxD,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,IAC/D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACvE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AACF;AAMO,IAAM,wBAAwB;AAAA,EACnC,GAAG;AAAA,EACH,GAAG;AACL;AAMO,IAAM,uBAAuB;AAAA,EAClC,SAAS;AAAA,EACT,KAAK;AACP;AAUO,IAAM,mBAAmB;AAAA,EAC9B;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EACvE;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,MAAM;AAAA,IACzE;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,SAAS,cAAc,SAAS,MAAM,QAAQ;AAAA,MACtD,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,UAAU;AAAA,MACzD,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO;AAAA,MAC/C,EAAE,MAAM,IAAI,cAAc,SAAS,MAAM,QAAQ;AAAA,IACnD;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,SAAS,cAAc,SAAS,MAAM,QAAQ;AAAA,MACtD,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,UAAU;AAAA,IAC3D;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO;AAAA,MAC/C,EAAE,MAAM,IAAI,cAAc,SAAS,MAAM,QAAQ;AAAA,IACnD;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACvE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,kBAAkB,MAAM,UAAU;AAAA,MAClE,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,IAC9D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,kBAAkB,MAAM,UAAU;AAAA,MAClE,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,IAC1D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,mBAAmB,MAAM,UAAU;AAAA,MACnE,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,IAC1D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,OAAO,cAAc,mBAAmB,MAAM,UAAU;AAAA,MAChE,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,IAC9D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,OAAO,cAAc,mBAAmB,MAAM,UAAU,CAAC;AAAA,IAC1E,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA,EAAE,iBAAiB,WAAW,MAAM,UAAU;AAChD;AAMO,IAAM,uBAAuB;AAAA,EAClC,GAAG;AAAA,EACH,IAAI;AACN;AAMO,IAAM,sBAAsB;AAAA,EACjC,SAAS;AAAA,EACT,KAAK;AACP;AAWO,IAAM,sBAAsB;AAAA,EACjC;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,UAC3D,EAAE,MAAM,aAAa,cAAc,WAAW,MAAM,UAAU;AAAA,QAChE;AAAA,QACA,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,WAAW,cAAc,SAAS,MAAM,QAAQ,CAAC;AAAA,IAClE,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AACF;AAOO,IAAM,0BAA0B;AAAA,EACrC,GAAG;AAAA,EACH,GAAG;AAAA,EACH,KAAK;AACP;AAOO,IAAM,yBAAyB;AAAA,EACpC,SAAS;AAAA,EACT,KAAK;AACP;AAWO,IAAM,qBAAqB;AAAA,EAChC;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,UAC3D,EAAE,MAAM,aAAa,cAAc,WAAW,MAAM,UAAU;AAAA,QAChE;AAAA,QACA,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,WAAW,cAAc,SAAS,MAAM,QAAQ,CAAC;AAAA,IAClE,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AACF;AAOO,IAAM,yBAAyB;AAAA,EACpC,GAAG;AAAA,EACH,GAAG;AAAA,EACH,KAAK;AACP;AAOO,IAAM,wBAAwB;AAAA,EACnC,SAAS;AAAA,EACT,KAAK;AACP;AAWO,IAAM,oBAAoB;AAAA,EAC/B;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,UAC7D,EAAE,MAAM,aAAa,cAAc,WAAW,MAAM,UAAU;AAAA,UAC9D,EAAE,MAAM,aAAa,cAAc,WAAW,MAAM,UAAU;AAAA,QAChE;AAAA,QACA,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,WAAW,cAAc,SAAS,MAAM,QAAQ,CAAC;AAAA,IAClE,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AACF;AAOO,IAAM,wBAAwB;AAAA,EACnC,GAAG;AAAA,EACH,GAAG;AAAA,EACH,KAAK;AACP;AAOO,IAAM,uBAAuB;AAAA,EAClC,SAAS;AAAA,EACT,KAAK;AACP;AAWO,IAAM,eAAe;AAAA,EAC1B;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,IAAI,cAAc,SAAS,MAAM,QAAQ,CAAC;AAAA,IAC3D,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AACF;AAOO,IAAM,mBAAmB;AAAA,EAC9B,GAAG;AAAA,EACH,GAAG;AAAA,EACH,KAAK;AACP;AAOO,IAAM,kBAAkB;AAAA,EAC7B,SAAS;AAAA,EACT,KAAK;AACP;AASO,IAAM,aAAa;AAAA,EACxB;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EACvE;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,UAAU,MAAM,UAAU,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,aAAa,cAAc,QAAQ,MAAM,OAAO;AAAA,UACxD,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,UAC7D;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,eAAe,cAAc,SAAS,MAAM,QAAQ;AAAA,UAC5D;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,YACN,YAAY;AAAA,cACV;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA,EAAE,MAAM,QAAQ,cAAc,SAAS,MAAM,QAAQ;AAAA,cACrD,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,YAC5D;AAAA,UACF;AAAA,QACF;AAAA,QACA,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,UAAU,MAAM,UAAU,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,UAAU,MAAM,UAAU,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,MAAM;AAAA,IACzE;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,SAAS,cAAc,SAAS,MAAM,QAAQ;AAAA,MACtD,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO;AAAA,MAC/C,EAAE,MAAM,IAAI,cAAc,SAAS,MAAM,QAAQ;AAAA,IACnD;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,SAAS,cAAc,SAAS,MAAM,QAAQ;AAAA,IACxD;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO;AAAA,MAC/C,EAAE,MAAM,IAAI,cAAc,SAAS,MAAM,QAAQ;AAAA,IACnD;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS;AAAA,MACxD;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,aAAa,cAAc,QAAQ,MAAM,OAAO;AAAA,UACxD,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,UAC7D;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,eAAe,cAAc,SAAS,MAAM,QAAQ;AAAA,UAC5D;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,YACN,YAAY;AAAA,cACV;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA,EAAE,MAAM,QAAQ,cAAc,SAAS,MAAM,QAAQ;AAAA,cACrD,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,YAC5D;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,IAClE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,IAC7D,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,aAAa,cAAc,QAAQ,MAAM,OAAO;AAAA,UACxD,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,UAC7D;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,eAAe,cAAc,SAAS,MAAM,QAAQ;AAAA,UAC5D;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,YACN,YAAY;AAAA,cACV;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA,EAAE,MAAM,QAAQ,cAAc,SAAS,MAAM,QAAQ;AAAA,cACrD,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,YAC5D;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,UAAU;AAAA,MACzD,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,IAC5D;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,IAClE,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACvE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS;AAAA,MACxD;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,kBAAkB,MAAM,UAAU;AAAA,MAClE,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,IAC9D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,kBAAkB,MAAM,UAAU;AAAA,MAClE,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,IAC1D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,mBAAmB,MAAM,UAAU;AAAA,MACnE,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,IAC1D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,OAAO,cAAc,mBAAmB,MAAM,UAAU;AAAA,MAChE,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,IAC9D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,OAAO,cAAc,mBAAmB,MAAM,UAAU,CAAC;AAAA,IAC1E,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA,EAAE,iBAAiB,WAAW,MAAM,UAAU;AAChD;AAKO,IAAM,iBAAiB;AAAA,EAC5B,GAAG;AACL;AAKO,IAAM,gBAAgB;AAAA,EAC3B,SAAS;AAAA,EACT,KAAK;AACP;AASO,IAAM,mBAAmB;AAAA,EAC9B;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EACvE;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,UAAU,MAAM,UAAU,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,aAAa,cAAc,QAAQ,MAAM,OAAO;AAAA,UACxD,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,UAC7D;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,eAAe,cAAc,SAAS,MAAM,QAAQ;AAAA,UAC5D;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,YACN,YAAY;AAAA,cACV;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA,EAAE,MAAM,QAAQ,cAAc,SAAS,MAAM,QAAQ;AAAA,cACrD,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,YAC5D;AAAA,UACF;AAAA,QACF;AAAA,QACA,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,UAAU,MAAM,UAAU,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,UAAU,MAAM,UAAU,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,MAAM;AAAA,IACzE;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,SAAS,cAAc,SAAS,MAAM,QAAQ;AAAA,MACtD,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO;AAAA,MAC/C,EAAE,MAAM,IAAI,cAAc,SAAS,MAAM,QAAQ;AAAA,IACnD;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,SAAS,cAAc,SAAS,MAAM,QAAQ;AAAA,IACxD;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO;AAAA,MAC/C,EAAE,MAAM,IAAI,cAAc,SAAS,MAAM,QAAQ;AAAA,IACnD;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS;AAAA,MACxD;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,aAAa,cAAc,QAAQ,MAAM,OAAO;AAAA,UACxD,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,UAC7D;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,eAAe,cAAc,SAAS,MAAM,QAAQ;AAAA,UAC5D;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,YACN,YAAY;AAAA,cACV;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA,EAAE,MAAM,QAAQ,cAAc,SAAS,MAAM,QAAQ;AAAA,cACrD,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,YAC5D;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,IAClE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,IAC7D,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,aAAa,cAAc,QAAQ,MAAM,OAAO;AAAA,UACxD,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,UAC7D;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,eAAe,cAAc,SAAS,MAAM,QAAQ;AAAA,UAC5D;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,YACN,YAAY;AAAA,cACV;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA,EAAE,MAAM,QAAQ,cAAc,SAAS,MAAM,QAAQ;AAAA,cACrD,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,YAC5D;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,UAAU;AAAA,MACzD,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,IAC5D;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,IAClE,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACvE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS;AAAA,MACxD;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,kBAAkB,MAAM,UAAU;AAAA,MAClE,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,IAC9D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,kBAAkB,MAAM,UAAU;AAAA,MAClE,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,IAC1D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,mBAAmB,MAAM,UAAU;AAAA,MACnE,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,IAC1D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,OAAO,cAAc,mBAAmB,MAAM,UAAU;AAAA,MAChE,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,IAC9D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,OAAO,cAAc,mBAAmB,MAAM,UAAU,CAAC;AAAA,IAC1E,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA,EAAE,iBAAiB,WAAW,MAAM,UAAU;AAChD;AAKO,IAAM,uBAAuB;AAAA,EAClC,GAAG;AACL;AAKO,IAAM,sBAAsB;AAAA,EACjC,SAAS;AAAA,EACT,KAAK;AACP;AASO,IAAM,2BAA2B;AAAA,EACtC;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EACvE;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,UAAU,MAAM,UAAU,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,UAC7D;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,eAAe,cAAc,SAAS,MAAM,QAAQ;AAAA,UAC5D;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,YACN,YAAY;AAAA,cACV;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA,EAAE,MAAM,QAAQ,cAAc,SAAS,MAAM,QAAQ;AAAA,cACrD,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,YAC5D;AAAA,UACF;AAAA,QACF;AAAA,QACA,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,UAAU,MAAM,UAAU,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,UAAU,MAAM,UAAU,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,MAAM;AAAA,IACzE;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,SAAS,cAAc,SAAS,MAAM,QAAQ;AAAA,MACtD,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,UAAU;AAAA,MACzD,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO;AAAA,MAC/C,EAAE,MAAM,IAAI,cAAc,SAAS,MAAM,QAAQ;AAAA,IACnD;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,SAAS,cAAc,SAAS,MAAM,QAAQ;AAAA,MACtD,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,UAAU;AAAA,IAC3D;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO;AAAA,MAC/C,EAAE,MAAM,IAAI,cAAc,SAAS,MAAM,QAAQ;AAAA,IACnD;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS;AAAA,MACxD;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,UAC7D;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,eAAe,cAAc,SAAS,MAAM,QAAQ;AAAA,UAC5D;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,YACN,YAAY;AAAA,cACV;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA,EAAE,MAAM,QAAQ,cAAc,SAAS,MAAM,QAAQ;AAAA,cACrD,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,YAC5D;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,IAClE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,IAC7D,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,UAC7D;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,eAAe,cAAc,SAAS,MAAM,QAAQ;AAAA,UAC5D;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,YACN,YAAY;AAAA,cACV;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA,EAAE,MAAM,QAAQ,cAAc,SAAS,MAAM,QAAQ;AAAA,cACrD,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,YAC5D;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,UAAU;AAAA,MACzD,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,IAC5D;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,IAClE,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACvE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS;AAAA,MACxD;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,kBAAkB,MAAM,UAAU;AAAA,MAClE,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,IAC9D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,kBAAkB,MAAM,UAAU;AAAA,MAClE,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,IAC1D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,mBAAmB,MAAM,UAAU;AAAA,MACnE,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,IAC1D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,OAAO,cAAc,mBAAmB,MAAM,UAAU;AAAA,MAChE,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,IAC9D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,OAAO,cAAc,mBAAmB,MAAM,UAAU,CAAC;AAAA,IAC1E,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA,EAAE,iBAAiB,WAAW,MAAM,UAAU;AAChD;AAKO,IAAM,+BAA+B;AAAA,EAC1C,KAAK;AACP;AAKO,IAAM,8BAA8B;AAAA,EACzC,SAAS;AAAA,EACT,KAAK;AACP;AAUO,IAAM,4BAA4B;AAAA,EACvC;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,SAAS,MAAM,SAAS,SAAS,MAAM;AAAA,IAC1E;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,WAAW,cAAc,SAAS,MAAM,SAAS,SAAS,MAAM;AAAA,MACxE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP,EAAE,MAAM,IAAI,cAAc,2BAA2B,MAAM,UAAU;AAAA,IACvE;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,YAAY,cAAc,SAAS,MAAM,QAAQ;AAAA,MACzD,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,IACjE;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IAC/D,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,MAC3D,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,MAC3D,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE,EAAE,MAAM,YAAY,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC3D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,YAAY,cAAc,SAAS,MAAM,QAAQ;AAAA,MACzD,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,IACjE;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IAC/D,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AACF;AAMO,IAAM,gCAAgC;AAAA,EAC3C,GAAG;AAAA,EACH,GAAG;AACL;AAMO,IAAM,+BAA+B;AAAA,EAC1C,SAAS;AAAA,EACT,KAAK;AACP;AAUO,IAAM,oBAAoB;AAAA,EAC/B;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,cAAc,cAAc,WAAW,MAAM,UAAU;AAAA,MAC/D,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,IACnE;AAAA,EACF;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,eAAe,cAAc,WAAW,MAAM,UAAU;AAAA,MAChE,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,MAC7D,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,MAC/D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,eAAe,cAAc,WAAW,MAAM,UAAU;AAAA,MAChE,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,MAC7D,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,MAC/D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU;AAAA,MACrD,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU;AAAA,MACrD,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU;AAAA,IACvD;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,eAAe,cAAc,WAAW,MAAM,UAAU;AAAA,MAChE,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,MAC1D,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,MAC7D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AACF;AAMO,IAAM,wBAAwB;AAAA,EACnC,GAAG;AAAA,EACH,GAAG;AACL;AAMO,IAAM,uBAAuB;AAAA,EAClC,SAAS;AAAA,EACT,KAAK;AACP;AAUO,IAAM,sBAAsB;AAAA,EACjC;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,cAAc,cAAc,mBAAmB,MAAM,UAAU;AAAA,IACzE;AAAA,EACF;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACtE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACtE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACtE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACtE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,eAAe,cAAc,WAAW,MAAM,UAAU;AAAA,MAChE,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,MAC/D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,eAAe,cAAc,WAAW,MAAM,UAAU;AAAA,MAChE,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,MAC/D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,MAC/D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,MAC/D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,MAC7D,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,MAC7D,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,MAC/D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,MAC7D,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,MAC7D,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,MAC/D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,MAC/D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,MAC/D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU;AAAA,MACrD,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU;AAAA,IACvD;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,eAAe,cAAc,WAAW,MAAM,UAAU;AAAA,MAChE,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,MAC1D,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,MAC1D,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,MAC7D,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,MAC7D,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,MAC1D,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,MAC1D,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA,EAAE,iBAAiB,WAAW,MAAM,UAAU;AAChD;AAMO,IAAM,0BAA0B;AAAA,EACrC,GAAG;AAAA,EACH,GAAG;AACL;AAMO,IAAM,yBAAyB;AAAA,EACpC,SAAS;AAAA,EACT,KAAK;AACP;AAUO,IAAM,oBAAoB;AAAA,EAC/B;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,uBAAuB,cAAc,WAAW,MAAM,UAAU;AAAA,MACxE,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,MACA,EAAE,MAAM,sBAAsB,cAAc,WAAW,MAAM,UAAU;AAAA,MACvE,EAAE,MAAM,aAAa,cAAc,WAAW,MAAM,UAAU;AAAA,MAC9D,EAAE,MAAM,eAAe,cAAc,WAAW,MAAM,UAAU;AAAA,MAChE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,SAAS,MAAM,SAAS,SAAS,MAAM;AAAA,IAC1E;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,kBAAkB,cAAc,WAAW,MAAM,UAAU;AAAA,IACrE;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,kBAAkB,cAAc,WAAW,MAAM,UAAU;AAAA,IACrE;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,kBAAkB,cAAc,WAAW,MAAM,UAAU;AAAA,IACrE;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,cAAc,cAAc,WAAW,MAAM,UAAU;AAAA,UAC/D,EAAE,MAAM,aAAa,cAAc,WAAW,MAAM,UAAU;AAAA,UAC9D,EAAE,MAAM,iBAAiB,cAAc,WAAW,MAAM,UAAU;AAAA,QACpE;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,kBAAkB,cAAc,WAAW,MAAM,UAAU;AAAA,IACrE;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,cAAc,cAAc,WAAW,MAAM,UAAU;AAAA,UAC/D,EAAE,MAAM,aAAa,cAAc,WAAW,MAAM,UAAU;AAAA,UAC9D,EAAE,MAAM,iBAAiB,cAAc,WAAW,MAAM,UAAU;AAAA,QACpE;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,kBAAkB,cAAc,WAAW,MAAM,UAAU;AAAA,IACrE;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,MACA,EAAE,MAAM,sBAAsB,cAAc,WAAW,MAAM,UAAU;AAAA,IACzE;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,eAAe,cAAc,WAAW,MAAM,UAAU;AAAA,MAChE,EAAE,MAAM,kBAAkB,cAAc,WAAW,MAAM,UAAU;AAAA,MACnE,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE,EAAE,MAAM,kBAAkB,cAAc,WAAW,MAAM,UAAU;AAAA,IACrE;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AACF;AAMO,IAAM,wBAAwB;AAAA,EACnC,GAAG;AAAA,EACH,GAAG;AACL;AAMO,IAAM,uBAAuB;AAAA,EAClC,SAAS;AAAA,EACT,KAAK;AACP;AAWO,IAAM,kCAAkC;AAAA,EAC7C;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EACxE;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS;AAAA,MACxD,EAAE,MAAM,WAAW,cAAc,UAAU,MAAM,SAAS;AAAA,IAC5D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS;AAAA,MACxD,EAAE,MAAM,WAAW,cAAc,UAAU,MAAM,SAAS;AAAA,IAC5D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AACF;AAOO,IAAM,sCAAsC;AAAA,EACjD,GAAG;AAAA,EACH,GAAG;AAAA,EACH,KAAK;AACP;AAOO,IAAM,qCAAqC;AAAA,EAChD,SAAS;AAAA,EACT,KAAK;AACP;AAUO,IAAM,oBAAoB;AAAA,EAC/B;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,MACA,EAAE,MAAM,aAAa,cAAc,WAAW,MAAM,UAAU;AAAA,MAC9D,EAAE,MAAM,WAAW,cAAc,QAAQ,MAAM,OAAO;AAAA,MACtD;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,SAAS,MAAM,SAAS,SAAS,MAAM;AAAA,IAC1E;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACtE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,WAAW,cAAc,QAAQ,MAAM,QAAQ,SAAS,MAAM;AAAA,IACxE;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,IACxE;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP,EAAE,MAAM,IAAI,cAAc,2BAA2B,MAAM,UAAU;AAAA,IACvE;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP,EAAE,MAAM,IAAI,cAAc,yBAAyB,MAAM,UAAU;AAAA,IACrE;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,MAC3D,EAAE,MAAM,aAAa,cAAc,UAAU,MAAM,SAAS;AAAA,MAC5D,EAAE,MAAM,eAAe,cAAc,QAAQ,MAAM,OAAO;AAAA,MAC1D,EAAE,MAAM,SAAS,cAAc,SAAS,MAAM,QAAQ;AAAA,IACxD;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,UAC1D,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,UAC3D,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,UAC3D,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,UAC1D,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,UAC7D,EAAE,MAAM,QAAQ,cAAc,SAAS,MAAM,QAAQ;AAAA,QACvD;AAAA,MACF;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IAC/D,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,WAAW,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,IAChE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,kBAAkB,cAAc,WAAW,MAAM,UAAU;AAAA,IACrE;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,cAAc,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,IACvE,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP,EAAE,MAAM,eAAe,cAAc,WAAW,MAAM,UAAU;AAAA,MAChE,EAAE,MAAM,iBAAiB,cAAc,UAAU,MAAM,SAAS;AAAA,MAChE,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,IACjE;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,UAC1D,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,UAC3D,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,UAC3D,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,UAC1D,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,UAC7D,EAAE,MAAM,QAAQ,cAAc,SAAS,MAAM,QAAQ;AAAA,QACvD;AAAA,MACF;AAAA,MACA,EAAE,MAAM,kBAAkB,cAAc,WAAW,MAAM,UAAU;AAAA,MACnE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,UAC5D,EAAE,MAAM,aAAa,cAAc,WAAW,MAAM,UAAU;AAAA,UAC9D;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,mBAAmB,cAAc,WAAW,MAAM,UAAU;AAAA,QACtE;AAAA,MACF;AAAA,MACA,EAAE,MAAM,oBAAoB,cAAc,WAAW,MAAM,UAAU;AAAA,IACvE;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IAC/D,MAAM;AAAA,IACN,SAAS;AAAA,MACP,EAAE,MAAM,cAAc,cAAc,WAAW,MAAM,UAAU;AAAA,MAC/D,EAAE,MAAM,aAAa,cAAc,WAAW,MAAM,UAAU;AAAA,MAC9D,EAAE,MAAM,iBAAiB,cAAc,WAAW,MAAM,UAAU;AAAA,IACpE;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA,EAAE,iBAAiB,WAAW,MAAM,UAAU;AAChD;AAMO,IAAM,wBAAwB;AAAA,EACnC,GAAG;AAAA,EACH,GAAG;AACL;AAMO,IAAM,uBAAuB;AAAA,EAClC,SAAS;AAAA,EACT,KAAK;AACP;AAUO,IAAM,kBAAkB;AAAA,EAC7B;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP,EAAE,MAAM,IAAI,cAAc,2BAA2B,MAAM,UAAU;AAAA,IACvE;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AACF;AAMO,IAAM,sBAAsB;AAAA,EACjC,GAAG;AAAA,EACH,GAAG;AACL;AAMO,IAAM,qBAAqB;AAAA,EAChC,SAAS;AAAA,EACT,KAAK;AACP;AAUO,IAAM,gBAAgB;AAAA,EAC3B;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EACvE;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP,EAAE,MAAM,IAAI,cAAc,2BAA2B,MAAM,UAAU;AAAA,IACvE;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,mBAAmB,MAAM,UAAU;AAAA,MACnE,EAAE,MAAM,aAAa,cAAc,WAAW,MAAM,UAAU;AAAA,IAChE;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,mBAAmB,MAAM,UAAU;AAAA,IACrE;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACrE,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IAC/D,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IAC/D,MAAM;AAAA,IACN,SAAS;AAAA,MACP,EAAE,MAAM,IAAI,cAAc,6BAA6B,MAAM,QAAQ;AAAA,IACvE;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS;AAAA,MACxD,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,IAC/D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,MAC7D,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS;AAAA,IAC1D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,MAC7D;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,cAAc,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,IACnE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACvE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,mBAAmB,MAAM,UAAU;AAAA,MACnE,EAAE,MAAM,mBAAmB,cAAc,WAAW,MAAM,UAAU;AAAA,IACtE;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,mBAAmB,MAAM,UAAU;AAAA,MACnE,EAAE,MAAM,mBAAmB,cAAc,WAAW,MAAM,UAAU;AAAA,MACpE,EAAE,MAAM,SAAS,cAAc,SAAS,MAAM,QAAQ;AAAA,IACxD;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AACF;AAMO,IAAM,oBAAoB;AAAA,EAC/B,GAAG;AAAA,EACH,GAAG;AACL;AAMO,IAAM,mBAAmB;AAAA,EAC9B,SAAS;AAAA,EACT,KAAK;AACP;AAUO,IAAM,kBAAkB;AAAA,EAC7B;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,MAC3D,EAAE,MAAM,aAAa,cAAc,WAAW,MAAM,UAAU;AAAA,MAC9D,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE,EAAE,MAAM,aAAa,cAAc,UAAU,MAAM,SAAS;AAAA,MAC5D,EAAE,MAAM,sBAAsB,cAAc,WAAW,MAAM,UAAU;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,oBAAoB,cAAc,UAAU,MAAM,SAAS;AAAA,UACnE;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,kBAAkB,cAAc,UAAU,MAAM,SAAS;AAAA,UACjE,EAAE,MAAM,kBAAkB,cAAc,UAAU,MAAM,SAAS;AAAA,UACjE,EAAE,MAAM,kBAAkB,cAAc,WAAW,MAAM,UAAU;AAAA,QACrE;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,SAAS,MAAM,SAAS,SAAS,MAAM;AAAA,IACvE;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,SAAS,MAAM,SAAS,SAAS,MAAM;AAAA,IAC1E;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,MAC3D,EAAE,MAAM,aAAa,cAAc,WAAW,MAAM,UAAU;AAAA,MAC9D,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE,EAAE,MAAM,aAAa,cAAc,UAAU,MAAM,SAAS;AAAA,MAC5D,EAAE,MAAM,sBAAsB,cAAc,WAAW,MAAM,UAAU;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,oBAAoB,cAAc,UAAU,MAAM,SAAS;AAAA,UACnE;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,kBAAkB,cAAc,UAAU,MAAM,SAAS;AAAA,UACjE,EAAE,MAAM,kBAAkB,cAAc,UAAU,MAAM,SAAS;AAAA,UACjE,EAAE,MAAM,kBAAkB,cAAc,WAAW,MAAM,UAAU;AAAA,QACrE;AAAA,MACF;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,oBAAoB,cAAc,UAAU,MAAM,SAAS;AAAA,UACnE;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,kBAAkB,cAAc,UAAU,MAAM,SAAS;AAAA,UACjE,EAAE,MAAM,kBAAkB,cAAc,UAAU,MAAM,SAAS;AAAA,UACjE,EAAE,MAAM,kBAAkB,cAAc,WAAW,MAAM,UAAU;AAAA,QACrE;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,IACnE;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,aAAa,cAAc,WAAW,MAAM,UAAU;AAAA,MAC9D,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,IAC9D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,aAAa,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,IACtE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,oBAAoB,cAAc,UAAU,MAAM,SAAS;AAAA,UACnE;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,kBAAkB,cAAc,UAAU,MAAM,SAAS;AAAA,UACjE,EAAE,MAAM,kBAAkB,cAAc,UAAU,MAAM,SAAS;AAAA,UACjE,EAAE,MAAM,kBAAkB,cAAc,WAAW,MAAM,UAAU;AAAA,QACrE;AAAA,MACF;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,sBAAsB,cAAc,WAAW,MAAM,UAAU;AAAA,IACzE;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACvE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AACF;AAMO,IAAM,sBAAsB;AAAA,EACjC,GAAG;AAAA,EACH,GAAG;AACL;AAMO,IAAM,qBAAqB;AAAA,EAChC,SAAS;AAAA,EACT,KAAK;AACP;AASO,IAAM,oBAAoB;AAAA,EAC/B,EAAE,iBAAiB,cAAc,MAAM,eAAe,QAAQ,CAAC,EAAE;AAAA,EACjE;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,SAAS,MAAM,SAAS,SAAS,MAAM;AAAA,IAC1E;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,SAAS,MAAM,QAAQ,CAAC;AAAA,EAC9D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,SAAS,MAAM,QAAQ,CAAC;AAAA,EAC9D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,cAAc,cAAc,WAAW,MAAM,UAAU;AAAA,UAC/D,EAAE,MAAM,cAAc,cAAc,WAAW,MAAM,UAAU;AAAA,QACjE;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,UAC1D,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,UAC7D,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,UAC3D,EAAE,MAAM,eAAe,cAAc,WAAW,MAAM,UAAU;AAAA,UAChE,EAAE,MAAM,YAAY,cAAc,UAAU,MAAM,SAAS;AAAA,UAC3D;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,YACN,YAAY;AAAA,cACV;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,SAAS,MAAM,QAAQ,CAAC;AAAA,EAC9D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,YACN,YAAY;AAAA,cACV;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA,EAAE,MAAM,cAAc,cAAc,WAAW,MAAM,UAAU;AAAA,cAC/D,EAAE,MAAM,cAAc,cAAc,WAAW,MAAM,UAAU;AAAA,YACjE;AAAA,UACF;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,YACN,YAAY;AAAA,cACV;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,YACN,YAAY;AAAA,cACV;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,YACN,YAAY;AAAA,cACV,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,cAC1D,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,cAC7D,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,cAC3D,EAAE,MAAM,eAAe,cAAc,WAAW,MAAM,UAAU;AAAA,cAChE,EAAE,MAAM,YAAY,cAAc,UAAU,MAAM,SAAS;AAAA,cAC3D;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,gBACN,YAAY;AAAA,kBACV;AAAA,oBACE,MAAM;AAAA,oBACN,cAAc;AAAA,oBACd,MAAM;AAAA,kBACR;AAAA,kBACA;AAAA,oBACE,MAAM;AAAA,oBACN,cAAc;AAAA,oBACd,MAAM;AAAA,kBACR;AAAA,kBACA;AAAA,oBACE,MAAM;AAAA,oBACN,cAAc;AAAA,oBACd,MAAM;AAAA,kBACR;AAAA,kBACA;AAAA,oBACE,MAAM;AAAA,oBACN,cAAc;AAAA,oBACd,MAAM;AAAA,kBACR;AAAA,kBACA;AAAA,oBACE,MAAM;AAAA,oBACN,cAAc;AAAA,oBACd,MAAM;AAAA,kBACR;AAAA,kBACA;AAAA,oBACE,MAAM;AAAA,oBACN,cAAc;AAAA,oBACd,MAAM;AAAA,kBACR;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACvE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AACF;AAKO,IAAM,wBAAwB;AAAA,EACnC,GAAG;AACL;AAKO,IAAM,uBAAuB;AAAA,EAClC,SAAS;AAAA,EACT,KAAK;AACP;AASO,IAAM,0BAA0B;AAAA,EACrC;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,SAAS,MAAM,SAAS,SAAS,MAAM;AAAA,IAC1E;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,SAAS,MAAM,QAAQ,CAAC;AAAA,EAC9D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,SAAS,MAAM,QAAQ,CAAC;AAAA,EAC9D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA,EAAE,MAAM,cAAc,cAAc,WAAW,MAAM,UAAU;AAAA,UAC/D,EAAE,MAAM,cAAc,cAAc,WAAW,MAAM,UAAU;AAAA,QACjE;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,UAC1D,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,UAC7D,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,UAC3D,EAAE,MAAM,eAAe,cAAc,WAAW,MAAM,UAAU;AAAA,UAChE,EAAE,MAAM,YAAY,cAAc,UAAU,MAAM,SAAS;AAAA,UAC3D;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,SAAS,MAAM,QAAQ,CAAC;AAAA,EAC9D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,YACN,YAAY;AAAA,cACV;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA,EAAE,MAAM,cAAc,cAAc,WAAW,MAAM,UAAU;AAAA,cAC/D,EAAE,MAAM,cAAc,cAAc,WAAW,MAAM,UAAU;AAAA,YACjE;AAAA,UACF;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,YACN,YAAY;AAAA,cACV;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,YACN,YAAY;AAAA,cACV;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,cACA;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,YACN,YAAY;AAAA,cACV,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,cAC1D,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,cAC7D,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,cAC3D,EAAE,MAAM,eAAe,cAAc,WAAW,MAAM,UAAU;AAAA,cAChE,EAAE,MAAM,YAAY,cAAc,UAAU,MAAM,SAAS;AAAA,cAC3D;AAAA,gBACE,MAAM;AAAA,gBACN,cAAc;AAAA,gBACd,MAAM;AAAA,cACR;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACvE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,cAAc;AAAA,YACd,MAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AACF;AAKO,IAAM,8BAA8B;AAAA,EACzC,GAAG;AACL;AAKO,IAAM,6BAA6B;AAAA,EACxC,SAAS;AAAA,EACT,KAAK;AACP;AASO,IAAM,yBAAyB;AAAA,EACpC;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EACvE;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,MAAM;AAAA,IACzE;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,SAAS,cAAc,SAAS,MAAM,QAAQ;AAAA,MACtD,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,UAAU;AAAA,MACzD,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO;AAAA,MAC/C,EAAE,MAAM,IAAI,cAAc,SAAS,MAAM,QAAQ;AAAA,IACnD;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,SAAS,cAAc,SAAS,MAAM,QAAQ;AAAA,MACtD,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,UAAU;AAAA,IAC3D;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,MACP,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO;AAAA,MAC/C,EAAE,MAAM,IAAI,cAAc,SAAS,MAAM,QAAQ;AAAA,IACnD;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,SAAS,MAAM,QAAQ,CAAC;AAAA,EAC9D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,SAAS,cAAc,SAAS,MAAM,QAAQ,CAAC;AAAA,IAChE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACvE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,cAAc,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACzE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,cAAc,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACzE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,kBAAkB,MAAM,UAAU;AAAA,MAClE,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,IAC9D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,kBAAkB,MAAM,UAAU;AAAA,MAClE,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,IAC1D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,mBAAmB,MAAM,UAAU;AAAA,MACnE,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,IAC1D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,OAAO,cAAc,mBAAmB,MAAM,UAAU;AAAA,MAChE,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,IAC9D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,OAAO,cAAc,mBAAmB,MAAM,UAAU,CAAC;AAAA,IAC1E,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA,EAAE,iBAAiB,WAAW,MAAM,UAAU;AAChD;AAKO,IAAM,6BAA6B;AAAA,EACxC,GAAG;AACL;AAKO,IAAM,4BAA4B;AAAA,EACvC,SAAS;AAAA,EACT,KAAK;AACP;AAUO,IAAM,wBAAwB;AAAA,EACnC,EAAE,iBAAiB,cAAc,MAAM,eAAe,QAAQ,CAAC,EAAE;AAAA,EACjE;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACvE,EAAE,MAAM,OAAO,cAAc,SAAS,MAAM,SAAS,SAAS,MAAM;AAAA,IACtE;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,UAC1D,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,UACxD,EAAE,MAAM,OAAO,cAAc,SAAS,MAAM,QAAQ;AAAA,QACtD;AAAA,MACF;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,MAC3D,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,UAAU;AAAA,MACzD,EAAE,MAAM,QAAQ,cAAc,SAAS,MAAM,QAAQ;AAAA,IACvD;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU;AAAA,MACrD,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU;AAAA,MACrD,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU;AAAA,IACvD;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,SAAS,MAAM,QAAQ,CAAC;AAAA,EAC9D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AACF;AAMO,IAAM,4BAA4B;AAAA,EACvC,IAAI;AAAA,EACJ,KAAK;AACP;AAMO,IAAM,2BAA2B;AAAA,EACtC,SAAS;AAAA,EACT,KAAK;AACP;AAUO,IAAM,oBAAoB;AAAA,EAC/B;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,cAAc,cAAc,WAAW,MAAM,UAAU;AAAA,MAC/D,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,IACnE;AAAA,EACF;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,eAAe,cAAc,WAAW,MAAM,UAAU;AAAA,MAChE,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,MAC7D,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,MAC/D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,eAAe,cAAc,WAAW,MAAM,UAAU;AAAA,MAChE,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,MAC7D,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,MAC/D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,eAAe,cAAc,WAAW,MAAM,UAAU;AAAA,MAChE,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,MAC1D,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,MAC7D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AACF;AAMO,IAAM,wBAAwB;AAAA,EACnC,IAAI;AAAA,EACJ,KAAK;AACP;AAMO,IAAM,uBAAuB;AAAA,EAClC,SAAS;AAAA,EACT,KAAK;AACP;AAUO,IAAM,iBAAiB;AAAA,EAC5B;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,aAAa,cAAc,WAAW,MAAM,UAAU;AAAA,MAC9D,EAAE,MAAM,oBAAoB,cAAc,WAAW,MAAM,UAAU;AAAA,IACvE;AAAA,EACF;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP,EAAE,MAAM,IAAI,cAAc,4BAA4B,MAAM,UAAU;AAAA,IACxE;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,MAC7D,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,IAC9D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACvE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,mBAAmB,cAAc,WAAW,MAAM,UAAU;AAAA,IACtE;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AACF;AAMO,IAAM,qBAAqB;AAAA,EAChC,IAAI;AAAA,EACJ,KAAK;AACP;AAMO,IAAM,oBAAoB;AAAA,EAC/B,SAAS;AAAA,EACT,KAAK;AACP;AASO,IAAM,mCAAmC;AAAA,EAC9C;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,kBAAkB,cAAc,WAAW,MAAM,UAAU;AAAA,IACrE;AAAA,EACF;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS;AAAA,MACxD,EAAE,MAAM,WAAW,cAAc,UAAU,MAAM,SAAS;AAAA,IAC5D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IAC/D,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AACF;AAKO,IAAM,uCAAuC;AAAA,EAClD,IAAI;AACN;AAKO,IAAM,sCAAsC;AAAA,EACjD,SAAS;AAAA,EACT,KAAK;AACP;AASO,IAAM,iDAAiD;AAAA,EAC5D;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,kBAAkB,cAAc,WAAW,MAAM,UAAU;AAAA,IACrE;AAAA,EACF;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS;AAAA,MACxD,EAAE,MAAM,WAAW,cAAc,UAAU,MAAM,SAAS;AAAA,IAC5D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IAC/D,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AACF;AAKO,IAAM,qDAAqD;AAAA,EAChE,KAAK;AACP;AAKO,IAAM,oDAAoD;AAAA,EAC/D,SAAS;AAAA,EACT,KAAK;AACP;AAUO,IAAM,cAAc;AAAA,EACzB;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS;AAAA,MACxD,EAAE,MAAM,WAAW,cAAc,UAAU,MAAM,SAAS;AAAA,MAC1D,EAAE,MAAM,oBAAoB,cAAc,WAAW,MAAM,UAAU;AAAA,MACrE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,YAAY,cAAc,QAAQ,MAAM,QAAQ,SAAS,MAAM;AAAA,IACzE;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,SAAS,MAAM,SAAS,SAAS,MAAM;AAAA,IAC1E;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACtE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP,EAAE,MAAM,IAAI,cAAc,8BAA8B,MAAM,UAAU;AAAA,IAC1E;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU;AAAA,MACrD,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU;AAAA,IACvD;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACpE,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACtE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACtE,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS;AAAA,MACxD,EAAE,MAAM,WAAW,cAAc,UAAU,MAAM,SAAS;AAAA,IAC5D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,MAC1D,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,IAC/D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,cAAc,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACzE,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,cAAc,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACzE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACtE,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,UAAU;AAAA,MACzD,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,UAAU;AAAA,MACvD,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,IAC9D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,UAAU;AAAA,MACzD,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,UAAU;AAAA,MACvD,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,QAAQ,cAAc,SAAS,MAAM,QAAQ;AAAA,IACvD;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU;AAAA,MACrD,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO;AAAA,IACjD;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,eAAe,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,IACxE,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACrE,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACvE,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,UAAU;AAAA,MACzD,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,UAAU;AAAA,MACvD,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,IAC9D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AACF;AAMO,IAAM,kBAAkB;AAAA,EAC7B,IAAI;AAAA,EACJ,KAAK;AACP;AAMO,IAAM,iBAAiB;AAAA,EAC5B,SAAS;AAAA,EACT,KAAK;AACP;AAUO,IAAM,uBAAuB;AAAA,EAClC;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,MACA,EAAE,MAAM,sBAAsB,cAAc,WAAW,MAAM,UAAU;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,MACA,EAAE,MAAM,oBAAoB,cAAc,WAAW,MAAM,UAAU;AAAA,IACvE;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IACvE,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AACF;AAMO,IAAM,2BAA2B;AAAA,EACtC,IAAI;AAAA,EACJ,KAAK;AACP;AAMO,IAAM,0BAA0B;AAAA,EACrC,SAAS;AAAA,EACT,KAAK;AACP;AAUO,IAAM,qBAAqB;AAAA,EAChC;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,kBAAkB,cAAc,WAAW,MAAM,UAAU;AAAA,MACnE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,SAAS,MAAM,SAAS,SAAS,MAAM;AAAA,IAC1E;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,MAC7D;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,UACV,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,UAC3D,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,QAC5D;AAAA,MACF;AAAA,MACA,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,eAAe,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IAC1E,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IAC/D,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,SAAS,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,IAClE,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IAC/D,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,aAAa,cAAc,aAAa,MAAM,YAAY;AAAA,MAClE,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,IACnE;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU;AAAA,MACrD,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU;AAAA,IACvD;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AACF;AAMO,IAAM,yBAAyB;AAAA,EACpC,IAAI;AAAA,EACJ,KAAK;AACP;AAMO,IAAM,wBAAwB;AAAA,EACnC,SAAS;AAAA,EACT,KAAK;AACP;AASO,IAAM,kBAAkB;AAAA,EAC7B;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,cAAc,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAC3E;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA,EAAE,iBAAiB,WAAW,MAAM,UAAU;AAChD;AAKO,IAAM,sBAAsB;AAAA,EACjC,KAAK;AACP;AAKO,IAAM,qBAAqB;AAAA,EAChC,SAAS;AAAA,EACT,KAAK;AACP;AASO,IAAM,oBAAoB;AAAA,EAC/B,EAAE,iBAAiB,cAAc,MAAM,eAAe,QAAQ,CAAC,EAAE;AAAA,EACjE;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,SAAS,cAAc,SAAS,MAAM,QAAQ,CAAC;AAAA,IAChE,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,SAAS,cAAc,SAAS,MAAM,QAAQ,CAAC;AAAA,IAChE,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AACF;AAKO,IAAM,wBAAwB;AAAA,EACnC,KAAK;AACP;AAKO,IAAM,uBAAuB;AAAA,EAClC,SAAS;AAAA,EACT,KAAK;AACP;AASO,IAAM,aAAa;AAAA,EACxB,EAAE,iBAAiB,cAAc,MAAM,eAAe,QAAQ,CAAC,EAAE;AAAA,EACjE;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,UAAU,MAAM,SAAS;AAAA,MAC1D,EAAE,MAAM,cAAc,cAAc,UAAU,MAAM,SAAS;AAAA,MAC7D,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,MAC7D,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,MAC1D,EAAE,MAAM,mBAAmB,cAAc,UAAU,MAAM,SAAS;AAAA,MAClE,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE,EAAE,MAAM,kBAAkB,cAAc,WAAW,MAAM,UAAU;AAAA,MACnE,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,IACnE;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AACF;AAKO,IAAM,iBAAiB;AAAA,EAC5B,KAAK;AACP;AAKO,IAAM,gBAAgB;AAAA,EAC3B,SAAS;AAAA,EACT,KAAK;AACP;AASO,IAAM,gBAAgB;AAAA,EAC3B;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,cAAc,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAC3E;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA,EAAE,iBAAiB,WAAW,MAAM,UAAU;AAChD;AAKO,IAAM,oBAAoB;AAAA,EAC/B,KAAK;AACP;AAKO,IAAM,mBAAmB;AAAA,EAC9B,SAAS;AAAA,EACT,KAAK;AACP;AASO,IAAM,4BAA4B;AAAA,EACvC;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,SAAS,MAAM,SAAS,SAAS,MAAM;AAAA,IAC1E;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,WAAW,cAAc,SAAS,MAAM,SAAS,SAAS,MAAM;AAAA,MACxE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,YAAY,cAAc,SAAS,MAAM,QAAQ;AAAA,MACzD,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,IACjE;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IAC/D,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,MAC3D,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,UAAU,cAAc,WAAW,MAAM,UAAU;AAAA,MAC3D,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE,EAAE,MAAM,YAAY,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC3D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,YAAY,cAAc,SAAS,MAAM,QAAQ;AAAA,MACzD,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,IACjE;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IAC/D,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AACF;AAKO,IAAM,gCAAgC;AAAA,EAC3C,KAAK;AACP;AAKO,IAAM,+BAA+B;AAAA,EAC1C,SAAS;AAAA,EACT,KAAK;AACP;AASO,IAAM,sBAAsB;AAAA,EACjC;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACtE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACtE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,WAAW,MAAM,WAAW,SAAS,KAAK;AAAA,MACxE,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,eAAe,cAAc,WAAW,MAAM,UAAU;AAAA,MAChE,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,MAC/D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,eAAe,cAAc,WAAW,MAAM,UAAU;AAAA,MAChE,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,MAC/D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,MAC/D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,MAC/D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU;AAAA,MACrD,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU;AAAA,IACvD;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,eAAe,cAAc,WAAW,MAAM,UAAU;AAAA,MAChE,EAAE,MAAM,gBAAgB,cAAc,WAAW,MAAM,UAAU;AAAA,MACjE,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,MAC1D,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,MAC1D,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,MAC7D,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,MAC7D,EAAE,MAAM,SAAS,cAAc,WAAW,MAAM,UAAU;AAAA,MAC1D,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,MACP;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,MAC7D,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,MAC/D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,YAAY,cAAc,WAAW,MAAM,UAAU;AAAA,MAC7D,EAAE,MAAM,OAAO,cAAc,WAAW,MAAM,UAAU;AAAA,MACxD,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,gBAAgB,cAAc,UAAU,MAAM,SAAS;AAAA,MAC/D,EAAE,MAAM,cAAc,cAAc,SAAS,MAAM,QAAQ;AAAA,IAC7D;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA,EAAE,iBAAiB,WAAW,MAAM,UAAU;AAChD;AAKO,IAAM,0BAA0B;AAAA,EACrC,KAAK;AACP;AAKO,IAAM,yBAAyB;AAAA,EACpC,SAAS;AAAA,EACT,KAAK;AACP;AASO,IAAM,yBAAyB;AAAA,EACpC,EAAE,iBAAiB,cAAc,MAAM,eAAe,QAAQ,CAAC,EAAE;AAAA,EACjE;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,QAAQ,cAAc,SAAS,MAAM,SAAS,SAAS,MAAM;AAAA,MACrE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,EAAE,MAAM,WAAW,cAAc,WAAW,MAAM,UAAU;AAAA,MAC5D,EAAE,MAAM,aAAa,cAAc,WAAW,MAAM,UAAU;AAAA,MAC9D,EAAE,MAAM,SAAS,cAAc,SAAS,MAAM,QAAQ;AAAA,IACxD;AAAA,IACA,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,IAC/D,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA,EAAE,iBAAiB,WAAW,MAAM,UAAU;AAChD;AAKO,IAAM,6BAA6B;AAAA,EACxC,KAAK;AACP;AAKO,IAAM,4BAA4B;AAAA,EACvC,SAAS;AAAA,EACT,KAAK;AACP;AASO,IAAM,uBAAuB;AAAA,EAClC;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC,EAAE,MAAM,cAAc,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAC3E;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,EAAE,MAAM,MAAM,cAAc,WAAW,MAAM,WAAW,SAAS,MAAM;AAAA,MACvE;AAAA,QACE,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,WAAW,MAAM,UAAU,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,EAAE,MAAM,IAAI,cAAc,UAAU,MAAM,SAAS,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,IACE,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,QAAQ,CAAC;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,EACZ;AAAA,EACA,EAAE,iBAAiB,WAAW,MAAM,UAAU;AAChD;AAKO,IAAM,2BAA2B;AAAA,EACtC,KAAK;AACP;AAKO,IAAM,0BAA0B;AAAA,EACrC,SAAS;AAAA,EACT,KAAK;AACP;AAgBO,SAAS,sBAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,4BAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,uBAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,uBAKd,SAaQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiE;AAAA,IACtE,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,mCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO;AAAA,IACL;AAAA,MACE,KAAK;AAAA,MACL,SACE,sBAAsB,OAA6C;AAAA,MACrE,cAAc;AAAA,MACd,GAAG;AAAA,IACL;AAAA,EACF;AACF;AAQO,SAAS,4BAId,SAcQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAgE;AAAA,IACrE,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,mCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO;AAAA,IACL;AAAA,MACE,KAAK;AAAA,MACL,SACE,sBAAsB,OAA6C;AAAA,MACrE,cAAc;AAAA,MACd,GAAG;AAAA,IACL;AAAA,EACF;AACF;AAQO,SAAS,8BACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,GAAG;AAAA,EACL,CAA2E;AAC7E;AAQO,SAAS,0CACd,SAMuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAiF;AACnF;AAQO,SAAS,mCACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,0CACd,SAMuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAiF;AACnF;AAQO,SAAS,uBACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,GAAG;AAAA,EACL,CAAiE;AACnE;AAQO,SAAS,iCACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAmE;AACrE;AAQO,SAAS,2CACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA6E;AAC/E;AAQO,SAAS,qBAId,SAGsD,CAAC,GACvD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,qBAAqB,OAA4C;AAAA,IAC1E,GAAG;AAAA,EACL,CAA+E;AACjF;AAQO,SAAS,sBAId,SAGsD,CAAC,GACvD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,qBAAqB,OAA4C;AAAA,IAC1E,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA+E;AACjF;AAQO,SAAS,sBAKd,SAaQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAgE;AAAA,IACrE,KAAK;AAAA,IACL,SAAS,qBAAqB,OAA4C;AAAA,IAC1E,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,qBAId,SAcQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAyD;AAAA,IAC9D,KAAK;AAAA,IACL,SAAS,qBAAqB,OAA4C;AAAA,IAC1E,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,6BAId,SAkBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiE;AAAA,IACtE,KAAK;AAAA,IACL,SAAS,qBAAqB,OAA4C;AAAA,IAC1E,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,yBAId,SAcQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAA6D;AAAA,IAClE,KAAK;AAAA,IACL,SAAS,qBAAqB,OAA4C;AAAA,IAC1E,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,8BAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAkE;AAAA,IACvE,KAAK;AAAA,IACL,SAAS,qBAAqB,OAA4C;AAAA,IAC1E,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,+BAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAmE;AAAA,IACxE,KAAK;AAAA,IACL,SAAS,qBAAqB,OAA4C;AAAA,IAC1E,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,4BAId,SAkBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAgE;AAAA,IACrE,KAAK;AAAA,IACL,SAAS,qBAAqB,OAA4C;AAAA,IAC1E,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,6BACd,SAGsD,CAAC,GACvD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,qBAAqB,OAA4C;AAAA,IAC1E,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,4BACd,SAGsD,CAAC,GACvD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,qBAAqB,OAA4C;AAAA,IAC1E,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmE;AACrE;AAQO,SAAS,oCACd,SAGsD,CAAC,GACvD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,qBAAqB,OAA4C;AAAA,IAC1E,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA2E;AAC7E;AAQO,SAAS,gCACd,SAGsD,CAAC,GACvD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,qBAAqB,OAA4C;AAAA,IAC1E,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAuE;AACzE;AAQO,SAAS,qCACd,SAGsD,CAAC,GACvD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,qBAAqB,OAA4C;AAAA,IAC1E,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA4E;AAC9E;AAQO,SAAS,sCACd,SAGsD,CAAC,GACvD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,qBAAqB,OAA4C;AAAA,IAC1E,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6E;AAC/E;AAQO,SAAS,mCACd,SAGsD,CAAC,GACvD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,qBAAqB,OAA4C;AAAA,IAC1E,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,sBACd,SAGsD,CAAC,GACvD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,qBAAqB,OAA4C;AAAA,IAC1E,GAAG;AAAA,EACL,CAAgE;AAClE;AAQO,SAAS,kCACd,SAGsD,CAAC,GACvD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,qBAAqB,OAA4C;AAAA,IAC1E,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAoE;AACtE;AAQO,SAAS,iCACd,SAGsD,CAAC,GACvD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,qBAAqB,OAA4C;AAAA,IAC1E,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAmE;AACrE;AAQO,SAAS,mCACd,SAGsD,CAAC,GACvD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,qBAAqB,OAA4C;AAAA,IAC1E,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAqE;AACvE;AAQO,SAAS,oCACd,SAGsD,CAAC,GACvD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,qBAAqB,OAA4C;AAAA,IAC1E,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAsE;AACxE;AAQO,SAAS,iCACd,SAGsD,CAAC,GACvD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,qBAAqB,OAA4C;AAAA,IAC1E,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAmE;AACrE;AASO,SAAS,wBAId,SAOyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,GAAG;AAAA,EACL,CAAkF;AACpF;AASO,SAAS,yBAId,SAOyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAkF;AACpF;AASO,SAAS,yBACd,SAGyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,GAAG;AAAA,EACL,CAAmE;AACrE;AASO,SAAS,uDACd,SAMyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA4F;AAC9F;AASO,SAAS,uBAId,SAOwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,GAAG;AAAA,EACL,CAAiF;AACnF;AASO,SAAS,wBAId,SAOwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAiF;AACnF;AASO,SAAS,wBACd,SAGwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,GAAG;AAAA,EACL,CAAkE;AACpE;AASO,SAAS,sDACd,SAMwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA2F;AAC7F;AASO,SAAS,sBAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,GAAG;AAAA,EACL,CAAgF;AAClF;AASO,SAAS,uBAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AASO,SAAS,uBACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,GAAG;AAAA,EACL,CAAiE;AACnE;AASO,SAAS,qDACd,SAMuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA0F;AAC5F;AASO,SAAS,iBAId,SAGkD,CAAC,GACnD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,iBAAiB,OAAwC;AAAA,IAClE,GAAG;AAAA,EACL,CAA2E;AAC7E;AASO,SAAS,kBAId,SAGkD,CAAC,GACnD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,iBAAiB,OAAwC;AAAA,IAClE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA2E;AAC7E;AAOO,SAAS,eAId,SAGgD,CAAC,GACjD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,GAAG;AAAA,EACL,CAAyE;AAC3E;AAOO,SAAS,gBAId,SAGgD,CAAC,GACjD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAyE;AAC3E;AAOO,SAAS,qBAId,SAGgD,CAAC,GACjD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAyE;AAC3E;AAOO,SAAS,gBAId,SAGgD,CAAC,GACjD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAyE;AAC3E;AAOO,SAAS,gBAKd,SAUQ,CAAC,GACT;AACA,SAAO,iBAA0D;AAAA,IAC/D,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,eAId,SAWQ,CAAC,GACT;AACA,SAAO,iBAAmD;AAAA,IACxD,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,uBAId,SAkBQ,CAAC,GACT;AACA,SAAO,iBAA2D;AAAA,IAChE,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,iBAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAAqD;AAAA,IAC1D,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,eAId,SAWQ,CAAC,GACT;AACA,SAAO,iBAAmD;AAAA,IACxD,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,mBAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAAuD;AAAA,IAC5D,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,iBAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAAqD;AAAA,IAC1D,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,wBAId,SAkBQ,CAAC,GACT;AACA,SAAO,iBAA4D;AAAA,IACjE,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,yBAId,SAkBQ,CAAC,GACT;AACA,SAAO,iBAA6D;AAAA,IAClE,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,sBAId,SAkBQ,CAAC,GACT;AACA,SAAO,iBAA0D;AAAA,IAC/D,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,uBACd,SAGgD,CAAC,GACjD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,GAAG;AAAA,EACL,CAAoE;AACtE;AAOO,SAAS,sBACd,SAGgD,CAAC,GACjD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6D;AAC/D;AAOO,SAAS,8BACd,SAGgD,CAAC,GACjD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAqE;AACvE;AAOO,SAAS,wBACd,SAGgD,CAAC,GACjD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA+D;AACjE;AAOO,SAAS,sBACd,SAGgD,CAAC,GACjD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6D;AAC/D;AAOO,SAAS,0BACd,SAGgD,CAAC,GACjD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAiE;AACnE;AAOO,SAAS,wBACd,SAGgD,CAAC,GACjD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA+D;AACjE;AAOO,SAAS,+BACd,SAGgD,CAAC,GACjD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAsE;AACxE;AAOO,SAAS,gCACd,SAGgD,CAAC,GACjD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAuE;AACzE;AAOO,SAAS,6BACd,SAGgD,CAAC,GACjD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAoE;AACtE;AAOO,SAAS,gBACd,SAGgD,CAAC,GACjD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,GAAG;AAAA,EACL,CAA0D;AAC5D;AAOO,SAAS,2BACd,SAGgD,CAAC,GACjD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA6D;AAC/D;AAOO,SAAS,4BACd,SAGgD,CAAC,GACjD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA8D;AAChE;AAOO,SAAS,iCACd,SAGgD,CAAC,GACjD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAmE;AACrE;AAOO,SAAS,4BACd,SAGgD,CAAC,GACjD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA8D;AAChE;AAOO,SAAS,2BACd,SAGgD,CAAC,GACjD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA6D;AAC/D;AAOO,SAAS,6BACd,SAGgD,CAAC,GACjD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA+D;AACjE;AAOO,SAAS,8BACd,SAGgD,CAAC,GACjD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAgE;AAClE;AAOO,SAAS,2BACd,SAGgD,CAAC,GACjD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,eAAe,CAAC;AAAA,IACzB,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA6D;AAC/D;AAOO,SAAS,qBAId,SAGsD,CAAC,GACvD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,GAAG;AAAA,EACL,CAA+E;AACjF;AAOO,SAAS,sBAId,SAGsD,CAAC,GACvD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA+E;AACjF;AAOO,SAAS,2BAId,SAGsD,CAAC,GACvD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA+E;AACjF;AAOO,SAAS,sBAId,SAGsD,CAAC,GACvD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA+E;AACjF;AAOO,SAAS,sBAKd,SAaQ,CAAC,GACT;AACA,SAAO,iBAAgE;AAAA,IACrE,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,qBAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAAyD;AAAA,IAC9D,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,6BAId,SAkBQ,CAAC,GACT;AACA,SAAO,iBAAiE;AAAA,IACtE,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,uBAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAA2D;AAAA,IAChE,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,qBAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAAyD;AAAA,IAC9D,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,yBAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAA6D;AAAA,IAClE,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,uBAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAA2D;AAAA,IAChE,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,8BAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAAkE;AAAA,IACvE,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,+BAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAAmE;AAAA,IACxE,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,4BAId,SAkBQ,CAAC,GACT;AACA,SAAO,iBAAgE;AAAA,IACrE,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,6BACd,SAGsD,CAAC,GACvD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,GAAG;AAAA,EACL,CAA0E;AAC5E;AAOO,SAAS,4BACd,SAGsD,CAAC,GACvD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmE;AACrE;AAOO,SAAS,oCACd,SAGsD,CAAC,GACvD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA2E;AAC7E;AAOO,SAAS,8BACd,SAGsD,CAAC,GACvD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAqE;AACvE;AAOO,SAAS,4BACd,SAGsD,CAAC,GACvD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmE;AACrE;AAOO,SAAS,gCACd,SAGsD,CAAC,GACvD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAuE;AACzE;AAOO,SAAS,8BACd,SAGsD,CAAC,GACvD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAqE;AACvE;AAOO,SAAS,qCACd,SAGsD,CAAC,GACvD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA4E;AAC9E;AAOO,SAAS,sCACd,SAGsD,CAAC,GACvD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6E;AAC/E;AAOO,SAAS,mCACd,SAGsD,CAAC,GACvD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAOO,SAAS,sBACd,SAGsD,CAAC,GACvD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,GAAG;AAAA,EACL,CAAgE;AAClE;AAOO,SAAS,iCACd,SAGsD,CAAC,GACvD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAmE;AACrE;AAOO,SAAS,kCACd,SAGsD,CAAC,GACvD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAoE;AACtE;AAOO,SAAS,uCACd,SAGsD,CAAC,GACvD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAyE;AAC3E;AAOO,SAAS,kCACd,SAGsD,CAAC,GACvD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAoE;AACtE;AAOO,SAAS,iCACd,SAGsD,CAAC,GACvD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAmE;AACrE;AAOO,SAAS,mCACd,SAGsD,CAAC,GACvD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAqE;AACvE;AAOO,SAAS,oCACd,SAGsD,CAAC,GACvD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAsE;AACxE;AAOO,SAAS,iCACd,SAGsD,CAAC,GACvD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,qBAAqB,CAAC;AAAA,IAC/B,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAmE;AACrE;AAOO,SAAS,6BAOd,SAO8D,CAAC,GAC/D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,GAAG;AAAA,EACL,CAAuF;AACzF;AAOO,SAAS,8BAOd,SAO8D,CAAC,GAC/D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAuF;AACzF;AAOO,SAAS,mCAOd,SAO8D,CAAC,GAC/D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAuF;AACzF;AAOO,SAAS,8BAOd,SAO8D,CAAC,GAC/D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAuF;AACzF;AAOO,SAAS,8BAKd,SAiBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,6BAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAAiE;AAAA,IACtE,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,qCAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,+BAId,SAkBQ,CAAC,GACT;AACA,SAAO,iBAAmE;AAAA,IACxE,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,6BAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAAiE;AAAA,IACtE,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,iCAId,SAkBQ,CAAC,GACT;AACA,SAAO,iBAAqE;AAAA,IAC1E,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,+BAId,SAkBQ,CAAC,GACT;AACA,SAAO,iBAAmE;AAAA,IACxE,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,sCAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,uCAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,oCAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,qCAGd,SAM8D,CAAC,GAC/D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,GAAG;AAAA,EACL,CAAkF;AACpF;AAOO,SAAS,oCACd,SAG8D,CAAC,GAC/D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA2E;AAC7E;AAOO,SAAS,4CACd,SAM8D,CAAC,GAC/D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmF;AACrF;AAOO,SAAS,sCACd,SAG8D,CAAC,GAC/D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6E;AAC/E;AAOO,SAAS,oCACd,SAG8D,CAAC,GAC/D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA2E;AAC7E;AAOO,SAAS,wCACd,SAG8D,CAAC,GAC/D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA+E;AACjF;AAOO,SAAS,sCACd,SAG8D,CAAC,GAC/D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6E;AAC/E;AAOO,SAAS,6CACd,SAM8D,CAAC,GAC/D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAoF;AACtF;AAOO,SAAS,8CACd,SAM8D,CAAC,GAC/D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAqF;AACvF;AAOO,SAAS,2CACd,SAM8D,CAAC,GAC/D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAkF;AACpF;AAOO,SAAS,8BACd,SAG8D,CAAC,GAC/D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,GAAG;AAAA,EACL,CAAwE;AAC1E;AAOO,SAAS,yCACd,SAG8D,CAAC,GAC/D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA2E;AAC7E;AAOO,SAAS,0CACd,SAG8D,CAAC,GAC/D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA4E;AAC9E;AAOO,SAAS,+CACd,SAM8D,CAAC,GAC/D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAiF;AACnF;AAOO,SAAS,0CACd,SAG8D,CAAC,GAC/D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA4E;AAC9E;AAOO,SAAS,yCACd,SAG8D,CAAC,GAC/D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA2E;AAC7E;AAOO,SAAS,2CACd,SAG8D,CAAC,GAC/D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA6E;AAC/E;AAOO,SAAS,4CACd,SAG8D,CAAC,GAC/D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA8E;AAChF;AAOO,SAAS,yCACd,SAG8D,CAAC,GAC/D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,6BAA6B,GAAG;AAAA,IACzC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA2E;AAC7E;AAQO,SAAS,8BAOd,SAO+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,GAAG;AAAA,EACL,CAAwF;AAC1F;AAQO,SAAS,wCAOd,SAO+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAQO,SAAS,gDAOd,SAO+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAQO,SAAS,0DAOd,SAO+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAQO,SAAS,wDAOd,SAO+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAQO,SAAS,wCAOd,SAO+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAQO,SAAS,gCAOd,SAO+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAQO,SAAS,2CAOd,SAO+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAQO,SAAS,+CAOd,SAO+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAQO,SAAS,6CAOd,SAO+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAQO,SAAS,0CAOd,SAO+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAQO,SAAS,iCAOd,SAO+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAQO,SAAS,wCAOd,SAO+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAQO,SAAS,sCAOd,SAO+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAQO,SAAS,4CAOd,SAO+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAQO,SAAS,iCAOd,SAO+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAQO,SAAS,8CAOd,SAO+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAQO,SAAS,+BAKd,SAiBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,oCAId,SAkBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,sCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,qCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,sCAGd,SAM+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,GAAG;AAAA,EACL,CAAmF;AACrF;AAQO,SAAS,2CACd,SAM+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAkF;AACpF;AAQO,SAAS,6CACd,SAM+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAoF;AACtF;AAQO,SAAS,4CACd,SAM+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmF;AACrF;AAQO,SAAS,+BACd,SAG+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,GAAG;AAAA,EACL,CAAyE;AAC3E;AAQO,SAAS,mDACd,SAM+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAqF;AACvF;AAQO,SAAS,0CACd,SAG+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA4E;AAC9E;AAQO,SAAS,6CACd,SAG+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA+E;AACjF;AAQO,SAAS,0CACd,SAG+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA4E;AAC9E;AAQO,SAAS,oDACd,SAM+D,CAAC,GAChE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,8BACE,OACF;AAAA,IACF,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAsF;AACxF;AAQO,SAAS,sBAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,0BAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,2BAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,6BAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,yBAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,uBAKd,SAaQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiE;AAAA,IACtE,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,8BAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAkE;AAAA,IACvE,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,gCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAoE;AAAA,IACzE,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,sCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,8BACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,GAAG;AAAA,EACL,CAA2E;AAC7E;AAQO,SAAS,qCACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA4E;AAC9E;AAQO,SAAS,uCACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,6CACd,SAMuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAoF;AACtF;AAQO,SAAS,uBACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,GAAG;AAAA,EACL,CAAiE;AACnE;AAQO,SAAS,4CACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,4CACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,wBAId,SAOyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,GAAG;AAAA,EACL,CAAkF;AACpF;AAQO,SAAS,4BAId,SAOyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAkF;AACpF;AAQO,SAAS,iCAId,SAOyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAkF;AACpF;AAQO,SAAS,6BAId,SAOyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAkF;AACpF;AAQO,SAAS,2BAId,SAOyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAkF;AACpF;AAQO,SAAS,yBAKd,SAiBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAmE;AAAA,IACxE,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,+BAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAmE;AAAA,IACxE,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,iCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAqE;AAAA,IAC1E,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,6BAId,SAcQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiE;AAAA,IACtE,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,+BAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAmE;AAAA,IACxE,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,gCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAoE;AAAA,IACzE,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,kCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAsE;AAAA,IAC3E,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,8BAId,SAkBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAkE;AAAA,IACvE,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,gCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAoE;AAAA,IACzE,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,uCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,qCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,2CAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,yCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,gCACd,SAGyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,GAAG;AAAA,EACL,CAA6E;AAC/E;AAQO,SAAS,sCACd,SAGyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6E;AAC/E;AAQO,SAAS,wCACd,SAGyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA+E;AACjF;AAQO,SAAS,oCACd,SAGyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA2E;AAC7E;AAQO,SAAS,sCACd,SAGyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6E;AAC/E;AAQO,SAAS,uCACd,SAGyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,yCACd,SAGyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,qCACd,SAGyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA4E;AAC9E;AAQO,SAAS,uCACd,SAGyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,8CACd,SAMyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAqF;AACvF;AAQO,SAAS,4CACd,SAMyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmF;AACrF;AAQO,SAAS,kDACd,SAMyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAyF;AAC3F;AAQO,SAAS,gDACd,SAMyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAuF;AACzF;AAQO,SAAS,yBACd,SAGyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,GAAG;AAAA,EACL,CAAmE;AACrE;AAQO,SAAS,6CACd,SAGyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA+E;AACjF;AAQO,SAAS,6CACd,SAGyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA+E;AACjF;AAQO,SAAS,8CACd,SAGyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,iDACd,SAMyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAmF;AACrF;AAQO,SAAS,2CACd,SAGyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA6E;AAC/E;AAQO,SAAS,2CACd,SAGyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA6E;AAC/E;AAQO,SAAS,4CACd,SAGyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,+CACd,SAMyD,CAAC,GAC1D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,wBAAwB,OAA+C;AAAA,IACzE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAiF;AACnF;AAQO,SAAS,sBAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,4BAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,2CAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,6BAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,0BAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,oCAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,oCAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,6BAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,kCAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,uCAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,mCAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,mCAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,iCAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,iCAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,qCAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,mCAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,yBAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,uBAKd,SAaQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiE;AAAA,IACtE,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,iCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAqE;AAAA,IAC1E,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,4BAId,SAcQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAgE;AAAA,IACrE,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,iCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAqE;AAAA,IAC1E,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,8BACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,GAAG;AAAA,EACL,CAA2E;AAC7E;AAQO,SAAS,wCACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA+E;AACjF;AAQO,SAAS,mCACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,wCACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA+E;AACjF;AAQO,SAAS,uBACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,GAAG;AAAA,EACL,CAAiE;AACnE;AAQO,SAAS,kCACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAoE;AACtE;AAQO,SAAS,qCACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAuE;AACzE;AAQO,SAAS,qCACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAuE;AACzE;AASO,SAAS,oCAOd,SAOqE,CAAC,GACtE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,oCACE,OACF;AAAA,IACF,GAAG;AAAA,EACL,CAA8F;AAChG;AASO,SAAS,sCAOd,SAOqE,CAAC,GACtE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,oCACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8F;AAChG;AASO,SAAS,uCAOd,SAOqE,CAAC,GACtE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,oCACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8F;AAChG;AASO,SAAS,qCAKd,SAiBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SACE,oCACE,OACF;AAAA,IACF,GAAG;AAAA,EACL,CAAQ;AACV;AASO,SAAS,2DAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SACE,oCACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AASO,SAAS,qDAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SACE,oCACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AASO,SAAS,4CAGd,SAMqE,CAAC,GACtE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,oCACE,OACF;AAAA,IACF,GAAG;AAAA,EACL,CAAyF;AAC3F;AASO,SAAS,kEACd,SAMqE,CAAC,GACtE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,oCACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAyG;AAC3G;AASO,SAAS,4DACd,SAMqE,CAAC,GACtE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,oCACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmG;AACrG;AASO,SAAS,qCACd,SAGqE,CAAC,GACtE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,oCACE,OACF;AAAA,IACF,GAAG;AAAA,EACL,CAA+E;AACjF;AASO,SAAS,iEACd,SAMqE,CAAC,GACtE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,oCACE,OACF;AAAA,IACF,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAmG;AACrG;AASO,SAAS,2DACd,SAMqE,CAAC,GACtE;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,oCACE,OACF;AAAA,IACF,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA6F;AAC/F;AAQO,SAAS,sBAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,0BAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,0BAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,8BAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,sCAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,mCAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,0BAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,iCAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,wBAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,wBAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,mCAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,yBAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,uBAKd,SAaQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiE;AAAA,IACtE,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,oCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,2BAId,SAcQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAA+D;AAAA,IACpE,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,+CAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,4BAId,SAcQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAgE;AAAA,IACrE,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,uBAId,SAcQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAA2D;AAAA,IAChE,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,4CAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,yBAId,SAcQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAA6D;AAAA,IAClE,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,8BACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,GAAG;AAAA,EACL,CAA2E;AAC7E;AAQO,SAAS,2CACd,SAMuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAkF;AACpF;AAQO,SAAS,kCACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAyE;AAC3E;AAQO,SAAS,sDACd,SAMuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6F;AAC/F;AAQO,SAAS,mCACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,8BACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAqE;AACvE;AAQO,SAAS,mDACd,SAMuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0F;AAC5F;AAQO,SAAS,gCACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAuE;AACzE;AAQO,SAAS,uBACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,GAAG;AAAA,EACL,CAAiE;AACnE;AAQO,SAAS,kCACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAoE;AACtE;AAQO,SAAS,6BACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA+D;AACjE;AAQO,SAAS,2CACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA6E;AAC/E;AAQO,SAAS,+BACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAiE;AACnE;AAQO,SAAS,0CACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA4E;AAC9E;AAQO,SAAS,uCACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAyE;AAC3E;AAQO,SAAS,oBAId,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,sBAId,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,qBAKd,SAaQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAA+D;AAAA,IACpE,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,sBAId,SAcQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAA0D;AAAA,IAC/D,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,4BACd,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,GAAG;AAAA,EACL,CAAyE;AAC3E;AAQO,SAAS,6BACd,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAoE;AACtE;AAQO,SAAS,kBAId,SAGmD,CAAC,GACpD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,GAAG;AAAA,EACL,CAA4E;AAC9E;AAQO,SAAS,4BAId,SAGmD,CAAC,GACpD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA4E;AAC9E;AAQO,SAAS,2BAId,SAGmD,CAAC,GACpD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA4E;AAC9E;AAQO,SAAS,oCAId,SAGmD,CAAC,GACpD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA4E;AAC9E;AAQO,SAAS,gCAId,SAGmD,CAAC,GACpD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA4E;AAC9E;AAQO,SAAS,yBAId,SAGmD,CAAC,GACpD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA4E;AAC9E;AAQO,SAAS,mBAId,SAGmD,CAAC,GACpD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA4E;AAC9E;AAQO,SAAS,uBAId,SAGmD,CAAC,GACpD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA4E;AAC9E;AAQO,SAAS,mBAKd,SAaQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAA6D;AAAA,IAClE,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,8BAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAkE;AAAA,IACvE,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,+BAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAmE;AAAA,IACxE,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,wBAId,SAcQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAA4D;AAAA,IACjE,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,+BAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAmE;AAAA,IACxE,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,mCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO;AAAA,IACL;AAAA,MACE,KAAK;AAAA,MACL,SAAS,kBAAkB,OAAyC;AAAA,MACpE,cAAc;AAAA,MACd,GAAG;AAAA,IACL;AAAA,EACF;AACF;AAQO,SAAS,0BAId,SAkBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAA8D;AAAA,IACnE,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,0BAId,SAkBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAA8D;AAAA,IACnE,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,+BAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAmE;AAAA,IACxE,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,qBAId,SAcQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAyD;AAAA,IAC9D,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,4BAId,SAkBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAgE;AAAA,IACrE,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,0BACd,SAGmD,CAAC,GACpD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,GAAG;AAAA,EACL,CAAuE;AACzE;AAQO,SAAS,qCACd,SAGmD,CAAC,GACpD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA4E;AAC9E;AAQO,SAAS,sCACd,SAGmD,CAAC,GACpD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6E;AAC/E;AAQO,SAAS,+BACd,SAGmD,CAAC,GACpD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAsE;AACxE;AAQO,SAAS,sCACd,SAGmD,CAAC,GACpD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6E;AAC/E;AAQO,SAAS,0CACd,SAMmD,CAAC,GACpD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAiF;AACnF;AAQO,SAAS,iCACd,SAGmD,CAAC,GACpD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwE;AAC1E;AAQO,SAAS,iCACd,SAGmD,CAAC,GACpD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwE;AAC1E;AAQO,SAAS,sCACd,SAGmD,CAAC,GACpD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6E;AAC/E;AAQO,SAAS,4BACd,SAGmD,CAAC,GACpD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmE;AACrE;AAQO,SAAS,mCACd,SAGmD,CAAC,GACpD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,mBACd,SAGmD,CAAC,GACpD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,GAAG;AAAA,EACL,CAA6D;AAC/D;AAQO,SAAS,uCACd,SAGmD,CAAC,GACpD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,kBAAkB,OAAyC;AAAA,IACpE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAyE;AAC3E;AAQO,SAAS,oBAId,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,qCAId,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,2BAId,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,wBAId,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,+BAId,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,wBAId,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,qBAId,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,8BAId,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,sBAId,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,iCAId,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,uBAId,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,qBAKd,SAaQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAA+D;AAAA,IACpE,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,0BAId,SAcQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAA8D;AAAA,IACnE,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,iCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAqE;AAAA,IAC1E,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,8BAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAkE;AAAA,IACvE,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,4BAId,SAkBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAgE;AAAA,IACrE,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,2BAId,SAkBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAA+D;AAAA,IACpE,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,iCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAqE;AAAA,IAC1E,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,oCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,iCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAqE;AAAA,IAC1E,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,4BACd,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,GAAG;AAAA,EACL,CAAyE;AAC3E;AAQO,SAAS,iCACd,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwE;AAC1E;AAQO,SAAS,wCACd,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA+E;AACjF;AAQO,SAAS,qCACd,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA4E;AAC9E;AAQO,SAAS,mCACd,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,kCACd,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAyE;AAC3E;AAQO,SAAS,wCACd,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA+E;AACjF;AAQO,SAAS,2CACd,SAMqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAkF;AACpF;AAQO,SAAS,wCACd,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA+E;AACjF;AAQO,SAAS,qBACd,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,GAAG;AAAA,EACL,CAA+D;AACjE;AAQO,SAAS,iCACd,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAmE;AACrE;AAQO,SAAS,gCACd,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAkE;AACpE;AAQO,SAAS,yCACd,SAGqD,CAAC,GACtD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,oBAAoB,OAA2C;AAAA,IACxE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA2E;AAC7E;AAOO,SAAS,sBAId,SAGuD,CAAC,GACxD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,oCAId,SAGuD,CAAC,GACxD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,mCAId,SAGuD,CAAC,GACxD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,wBAId,SAGuD,CAAC,GACxD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,6BAId,SAGuD,CAAC,GACxD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,kCAId,SAGuD,CAAC,GACxD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,wBAId,SAGuD,CAAC,GACxD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,2BAId,SAGuD,CAAC,GACxD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,6CAId,SAGuD,CAAC,GACxD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,2CAId,SAGuD,CAAC,GACxD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,6CAId,SAGuD,CAAC,GACxD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,uBAId,SAGuD,CAAC,GACxD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,uBAKd,SAaQ,CAAC,GACT;AACA,SAAO,iBAAiE;AAAA,IACtE,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,uBAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAA2D;AAAA,IAChE,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,0BAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAA8D;AAAA,IACnE,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,4BAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAAgE;AAAA,IACrE,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,wBAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAA4D;AAAA,IACjE,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,wBAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAA4D;AAAA,IACjE,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,mCAId,SAsBQ,CAAC,GACT;AACA,SAAO;AAAA,IACL;AAAA,MACE,KAAK;AAAA,MACL,SAAS,sBAAsB,CAAC;AAAA,MAChC,cAAc;AAAA,MACd,GAAG;AAAA,IACL;AAAA,EACF;AACF;AAOO,SAAS,uBAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAA2D;AAAA,IAChE,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,uBAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAA2D;AAAA,IAChE,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,uBAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAA2D;AAAA,IAChE,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,uBAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAA2D;AAAA,IAChE,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,uBAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAA2D;AAAA,IAChE,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,mCAId,SAsBQ,CAAC,GACT;AACA,SAAO;AAAA,IACL;AAAA,MACE,KAAK;AAAA,MACL,SAAS,sBAAsB,CAAC;AAAA,MAChC,cAAc;AAAA,MACd,GAAG;AAAA,IACL;AAAA,EACF;AACF;AAOO,SAAS,qCAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,8BACd,SAGuD,CAAC,GACxD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,GAAG;AAAA,EACL,CAA2E;AAC7E;AAOO,SAAS,8BACd,SAGuD,CAAC,GACxD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAqE;AACvE;AAOO,SAAS,iCACd,SAGuD,CAAC,GACxD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwE;AAC1E;AAOO,SAAS,mCACd,SAGuD,CAAC,GACxD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAOO,SAAS,+BACd,SAGuD,CAAC,GACxD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAsE;AACxE;AAOO,SAAS,+BACd,SAGuD,CAAC,GACxD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAsE;AACxE;AAOO,SAAS,0CACd,SAMuD,CAAC,GACxD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAiF;AACnF;AAOO,SAAS,8BACd,SAGuD,CAAC,GACxD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAqE;AACvE;AAOO,SAAS,8BACd,SAGuD,CAAC,GACxD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAqE;AACvE;AAOO,SAAS,8BACd,SAGuD,CAAC,GACxD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAqE;AACvE;AAOO,SAAS,8BACd,SAGuD,CAAC,GACxD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAqE;AACvE;AAOO,SAAS,8BACd,SAGuD,CAAC,GACxD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAqE;AACvE;AAOO,SAAS,0CACd,SAMuD,CAAC,GACxD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAiF;AACnF;AAOO,SAAS,4CACd,SAMuD,CAAC,GACxD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmF;AACrF;AAOO,SAAS,uBACd,SAGuD,CAAC,GACxD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,GAAG;AAAA,EACL,CAAiE;AACnE;AAOO,SAAS,kCACd,SAGuD,CAAC,GACxD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAoE;AACtE;AAOO,SAAS,2CACd,SAGuD,CAAC,GACxD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,sBAAsB,CAAC;AAAA,IAChC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA6E;AAC/E;AAOO,SAAS,4BAOd,SAO6D,CAAC,GAC9D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,GAAG;AAAA,EACL,CAAsF;AACxF;AAOO,SAAS,0CAOd,SAO6D,CAAC,GAC9D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAsF;AACxF;AAOO,SAAS,yCAOd,SAO6D,CAAC,GAC9D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAsF;AACxF;AAOO,SAAS,8BAOd,SAO6D,CAAC,GAC9D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAsF;AACxF;AAOO,SAAS,mCAOd,SAO6D,CAAC,GAC9D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAsF;AACxF;AAOO,SAAS,wCAOd,SAO6D,CAAC,GAC9D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAsF;AACxF;AAOO,SAAS,iCAOd,SAO6D,CAAC,GAC9D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAsF;AACxF;AAOO,SAAS,mDAOd,SAO6D,CAAC,GAC9D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAsF;AACxF;AAOO,SAAS,iDAOd,SAO6D,CAAC,GAC9D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAsF;AACxF;AAOO,SAAS,6BAOd,SAO6D,CAAC,GAC9D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAsF;AACxF;AAOO,SAAS,6BAKd,SAiBQ,CAAC,GACT;AACA,SAAO;AAAA,IACL;AAAA,MACE,KAAK;AAAA,MACL,SAAS,4BAA4B,CAAC;AAAA,MACtC,GAAG;AAAA,IACL;AAAA,EACF;AACF;AAOO,SAAS,6BAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAAiE;AAAA,IACtE,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,gCAId,SAkBQ,CAAC,GACT;AACA,SAAO,iBAAoE;AAAA,IACzE,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,kCAId,SAkBQ,CAAC,GACT;AACA,SAAO,iBAAsE;AAAA,IAC3E,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,yCAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,6BAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAAiE;AAAA,IACtE,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,6BAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAAiE;AAAA,IACtE,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,6BAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAAiE;AAAA,IACtE,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,6BAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAAiE;AAAA,IACtE,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,6BAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAAiE;AAAA,IACtE,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,6BAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAAiE;AAAA,IACtE,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,yCAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,yDAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,oCAGd,SAM6D,CAAC,GAC9D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,GAAG;AAAA,EACL,CAAiF;AACnF;AAOO,SAAS,oCACd,SAG6D,CAAC,GAC9D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA2E;AAC7E;AAOO,SAAS,uCACd,SAG6D,CAAC,GAC9D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8E;AAChF;AAOO,SAAS,yCACd,SAG6D,CAAC,GAC9D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,gDACd,SAM6D,CAAC,GAC9D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAuF;AACzF;AAOO,SAAS,oCACd,SAG6D,CAAC,GAC9D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA2E;AAC7E;AAOO,SAAS,oCACd,SAG6D,CAAC,GAC9D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA2E;AAC7E;AAOO,SAAS,oCACd,SAG6D,CAAC,GAC9D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA2E;AAC7E;AAOO,SAAS,oCACd,SAG6D,CAAC,GAC9D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA2E;AAC7E;AAOO,SAAS,oCACd,SAG6D,CAAC,GAC9D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA2E;AAC7E;AAOO,SAAS,oCACd,SAG6D,CAAC,GAC9D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA2E;AAC7E;AAOO,SAAS,gDACd,SAM6D,CAAC,GAC9D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAuF;AACzF;AAOO,SAAS,gEACd,SAM6D,CAAC,GAC9D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAuG;AACzG;AAOO,SAAS,6BACd,SAG6D,CAAC,GAC9D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,GAAG;AAAA,EACL,CAAuE;AACzE;AAOO,SAAS,wCACd,SAG6D,CAAC,GAC9D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA0E;AAC5E;AAOO,SAAS,iDACd,SAM6D,CAAC,GAC9D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,4BAA4B,CAAC;AAAA,IACtC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAmF;AACrF;AAOO,SAAS,2BAId,SAO4D,CAAC,GAC7D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,GAAG;AAAA,EACL,CAAqF;AACvF;AAOO,SAAS,2BAId,SAO4D,CAAC,GAC7D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAqF;AACvF;AAOO,SAAS,4BAId,SAO4D,CAAC,GAC7D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAqF;AACvF;AAOO,SAAS,gCAId,SAO4D,CAAC,GAC7D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAqF;AACvF;AAOO,SAAS,gCAId,SAO4D,CAAC,GAC7D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAqF;AACvF;AAOO,SAAS,4BAKd,SAiBQ,CAAC,GACT;AACA,SAAO,iBAAsE;AAAA,IAC3E,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,2BAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAA+D;AAAA,IACpE,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,mCAId,SAsBQ,CAAC,GACT;AACA,SAAO;AAAA,IACL;AAAA,MACE,KAAK;AAAA,MACL,SAAS,2BAA2B,CAAC;AAAA,MACrC,cAAc;AAAA,MACd,GAAG;AAAA,IACL;AAAA,EACF;AACF;AAOO,SAAS,8BAId,SAkBQ,CAAC,GACT;AACA,SAAO,iBAAkE;AAAA,IACvE,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,+BAId,SAkBQ,CAAC,GACT;AACA,SAAO,iBAAmE;AAAA,IACxE,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,mCAId,SAsBQ,CAAC,GACT;AACA,SAAO;AAAA,IACL;AAAA,MACE,KAAK;AAAA,MACL,SAAS,2BAA2B,CAAC;AAAA,MACrC,cAAc;AAAA,MACd,GAAG;AAAA,IACL;AAAA,EACF;AACF;AAOO,SAAS,mCAId,SAsBQ,CAAC,GACT;AACA,SAAO;AAAA,IACL;AAAA,MACE,KAAK;AAAA,MACL,SAAS,2BAA2B,CAAC;AAAA,MACrC,cAAc;AAAA,MACd,GAAG;AAAA,IACL;AAAA,EACF;AACF;AAOO,SAAS,oCAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,qCAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,kCAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAAsE;AAAA,IAC3E,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,4CAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,mCAGd,SAG4D,CAAC,GAC7D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,kCACd,SAG4D,CAAC,GAC7D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAyE;AAC3E;AAOO,SAAS,0CACd,SAM4D,CAAC,GAC7D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAiF;AACnF;AAOO,SAAS,qCACd,SAG4D,CAAC,GAC7D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA4E;AAC9E;AAOO,SAAS,sCACd,SAG4D,CAAC,GAC7D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6E;AAC/E;AAOO,SAAS,0CACd,SAM4D,CAAC,GAC7D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAiF;AACnF;AAOO,SAAS,0CACd,SAM4D,CAAC,GAC7D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAiF;AACnF;AAOO,SAAS,2CACd,SAM4D,CAAC,GAC7D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAkF;AACpF;AAOO,SAAS,4CACd,SAM4D,CAAC,GAC7D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmF;AACrF;AAOO,SAAS,yCACd,SAG4D,CAAC,GAC7D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,mDACd,SAM4D,CAAC,GAC7D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0F;AAC5F;AAOO,SAAS,4BACd,SAG4D,CAAC,GAC7D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,GAAG;AAAA,EACL,CAAsE;AACxE;AAOO,SAAS,wCACd,SAG4D,CAAC,GAC7D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA0E;AAC5E;AAOO,SAAS,uCACd,SAG4D,CAAC,GAC7D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAyE;AAC3E;AAOO,SAAS,yCACd,SAG4D,CAAC,GAC7D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA2E;AAC7E;AAOO,SAAS,0CACd,SAG4D,CAAC,GAC7D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA4E;AAC9E;AAOO,SAAS,uCACd,SAG4D,CAAC,GAC7D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,2BAA2B,CAAC;AAAA,IACrC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAyE;AAC3E;AAQO,SAAS,0BAId,SAO2D,CAAC,GAC5D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,0BACE,OACF;AAAA,IACF,GAAG;AAAA,EACL,CAAoF;AACtF;AAQO,SAAS,kCAId,SAO2D,CAAC,GAC5D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,0BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAoF;AACtF;AAQO,SAAS,6BAId,SAO2D,CAAC,GAC5D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,0BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAoF;AACtF;AAQO,SAAS,2BAKd,SAiBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAqE;AAAA,IAC1E,KAAK;AAAA,IACL,SACE,0BACE,OACF;AAAA,IACF,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,4BAId,SAcQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAgE;AAAA,IACrE,KAAK;AAAA,IACL,SACE,0BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,kCACd,SAG2D,CAAC,GAC5D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,0BACE,OACF;AAAA,IACF,GAAG;AAAA,EACL,CAA+E;AACjF;AAQO,SAAS,mCACd,SAG2D,CAAC,GAC5D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,0BACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,2BACd,SAG2D,CAAC,GAC5D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,0BACE,OACF;AAAA,IACF,GAAG;AAAA,EACL,CAAqE;AACvE;AAQO,SAAS,6CACd,SAG2D,CAAC,GAC5D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,0BACE,OACF;AAAA,IACF,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA+E;AACjF;AAQO,SAAS,sBAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,2BAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,6BAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,yBAId,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,uBAKd,SAaQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiE;AAAA,IACtE,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,8BAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAkE;AAAA,IACvE,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,gCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAoE;AAAA,IACzE,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,sCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,8BACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,GAAG;AAAA,EACL,CAA2E;AAC7E;AAQO,SAAS,qCACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA4E;AAC9E;AAQO,SAAS,uCACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,6CACd,SAMuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAoF;AACtF;AAQO,SAAS,uBACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,GAAG;AAAA,EACL,CAAiE;AACnE;AAQO,SAAS,4CACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,4CACd,SAGuD,CAAC,GACxD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,sBAAsB,OAA6C;AAAA,IACrE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,mBAId,SAGoD,CAAC,GACrD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,mBAAmB,OAA0C;AAAA,IACtE,GAAG;AAAA,EACL,CAA6E;AAC/E;AAQO,SAAS,0BAId,SAGoD,CAAC,GACrD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,mBAAmB,OAA0C;AAAA,IACtE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6E;AAC/E;AAQO,SAAS,sBAId,SAGoD,CAAC,GACrD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,mBAAmB,OAA0C;AAAA,IACtE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6E;AAC/E;AAQO,SAAS,yBAId,SAGoD,CAAC,GACrD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,mBAAmB,OAA0C;AAAA,IACtE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6E;AAC/E;AAQO,SAAS,8BAId,SAGoD,CAAC,GACrD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,mBAAmB,OAA0C;AAAA,IACtE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6E;AAC/E;AAQO,SAAS,iCAId,SAGoD,CAAC,GACrD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,mBAAmB,OAA0C;AAAA,IACtE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6E;AAC/E;AAQO,SAAS,oBAId,SAGoD,CAAC,GACrD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,mBAAmB,OAA0C;AAAA,IACtE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6E;AAC/E;AAQO,SAAS,oBAKd,SAaQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAA8D;AAAA,IACnE,KAAK;AAAA,IACL,SAAS,mBAAmB,OAA0C;AAAA,IACtE,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,mBAId,SAcQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAuD;AAAA,IAC5D,KAAK;AAAA,IACL,SAAS,mBAAmB,OAA0C;AAAA,IACtE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,gCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAoE;AAAA,IACzE,KAAK;AAAA,IACL,SAAS,mBAAmB,OAA0C;AAAA,IACtE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,gCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAoE;AAAA,IACzE,KAAK;AAAA,IACL,SAAS,mBAAmB,OAA0C;AAAA,IACtE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,sBAId,SAcQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAA0D;AAAA,IAC/D,KAAK;AAAA,IACL,SAAS,mBAAmB,OAA0C;AAAA,IACtE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,2BACd,SAGoD,CAAC,GACrD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,mBAAmB,OAA0C;AAAA,IACtE,GAAG;AAAA,EACL,CAAwE;AAC1E;AAQO,SAAS,0BACd,SAGoD,CAAC,GACrD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,mBAAmB,OAA0C;AAAA,IACtE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAiE;AACnE;AAQO,SAAS,uCACd,SAGoD,CAAC,GACrD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,mBAAmB,OAA0C;AAAA,IACtE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,uCACd,SAGoD,CAAC,GACrD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,mBAAmB,OAA0C;AAAA,IACtE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8E;AAChF;AAQO,SAAS,6BACd,SAGoD,CAAC,GACrD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,mBAAmB,OAA0C;AAAA,IACtE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAoE;AACtE;AAQO,SAAS,oBACd,SAGoD,CAAC,GACrD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,mBAAmB,OAA0C;AAAA,IACtE,GAAG;AAAA,EACL,CAA8D;AAChE;AAQO,SAAS,wCACd,SAGoD,CAAC,GACrD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,mBAAmB,OAA0C;AAAA,IACtE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA0E;AAC5E;AAOO,SAAS,qCAOd,SASI,CAAC,GACL;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,qCAAqC,EAAE;AAAA,IAChD,GAAG;AAAA,EACL,CAA+F;AACjG;AAOO,SAAS,uCAOd,SASI,CAAC,GACL;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,qCAAqC,EAAE;AAAA,IAChD,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA+F;AACjG;AAOO,SAAS,yDAOd,SASI,CAAC,GACL;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,qCAAqC,EAAE;AAAA,IAChD,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA+F;AACjG;AAOO,SAAS,8CAOd,SASI,CAAC,GACL;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,qCAAqC,EAAE;AAAA,IAChD,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA+F;AACjG;AAOO,SAAS,wCAOd,SASI,CAAC,GACL;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,qCAAqC,EAAE;AAAA,IAChD,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA+F;AACjG;AAOO,SAAS,sCAKd,SAiBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,qCAAqC,EAAE;AAAA,IAChD,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,6DAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,qCAAqC,EAAE;AAAA,IAChD,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,6CAGd,SAQI,CAAC,GACL;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,qCAAqC,EAAE;AAAA,IAChD,GAAG;AAAA,EACL,CAA0F;AAC5F;AAOO,SAAS,oEACd,SAQI,CAAC,GACL;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,qCAAqC,EAAE;AAAA,IAChD,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA2G;AAC7G;AAOO,SAAS,sCAGd,SAKI,CAAC,GACL;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,qCAAqC,EAAE;AAAA,IAChD,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,mEACd,SAQI,CAAC,GACL;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,qCAAqC,EAAE;AAAA,IAChD,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAqG;AACvG;AAOO,SAAS,mDAOd,SASI,CAAC,GACL;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,mDAAmD,GAAG;AAAA,IAC/D,GAAG;AAAA,EACL,CAA6G;AAC/G;AAOO,SAAS,qDAOd,SASI,CAAC,GACL;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,mDAAmD,GAAG;AAAA,IAC/D,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6G;AAC/G;AAOO,SAAS,4DAOd,SASI,CAAC,GACL;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,mDAAmD,GAAG;AAAA,IAC/D,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6G;AAC/G;AAOO,SAAS,uEAOd,SASI,CAAC,GACL;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,mDAAmD,GAAG;AAAA,IAC/D,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6G;AAC/G;AAOO,SAAS,sDAOd,SASI,CAAC,GACL;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,mDAAmD,GAAG;AAAA,IAC/D,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6G;AAC/G;AAOO,SAAS,oDAKd,SAiBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,mDAAmD,GAAG;AAAA,IAC/D,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,2EAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,mDAAmD,GAAG;AAAA,IAC/D,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,2DAGd,SAQI,CAAC,GACL;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,mDAAmD,GAAG;AAAA,IAC/D,GAAG;AAAA,EACL,CAAwG;AAC1G;AAOO,SAAS,kFACd,SAQI,CAAC,GACL;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,mDAAmD,GAAG;AAAA,IAC/D,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAyH;AAC3H;AAOO,SAAS,oDAGd,SAQI,CAAC,GACL;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,mDAAmD,GAAG;AAAA,IAC/D,GAAG;AAAA,EACL,CAA8F;AAChG;AAOO,SAAS,iFACd,SAQI,CAAC,GACL;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,mDAAmD,GAAG;AAAA,IAC/D,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAmH;AACrH;AAQO,SAAS,gBAId,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,8BAId,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,iCAId,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,2BAId,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,6BAId,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,mBAId,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,qBAId,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,mBAId,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,uBAId,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,4BAId,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,yBAId,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,gBAId,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,mBAId,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,6BAId,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,kBAId,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,4BAId,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,oBAId,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,mBAId,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,iBAKd,SAaQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAA2D;AAAA,IAChE,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,gBAId,SAcQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAoD;AAAA,IACzD,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,sBAId,SAcQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAA0D;AAAA,IAC/D,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,gBAId,SAcQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAoD;AAAA,IACzD,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,4BAId,SAkBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAgE;AAAA,IACrE,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,6BAId,SAkBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiE;AAAA,IACtE,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,wBAId,SAkBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAA4D;AAAA,IACjE,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,wBACd,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,GAAG;AAAA,EACL,CAAqE;AACvE;AAQO,SAAS,uBACd,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8D;AAChE;AAQO,SAAS,6BACd,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAoE;AACtE;AAQO,SAAS,uBACd,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8D;AAChE;AAQO,SAAS,mCACd,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAQO,SAAS,oCACd,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA2E;AAC7E;AAQO,SAAS,+BACd,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAsE;AACxE;AAQO,SAAS,iBACd,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,GAAG;AAAA,EACL,CAA2D;AAC7D;AAQO,SAAS,yBACd,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA2D;AAC7D;AAQO,SAAS,+BACd,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAiE;AACnE;AAQO,SAAS,4BACd,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA8D;AAChE;AAQO,SAAS,yBACd,SAGiD,CAAC,GAClD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,gBAAgB,OAAuC;AAAA,IAChE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA2D;AAC7D;AAQO,SAAS,yBAId,SAO0D,CAAC,GAC3D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,yBACE,OACF;AAAA,IACF,GAAG;AAAA,EACL,CAAmF;AACrF;AAQO,SAAS,sCAId,SAO0D,CAAC,GAC3D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,yBACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmF;AACrF;AAQO,SAAS,uCAId,SAO0D,CAAC,GAC3D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,yBACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmF;AACrF;AAQO,SAAS,0CAId,SAO0D,CAAC,GAC3D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,yBACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmF;AACrF;AAQO,SAAS,wDAId,SAO0D,CAAC,GAC3D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,yBACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmF;AACrF;AAQO,SAAS,kDAId,SAO0D,CAAC,GAC3D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,yBACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmF;AACrF;AAQO,SAAS,oCAId,SAO0D,CAAC,GAC3D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,yBACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmF;AACrF;AAQO,SAAS,oCAId,SAO0D,CAAC,GAC3D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,yBACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmF;AACrF;AAQO,SAAS,4BAId,SAO0D,CAAC,GAC3D;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,yBACE,OACF;AAAA,IACF,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmF;AACrF;AAQO,SAAS,uBAId,SAOwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,GAAG;AAAA,EACL,CAAiF;AACnF;AAQO,SAAS,qCAId,SAOwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAiF;AACnF;AAQO,SAAS,0CAId,SAOwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAiF;AACnF;AAQO,SAAS,0CAId,SAOwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAiF;AACnF;AAQO,SAAS,gCAId,SAOwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAiF;AACnF;AAQO,SAAS,gCAId,SAOwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAiF;AACnF;AAQO,SAAS,sCAId,SAOwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAiF;AACnF;AAQO,SAAS,uCAId,SAOwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAiF;AACnF;AAQO,SAAS,+BAId,SAOwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAiF;AACnF;AAQO,SAAS,6BAId,SAOwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAiF;AACnF;AAQO,SAAS,0BAId,SAOwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAiF;AACnF;AAQO,SAAS,wBAKd,SAiBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAkE;AAAA,IACvE,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,8BAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAkE;AAAA,IACvE,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,+BAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAmE;AAAA,IACxE,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,6BAId,SAcQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiE;AAAA,IACtE,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,kCAId,SAsBQ,CAAC,GACT;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAsE;AAAA,IAC3E,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAQO,SAAS,+BACd,SAGwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,GAAG;AAAA,EACL,CAA4E;AAC9E;AAQO,SAAS,qCACd,SAGwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA4E;AAC9E;AAQO,SAAS,sCACd,SAGwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6E;AAC/E;AAQO,SAAS,oCACd,SAGwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA2E;AAC7E;AAQO,SAAS,yCACd,SAGwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAQO,SAAS,wBACd,SAGwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,GAAG;AAAA,EACL,CAAkE;AACpE;AAQO,SAAS,mCACd,SAGwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAqE;AACvE;AAQO,SAAS,qCACd,SAGwD,CAAC,GACzD;AACA,QAAM,EAAE,MAAM,IAAI,WAAW;AAC7B,QAAM,UAAU,OAAO,WAAW,OAAO;AACzC,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SACE,uBAAuB,OAA8C;AAAA,IACvE,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAuE;AACzE;AAOO,SAAS,oBAId,SAGqD,CAAC,GACtD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,oBAAoB,GAAG;AAAA,IAChC,GAAG;AAAA,EACL,CAA8E;AAChF;AAOO,SAAS,mCAId,SAGqD,CAAC,GACtD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,oBAAoB,GAAG;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8E;AAChF;AAOO,SAAS,yBAId,SAGqD,CAAC,GACtD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,oBAAoB,GAAG;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8E;AAChF;AAOO,SAAS,8BAId,SAGqD,CAAC,GACtD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,oBAAoB,GAAG;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8E;AAChF;AAOO,SAAS,uBAId,SAGqD,CAAC,GACtD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,oBAAoB,GAAG;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA8E;AAChF;AAOO,SAAS,qBAKd,SAaQ,CAAC,GACT;AACA,SAAO,iBAA+D;AAAA,IACpE,KAAK;AAAA,IACL,SAAS,oBAAoB,GAAG;AAAA,IAChC,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,wBAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAA4D;AAAA,IACjE,KAAK;AAAA,IACL,SAAS,oBAAoB,GAAG;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,4BACd,SAGqD,CAAC,GACtD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,oBAAoB,GAAG;AAAA,IAChC,GAAG;AAAA,EACL,CAAyE;AAC3E;AAOO,SAAS,+BACd,SAGqD,CAAC,GACtD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,oBAAoB,GAAG;AAAA,IAChC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAsE;AACxE;AAOO,SAAS,qBACd,SAGqD,CAAC,GACtD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,oBAAoB,GAAG;AAAA,IAChC,GAAG;AAAA,EACL,CAA+D;AACjE;AAOO,SAAS,+BACd,SAGqD,CAAC,GACtD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,oBAAoB,GAAG;AAAA,IAChC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAiE;AACnE;AAOO,SAAS,sBAId,SAGuD,CAAC,GACxD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,sBAAsB,GAAG;AAAA,IAClC,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,yBAId,SAGuD,CAAC,GACxD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,sBAAsB,GAAG;AAAA,IAClC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,0BAId,SAGuD,CAAC,GACxD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,sBAAsB,GAAG;AAAA,IAClC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,0BAId,SAGuD,CAAC,GACxD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,sBAAsB,GAAG;AAAA,IAClC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,0BAId,SAGuD,CAAC,GACxD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,sBAAsB,GAAG;AAAA,IAClC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,8BAId,SAGuD,CAAC,GACxD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,sBAAsB,GAAG;AAAA,IAClC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,2BAId,SAGuD,CAAC,GACxD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,sBAAsB,GAAG;AAAA,IAClC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,0BAId,SAGuD,CAAC,GACxD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,sBAAsB,GAAG;AAAA,IAClC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,wBAId,SAGuD,CAAC,GACxD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,sBAAsB,GAAG;AAAA,IAClC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,yBAId,SAGuD,CAAC,GACxD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,sBAAsB,GAAG;AAAA,IAClC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,eAId,SAGgD,CAAC,GACjD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,eAAe,GAAG;AAAA,IAC3B,GAAG;AAAA,EACL,CAAyE;AAC3E;AAOO,SAAS,2BAId,SAGgD,CAAC,GACjD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,eAAe,GAAG;AAAA,IAC3B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAyE;AAC3E;AAOO,SAAS,kBAId,SAGgD,CAAC,GACjD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,eAAe,GAAG;AAAA,IAC3B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAyE;AAC3E;AAOO,SAAS,sBAId,SAGgD,CAAC,GACjD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,eAAe,GAAG;AAAA,IAC3B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAyE;AAC3E;AAOO,SAAS,eAId,SAGgD,CAAC,GACjD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,eAAe,GAAG;AAAA,IAC3B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAyE;AAC3E;AAOO,SAAS,wBAId,SAGgD,CAAC,GACjD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,eAAe,GAAG;AAAA,IAC3B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAyE;AAC3E;AAOO,SAAS,sBAId,SAGgD,CAAC,GACjD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,eAAe,GAAG;AAAA,IAC3B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAyE;AAC3E;AAOO,SAAS,iBAId,SAGgD,CAAC,GACjD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,eAAe,GAAG;AAAA,IAC3B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAyE;AAC3E;AAOO,SAAS,yBAId,SAGgD,CAAC,GACjD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,eAAe,GAAG;AAAA,IAC3B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAyE;AAC3E;AAOO,SAAS,oBAId,SAGgD,CAAC,GACjD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,eAAe,GAAG;AAAA,IAC3B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAyE;AAC3E;AAOO,SAAS,kBAId,SAGgD,CAAC,GACjD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,eAAe,GAAG;AAAA,IAC3B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAyE;AAC3E;AAOO,SAAS,gBAKd,SAUQ,CAAC,GACT;AACA,SAAO,iBAA0D;AAAA,IAC/D,KAAK;AAAA,IACL,SAAS,eAAe,GAAG;AAAA,IAC3B,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,2BAId,SAkBQ,CAAC,GACT;AACA,SAAO,iBAA+D;AAAA,IACpE,KAAK;AAAA,IACL,SAAS,eAAe,GAAG;AAAA,IAC3B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,uBACd,SAGgD,CAAC,GACjD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,eAAe,GAAG;AAAA,IAC3B,GAAG;AAAA,EACL,CAAoE;AACtE;AAOO,SAAS,kCACd,SAGgD,CAAC,GACjD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,eAAe,GAAG;AAAA,IAC3B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAyE;AAC3E;AAOO,SAAS,kBAId,SAGmD,CAAC,GACpD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,kBAAkB,GAAG;AAAA,IAC9B,GAAG;AAAA,EACL,CAA4E;AAC9E;AAOO,SAAS,iCAId,SAGmD,CAAC,GACpD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,kBAAkB,GAAG;AAAA,IAC9B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA4E;AAC9E;AAOO,SAAS,uBAId,SAGmD,CAAC,GACpD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,kBAAkB,GAAG;AAAA,IAC9B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA4E;AAC9E;AAOO,SAAS,4BAId,SAGmD,CAAC,GACpD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,kBAAkB,GAAG;AAAA,IAC9B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA4E;AAC9E;AAOO,SAAS,qBAId,SAGmD,CAAC,GACpD;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,kBAAkB,GAAG;AAAA,IAC9B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA4E;AAC9E;AAOO,SAAS,mBAKd,SAaQ,CAAC,GACT;AACA,SAAO,iBAA6D;AAAA,IAClE,KAAK;AAAA,IACL,SAAS,kBAAkB,GAAG;AAAA,IAC9B,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,sBAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAA0D;AAAA,IAC/D,KAAK;AAAA,IACL,SAAS,kBAAkB,GAAG;AAAA,IAC9B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,0BACd,SAGmD,CAAC,GACpD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,kBAAkB,GAAG;AAAA,IAC9B,GAAG;AAAA,EACL,CAAuE;AACzE;AAOO,SAAS,6BACd,SAGmD,CAAC,GACpD;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,kBAAkB,GAAG;AAAA,IAC9B,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAoE;AACtE;AAOO,SAAS,mBACd,SAGmD,CAAC,GACpD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,kBAAkB,GAAG;AAAA,IAC9B,GAAG;AAAA,EACL,CAA6D;AAC/D;AAOO,SAAS,6BACd,SAGmD,CAAC,GACpD;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,kBAAkB,GAAG;AAAA,IAC9B,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA+D;AACjE;AAOO,SAAS,8BAOd,SAO+D,CAAC,GAChE;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,GAAG;AAAA,EACL,CAAwF;AAC1F;AAOO,SAAS,wCAOd,SAO+D,CAAC,GAChE;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAOO,SAAS,gDAOd,SAO+D,CAAC,GAChE;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAOO,SAAS,0DAOd,SAO+D,CAAC,GAChE;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAOO,SAAS,wDAOd,SAO+D,CAAC,GAChE;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAOO,SAAS,wCAOd,SAO+D,CAAC,GAChE;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAOO,SAAS,2CAOd,SAO+D,CAAC,GAChE;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAOO,SAAS,+CAOd,SAO+D,CAAC,GAChE;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAOO,SAAS,6CAOd,SAO+D,CAAC,GAChE;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAOO,SAAS,0CAOd,SAO+D,CAAC,GAChE;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAOO,SAAS,iCAOd,SAO+D,CAAC,GAChE;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAOO,SAAS,wCAOd,SAO+D,CAAC,GAChE;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAOO,SAAS,gDAOd,SAO+D,CAAC,GAChE;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAOO,SAAS,sCAOd,SAO+D,CAAC,GAChE;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAOO,SAAS,4CAOd,SAO+D,CAAC,GAChE;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAOO,SAAS,iCAOd,SAO+D,CAAC,GAChE;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAOO,SAAS,8CAOd,SAO+D,CAAC,GAChE;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAwF;AAC1F;AAOO,SAAS,+BAKd,SAiBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,oCAId,SAkBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,sCAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,qCAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,sCAGd,SAM+D,CAAC,GAChE;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,GAAG;AAAA,EACL,CAAmF;AACrF;AAOO,SAAS,2CACd,SAM+D,CAAC,GAChE;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAkF;AACpF;AAOO,SAAS,6CACd,SAM+D,CAAC,GAChE;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAoF;AACtF;AAOO,SAAS,4CACd,SAM+D,CAAC,GAChE;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmF;AACrF;AAOO,SAAS,+BACd,SAG+D,CAAC,GAChE;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,GAAG;AAAA,EACL,CAAyE;AAC3E;AAOO,SAAS,mDACd,SAM+D,CAAC,GAChE;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAqF;AACvF;AAOO,SAAS,0CACd,SAG+D,CAAC,GAChE;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA4E;AAC9E;AAOO,SAAS,6CACd,SAG+D,CAAC,GAChE;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA+E;AACjF;AAOO,SAAS,0CACd,SAG+D,CAAC,GAChE;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA4E;AAC9E;AAOO,SAAS,oDACd,SAM+D,CAAC,GAChE;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,8BAA8B,GAAG;AAAA,IAC1C,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAsF;AACxF;AAOO,SAAS,wBAId,SAOyD,CAAC,GAC1D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,GAAG;AAAA,EACL,CAAkF;AACpF;AAOO,SAAS,4BAId,SAOyD,CAAC,GAC1D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAkF;AACpF;AAOO,SAAS,iCAId,SAOyD,CAAC,GAC1D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAkF;AACpF;AAOO,SAAS,6BAId,SAOyD,CAAC,GAC1D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAkF;AACpF;AAOO,SAAS,2BAId,SAOyD,CAAC,GAC1D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAkF;AACpF;AAOO,SAAS,yBAKd,SAiBQ,CAAC,GACT;AACA,SAAO,iBAAmE;AAAA,IACxE,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,+BAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAAmE;AAAA,IACxE,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,iCAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAAqE;AAAA,IAC1E,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,6BAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAAiE;AAAA,IACtE,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,+BAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAAmE;AAAA,IACxE,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,uCAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,qCAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,mCAId,SAsBQ,CAAC,GACT;AACA,SAAO;AAAA,IACL;AAAA,MACE,KAAK;AAAA,MACL,SAAS,wBAAwB,GAAG;AAAA,MACpC,cAAc;AAAA,MACd,GAAG;AAAA,IACL;AAAA,EACF;AACF;AAOO,SAAS,4BAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAAgE;AAAA,IACrE,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,8BAId,SAkBQ,CAAC,GACT;AACA,SAAO,iBAAkE;AAAA,IACvE,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,gCACd,SAGyD,CAAC,GAC1D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,GAAG;AAAA,EACL,CAA6E;AAC/E;AAOO,SAAS,sCACd,SAGyD,CAAC,GAC1D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6E;AAC/E;AAOO,SAAS,wCACd,SAGyD,CAAC,GAC1D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA+E;AACjF;AAOO,SAAS,oCACd,SAGyD,CAAC,GAC1D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA2E;AAC7E;AAOO,SAAS,sCACd,SAGyD,CAAC,GAC1D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA6E;AAC/E;AAOO,SAAS,8CACd,SAMyD,CAAC,GAC1D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAqF;AACvF;AAOO,SAAS,4CACd,SAMyD,CAAC,GAC1D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmF;AACrF;AAOO,SAAS,0CACd,SAMyD,CAAC,GAC1D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAiF;AACnF;AAOO,SAAS,mCACd,SAGyD,CAAC,GAC1D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA0E;AAC5E;AAOO,SAAS,qCACd,SAGyD,CAAC,GAC1D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA4E;AAC9E;AAOO,SAAS,yBACd,SAGyD,CAAC,GAC1D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,GAAG;AAAA,EACL,CAAmE;AACrE;AAOO,SAAS,yCACd,SAGyD,CAAC,GAC1D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA2E;AAC7E;AAOO,SAAS,6CACd,SAGyD,CAAC,GAC1D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA+E;AACjF;AAOO,SAAS,6CACd,SAGyD,CAAC,GAC1D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA+E;AACjF;AAOO,SAAS,2CACd,SAGyD,CAAC,GAC1D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA6E;AAC/E;AAOO,SAAS,2CACd,SAGyD,CAAC,GAC1D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA6E;AAC/E;AAOO,SAAS,4CACd,SAGyD,CAAC,GAC1D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,wBAAwB,GAAG;AAAA,IACpC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA8E;AAChF;AAOO,SAAS,2BAId,SAO4D,CAAC,GAC7D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,2BAA2B,GAAG;AAAA,IACvC,GAAG;AAAA,EACL,CAAqF;AACvF;AAOO,SAAS,qCAId,SAO4D,CAAC,GAC7D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,2BAA2B,GAAG;AAAA,IACvC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAqF;AACvF;AAOO,SAAS,mCAId,SAO4D,CAAC,GAC7D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,2BAA2B,GAAG;AAAA,IACvC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAqF;AACvF;AAOO,SAAS,mCAId,SAO4D,CAAC,GAC7D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,2BAA2B,GAAG;AAAA,IACvC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAqF;AACvF;AAOO,SAAS,8BAId,SAO4D,CAAC,GAC7D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,2BAA2B,GAAG;AAAA,IACvC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAqF;AACvF;AAOO,SAAS,4BAKd,SAiBQ,CAAC,GACT;AACA,SAAO,iBAAsE;AAAA,IAC3E,KAAK;AAAA,IACL,SAAS,2BAA2B,GAAG;AAAA,IACvC,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,2BAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAA+D;AAAA,IACpE,KAAK;AAAA,IACL,SAAS,2BAA2B,GAAG;AAAA,IACvC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,yCAId,SAsBQ,CAAC,GACT;AACA,SAAO,iBAIL;AAAA,IACA,KAAK;AAAA,IACL,SAAS,2BAA2B,GAAG;AAAA,IACvC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,mCAGd,SAG4D,CAAC,GAC7D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,2BAA2B,GAAG;AAAA,IACvC,GAAG;AAAA,EACL,CAAgF;AAClF;AAOO,SAAS,kCACd,SAG4D,CAAC,GAC7D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,2BAA2B,GAAG;AAAA,IACvC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAyE;AAC3E;AAOO,SAAS,gDACd,SAM4D,CAAC,GAC7D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,2BAA2B,GAAG;AAAA,IACvC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAuF;AACzF;AAOO,SAAS,4BACd,SAG4D,CAAC,GAC7D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,2BAA2B,GAAG;AAAA,IACvC,GAAG;AAAA,EACL,CAAsE;AACxE;AAOO,SAAS,yCACd,SAG4D,CAAC,GAC7D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,2BAA2B,GAAG;AAAA,IACvC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAA2E;AAC7E;AAOO,SAAS,kDACd,SAM4D,CAAC,GAC7D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,2BAA2B,GAAG;AAAA,IACvC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAoF;AACtF;AAOO,SAAS,yBAId,SAO0D,CAAC,GAC3D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,yBAAyB,GAAG;AAAA,IACrC,GAAG;AAAA,EACL,CAAmF;AACrF;AAOO,SAAS,wCAId,SAO0D,CAAC,GAC3D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,yBAAyB,GAAG;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmF;AACrF;AAOO,SAAS,8BAId,SAO0D,CAAC,GAC3D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,yBAAyB,GAAG;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmF;AACrF;AAOO,SAAS,gCAId,SAO0D,CAAC,GAC3D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,yBAAyB,GAAG;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmF;AACrF;AAOO,SAAS,mCAId,SAO0D,CAAC,GAC3D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,yBAAyB,GAAG;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmF;AACrF;AAOO,SAAS,4BAId,SAO0D,CAAC,GAC3D;AACA,SAAO,gBAAgB;AAAA,IACrB,KAAK;AAAA,IACL,SAAS,yBAAyB,GAAG;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAmF;AACrF;AAOO,SAAS,0BAKd,SAiBQ,CAAC,GACT;AACA,SAAO,iBAAoE;AAAA,IACzE,KAAK;AAAA,IACL,SAAS,yBAAyB,GAAG;AAAA,IACrC,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,6BAId,SAcQ,CAAC,GACT;AACA,SAAO,iBAAiE;AAAA,IACtE,KAAK;AAAA,IACL,SAAS,yBAAyB,GAAG;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAAQ;AACV;AAOO,SAAS,iCACd,SAG0D,CAAC,GAC3D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,yBAAyB,GAAG;AAAA,IACrC,GAAG;AAAA,EACL,CAA8E;AAChF;AAOO,SAAS,oCACd,SAG0D,CAAC,GAC3D;AACA,SAAO,wBAAwB;AAAA,IAC7B,KAAK;AAAA,IACL,SAAS,yBAAyB,GAAG;AAAA,IACrC,cAAc;AAAA,IACd,GAAG;AAAA,EACL,CAA2E;AAC7E;AAOO,SAAS,0BACd,SAG0D,CAAC,GAC3D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,yBAAyB,GAAG;AAAA,IACrC,GAAG;AAAA,EACL,CAAoE;AACtE;AAOO,SAAS,oCACd,SAG0D,CAAC,GAC3D;AACA,SAAO,iBAAiB;AAAA,IACtB,KAAK;AAAA,IACL,SAAS,yBAAyB,GAAG;AAAA,IACrC,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAsE;AACxE;","names":[]}