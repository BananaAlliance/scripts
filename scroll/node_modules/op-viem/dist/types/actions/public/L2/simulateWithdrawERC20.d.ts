import type { Chain, PublicClient, SimulateContractReturnType, Transport } from 'viem';
import type { L2SimulateContractParameters } from '../../../types/l2Actions.js';
import { ABI, FUNCTION, type WithdrawToParameters } from '../../../types/withdrawTo.js';
export type SimulateWithdrawERC20Parameters<TChain extends Chain | undefined = Chain, TChainOverride extends Chain | undefined = Chain | undefined> = {
    args: WithdrawToParameters;
} & L2SimulateContractParameters<typeof ABI, typeof FUNCTION, TChain, TChainOverride>;
export type SimulateWithdrawERC20ReturnType<TChain extends Chain | undefined, TChainOverride extends Chain | undefined = undefined> = SimulateContractReturnType<typeof ABI, typeof FUNCTION, TChain, TChainOverride>;
export declare function simulateWithdrawERC20<TChain extends Chain | undefined = Chain, TChainOverride extends Chain | undefined = Chain | undefined>(client: PublicClient<Transport, TChain>, { args: { l2Token, to, amount, minGasLimit, extraData }, ...rest }: SimulateWithdrawERC20Parameters<TChain, TChainOverride>): Promise<SimulateWithdrawERC20ReturnType<TChain, TChainOverride>>;
//# sourceMappingURL=simulateWithdrawERC20.d.ts.map