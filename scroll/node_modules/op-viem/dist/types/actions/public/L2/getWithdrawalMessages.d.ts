import { type Chain, type Hash, type PublicClient, type TransactionReceipt, type Transport } from 'viem';
import type { MessagePassedEvent } from '../../../types/withdrawal.js';
export type GetWithdrawalMessagesParameters = {
    hash: Hash;
    txReceipt?: never;
} | {
    hash?: never;
    txReceipt: TransactionReceipt;
};
export type GetWithdrawalMessagesReturnType = {
    messages: MessagePassedEvent[];
    blockNumber: bigint;
};
/**
 * Retrieves all MessagePassed events from a withdrawal transaction
 *
 * @param client - Public client to use
 * @param {GetWithdrawalMessagesParameters} parameters - {@link GetWithdrawalMessagesParameters}
 * @returns {GetWithdrawalMessagesReturnType} An array of all MessagePassed events emitted in this transaction. {@link GetWithdrawalMessagesReturnType}
 */
export declare function getWithdrawalMessages<TChain extends Chain | undefined>(client: PublicClient<Transport, TChain>, { hash, txReceipt }: GetWithdrawalMessagesParameters): Promise<GetWithdrawalMessagesReturnType>;
//# sourceMappingURL=getWithdrawalMessages.d.ts.map