import type { Chain, PublicClient, Transport } from 'viem';
import type { L2SimulateContractParameters } from '../../../types/l2Actions.js';
import { type ABI, type FUNCTION, type WithdrawETHParameters } from '../../../types/withdrawTo.js';
import { type SimulateWithdrawERC20ReturnType } from './simulateWithdrawERC20.js';
export type SimulateWithdrawETHParameters<TChain extends Chain | undefined = Chain, TChainOverride extends Chain | undefined = Chain | undefined> = {
    args: WithdrawETHParameters;
} & L2SimulateContractParameters<typeof ABI, typeof FUNCTION, TChain, TChainOverride>;
export type SimulateWithdrawETHReturnType<TChain extends Chain | undefined, TChainOverride extends Chain | undefined = undefined> = SimulateWithdrawERC20ReturnType<TChain, TChainOverride>;
export declare function simulateWithdrawETH<TChain extends Chain | undefined = Chain, TChainOverride extends Chain | undefined = Chain | undefined>(client: PublicClient<Transport, TChain>, { args: { to, amount, minGasLimit, extraData }, ...rest }: SimulateWithdrawETHParameters<TChain, TChainOverride>): Promise<SimulateWithdrawETHReturnType<TChain, TChainOverride>>;
//# sourceMappingURL=simulateWithdrawETH.d.ts.map