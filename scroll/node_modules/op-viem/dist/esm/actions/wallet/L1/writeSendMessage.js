import { l1CrossDomainMessengerABI } from '@eth-optimism/contracts-ts';
import { OpStackL1Contract } from '../../../types/opStackContracts.js';
import { writeOpStackL1 } from './writeOpStackL1.js';
const ABI = l1CrossDomainMessengerABI;
const CONTRACT = OpStackL1Contract.L1CrossDomainMessenger;
const FUNCTION = 'sendMessage';
/**
 * A generic, low-level way to make a L1 -> L2 call with replayability.
 * Calls sendMessage on the L1CrossDomainMessenger contract.
 *
 * @param parameters - {@link WriteSendMessageParameters}
 * @returns A [Transaction Hash](https://viem.sh/docs/glossary/terms.html#hash). {@link WriteContractReturnType}
 */
export async function writeSendMessage(client, { args: { target, minGasLimit, message = '0x' }, l1CrossDomainMessengerAddress, ...rest }) {
    return writeOpStackL1(client, {
        address: l1CrossDomainMessengerAddress,
        abi: ABI,
        contract: CONTRACT,
        functionName: FUNCTION,
        args: [target, message, minGasLimit],
        ...rest,
    });
}
//# sourceMappingURL=writeSendMessage.js.map