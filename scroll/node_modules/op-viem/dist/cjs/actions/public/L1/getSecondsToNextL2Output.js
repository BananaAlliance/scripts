"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSecondsToNextL2Output = void 0;
const contracts_ts_1 = require("@eth-optimism/contracts-ts");
const opStackContracts_js_1 = require("../../../types/opStackContracts.js");
const readOpStackL1_js_1 = require("./readOpStackL1.js");
const ABI = contracts_ts_1.l2OutputOracleABI;
const CONTRACT = opStackContracts_js_1.OpStackL1Contract.L2OutputOracle;
async function getSecondsToNextL2Output(client, { latestL2BlockNumber, l2OutputOracleAddress, l2Chain, }) {
    const latestBlockNumber = await (0, readOpStackL1_js_1.readOpStackL1)(client, {
        contract: CONTRACT,
        abi: ABI,
        functionName: 'latestBlockNumber',
        l2Chain,
        address: l2OutputOracleAddress,
    });
    const interval = await (0, readOpStackL1_js_1.readOpStackL1)(client, {
        contract: CONTRACT,
        abi: ABI,
        functionName: 'SUBMISSION_INTERVAL',
        l2Chain,
        address: l2OutputOracleAddress,
    });
    const blockTime = await (0, readOpStackL1_js_1.readOpStackL1)(client, {
        contract: CONTRACT,
        abi: ABI,
        functionName: 'L2_BLOCK_TIME',
        l2Chain,
        address: l2OutputOracleAddress,
    });
    const blocksTillUpdate = interval - (latestL2BlockNumber - latestBlockNumber);
    return blocksTillUpdate < 0n ? 0n : blocksTillUpdate * blockTime;
}
exports.getSecondsToNextL2Output = getSecondsToNextL2Output;
//# sourceMappingURL=getSecondsToNextL2Output.js.map