"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.readProvenWithdrawals = void 0;
const contracts_ts_1 = require("@eth-optimism/contracts-ts");
const opStackContracts_js_1 = require("../../../types/opStackContracts.js");
const readOpStackL1_js_1 = require("./readOpStackL1.js");
const ABI = contracts_ts_1.optimismPortalABI;
const CONTRACT = opStackContracts_js_1.OpStackL1Contract.OptimismPortal;
const FUNCTION_NAME = 'provenWithdrawals';
async function readProvenWithdrawals(client, { withdrawalHash, optimismPortalAddress, l2Chain, }) {
    const values = await (0, readOpStackL1_js_1.readOpStackL1)(client, {
        contract: CONTRACT,
        abi: ABI,
        functionName: FUNCTION_NAME,
        l2Chain,
        address: optimismPortalAddress,
        args: [withdrawalHash],
        chain: client.chain,
    });
    const provenWithdrawal = {
        outputRoot: values[0],
        timestamp: values[1],
        l2OutputIndex: values[2],
    };
    if (provenWithdrawal.timestamp === 0n) {
        throw new Error(`Withdrawal with hash ${withdrawalHash} is not proven`);
    }
    return provenWithdrawal;
}
exports.readProvenWithdrawals = readProvenWithdrawals;
//# sourceMappingURL=readProvenWithdrawals.js.map