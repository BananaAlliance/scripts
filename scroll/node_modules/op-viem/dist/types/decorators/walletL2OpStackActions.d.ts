import type { Account, Chain, Transport, WriteContractReturnType } from 'viem';
import type { WalletClient } from 'viem';
import { type WriteWithdrawERC20Parameters } from '../actions/wallet/L2/writeWithdrawERC20.js';
import { type WriteWithdrawETHParameters } from '../actions/wallet/L2/writeWithdrawETH.js';
export type WalletL2OpStackActions<TChain extends Chain | undefined = Chain | undefined, TAccount extends Account | undefined = Account | undefined> = {
    writeWithdrawETH: <TChainOverride extends Chain | undefined = Chain | undefined>(args: WriteWithdrawETHParameters<TChain, TAccount, TChainOverride>) => Promise<WriteContractReturnType>;
    writeWithdrawERC20: <TChainOverride extends Chain | undefined = Chain | undefined>(args: WriteWithdrawERC20Parameters<TChain, TAccount, TChainOverride>) => Promise<WriteContractReturnType>;
};
export declare function walletL2OpStackActions<TTransport extends Transport = Transport, TChain extends Chain = Chain, TAccount extends Account = Account>(client: WalletClient<TTransport, TChain, TAccount>): WalletL2OpStackActions<TChain, TAccount>;
//# sourceMappingURL=walletL2OpStackActions.d.ts.map