import type { Chain, PublicClient, Transport } from 'viem';
import type { MessagePassedEvent } from '../../../index.js';
import type { GetL2Chain, L1ActionBaseType } from '../../../types/l1Actions.js';
import { OpStackL1Contract } from '../../../types/opStackContracts.js';
declare const CONTRACT = OpStackL1Contract.OptimismPortal;
export type ReadFinalizedWithdrawalsParameters<TChain extends Chain | undefined = Chain> = {
    withdrawalHash: MessagePassedEvent['withdrawalHash'];
} & L1ActionBaseType<GetL2Chain<TChain>, typeof CONTRACT>;
export declare function readFinalizedWithdrawals<TChain extends Chain | undefined>(client: PublicClient<Transport, TChain>, { withdrawalHash, optimismPortalAddress, l2Chain, }: ReadFinalizedWithdrawalsParameters<TChain>): Promise<boolean>;
export {};
//# sourceMappingURL=readFinalizedWithdrawals.d.ts.map