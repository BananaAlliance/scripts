"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.publicL1OpStackActions = void 0;
const getL2HashesForDepositTx_js_1 = require("../actions/public/L1/getL2HashesForDepositTx.js");
const getOutputForL2Block_js_1 = require("../actions/public/L1/getOutputForL2Block.js");
const getSecondsToFinalizable_js_1 = require("../actions/public/L1/getSecondsToFinalizable.js");
const getSecondsToNextL2Output_js_1 = require("../actions/public/L1/getSecondsToNextL2Output.js");
const readFinalizedWithdrawals_js_1 = require("../actions/public/L1/readFinalizedWithdrawals.js");
const readOpStackL1_js_1 = require("../actions/public/L1/readOpStackL1.js");
const readProvenWithdrawals_js_1 = require("../actions/public/L1/readProvenWithdrawals.js");
const simulateDepositERC20_js_1 = require("../actions/public/L1/simulateDepositERC20.js");
const simulateDepositETH_js_1 = require("../actions/public/L1/simulateDepositETH.js");
const simulateProveWithdrawalTransaction_js_1 = require("../actions/public/L1/simulateProveWithdrawalTransaction.js");
function publicL1OpStackActions(client) {
    return {
        getL2HashesForDepositTx: (args) => (0, getL2HashesForDepositTx_js_1.getL2HashesForDepositTx)(client, args),
        simulateDepositETH: (args) => (0, simulateDepositETH_js_1.simulateDepositETH)(client, args),
        simulateDepositERC20: (args) => (0, simulateDepositERC20_js_1.simulateDepositERC20)(client, args),
        getOutputForL2Block: (args) => (0, getOutputForL2Block_js_1.getOutputForL2Block)(client, args),
        simulateProveWithdrawTransaction: (args) => (0, simulateProveWithdrawalTransaction_js_1.simulateProveWithdrawalTransaction)(client, args),
        getSecondsToNextL2Output: (args) => (0, getSecondsToNextL2Output_js_1.getSecondsToNextL2Output)(client, args),
        getSecondsToFinalizable: (args) => (0, getSecondsToFinalizable_js_1.getSecondsToFinalizable)(client, args),
        readProvenWithdrawals: (args) => (0, readProvenWithdrawals_js_1.readProvenWithdrawals)(client, args),
        readFinalizedWithdrawals: (args) => (0, readFinalizedWithdrawals_js_1.readFinalizedWithdrawals)(client, args),
        readOpStackL1: (args) => (0, readOpStackL1_js_1.readOpStackL1)(client, args),
    };
}
exports.publicL1OpStackActions = publicL1OpStackActions;
//# sourceMappingURL=publicL1OpStackActions.js.map